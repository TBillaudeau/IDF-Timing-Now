{"version":3,"file":"static/js/964.37404733.chunk.js","mappings":"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","sources":["components/breadcrumb.js","components/shared/Schedules.js","components/shared/lineMap.js","pages/StopInfo.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getStationNameByStationID, getLineNameByLineID } from '../utils/dataHelpers';\r\n\r\nfunction Breadcrumb({ lineID, stationID }) {\r\n  const navRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const resizeListener = () => {\r\n      const classList = navRef.current.classList;\r\n      classList.toggle('flex-col', navRef.current.offsetWidth <= 200);\r\n      classList.toggle('sm:flex-row', navRef.current.offsetWidth > 200);\r\n    };\r\n\r\n    window.addEventListener('resize', resizeListener);\r\n    resizeListener();\r\n\r\n    return () => window.removeEventListener('resize', resizeListener);\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"flex sm:flex-row h-10 pl-4 bg-white dark:bg-gray-800 dark:text-white border-b border-gray-700 dark:border-gray-400\" ref={navRef} aria-label=\"Breadcrumb\">\r\n      <ol className=\"inline-flex items-center space-x-1 md:space-x-3 flex-none\">\r\n        {lineID && (\r\n          <li>\r\n            <div className=\"flex items-center\">\r\n              <svg className=\"w-3 h-3 text-gray-400 xl:mx-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 9 4-4-4-4\" />\r\n              </svg>\r\n              <Link to={`/line/${lineID}`} className=\"mx-1 text-xs lg:text-sm font-medium hover:text-blue-600 md:ml-2\">\r\n                {getLineNameByLineID(lineID)}\r\n              </Link>\r\n              {stationID && (\r\n                <svg className=\"w-3 h-3 text-gray-400 xl:mx-1 mr-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                  <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 9 4-4-4-4\" />\r\n                </svg>\r\n              )}\r\n            </div>\r\n          </li>\r\n        )}\r\n      </ol>\r\n      {stationID && (\r\n        <ol className=\"inline-flex items-center space-x-1 md:space-x-3 w-full sm:w-auto\">\r\n          <li aria-current=\"page\">\r\n            <div className=\"flex items-center\">\r\n              <Link to={`/station/${stationID}`} className=\"text-xs lg:text-sm font-medium text-gray-500 hover:text-blue-600 md:ml-2 line-clamp-1\">\r\n                {getStationNameByStationID(stationID)}\r\n              </Link>\r\n            </div>\r\n          </li>\r\n        </ol>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Breadcrumb;","import React, { useEffect, useState } from 'react';\r\n\r\nfunction Schedules({ lineID, stationName }) {\r\n    const [trainData, setTrainData] = useState([]);\r\n\r\n    const fetchData = async (url) => {\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setTrainData(data);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const url = `https://api-iv.iledefrance-mobilites.fr/lines/line:IDFM:${lineID}/stops/stop_area:IDFM:${stationName}/schedules`;\r\n        fetchData(url);\r\n    }, [lineID, stationName]);\r\n\r\n\r\n\r\n     return (\r\n        <>\r\n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\r\n                {trainData.schedules && trainData.schedules.map((schedule) => (\r\n                    <div key={schedule.routeId} className=\"\">\r\n                        <div className=\"flex items-center text-white bg-gray-800 shadow-md py-2 px-4 mb-1\">\r\n                            <div className=\"flex-grow overflow-hidden\">\r\n                            </div>\r\n                            <div className=\"ml-1 lg:ml-5 text-right\">\r\n                            <p className=\"text-xs lg:text-sm font-medium\">{schedule.from}</p>\r\n                                <p className=\"text-xs lg:text-sm font-medium\">{schedule.to}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {schedule.first && (\r\n                            <div className=\"flex items-center bg-white shadow-md h-8 xl:h-10 p-3 lg:p-4 mb-1\">\r\n                                <div className=\"flex-grow overflow-hidden\">\r\n                                    <h2 className='font-medium text-xs lg:text-sm line-clamp-2'>\r\n                                    Premier départ :\r\n                                    </h2>\r\n                                </div>\r\n                                <div className=\"ml-1 lg:ml-5 text-right\">\r\n                                    <p className=\"text-xs lg:text-sm font-medium\">{schedule.first}</p>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {schedule.last && (\r\n                            <div className=\"flex items-center bg-white shadow-md h-8 xl:h-10 p-3 lg:p-4 mb-1\">\r\n                                <div className=\"flex-grow overflow-hidden\">\r\n                                    <h2 className='font-medium text-xs lg:text-sm line-clamp-2'>\r\n                                    Dernier départ :\r\n                                    </h2>\r\n                                </div>\r\n                                <div className=\"ml-1 lg:ml-5 text-right\">\r\n                                    <p className=\"text-xs lg:text-sm font-medium\">{schedule.last}</p>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                         <div className=\"flex items-center text-white bg-gray-800 shadow-md h-8 xl:h-10 p-2 lg:p-4 mb-1\">\r\n                            <div className=\"flex-grow overflow-hidden\">\r\n                                <h2 className='font-medium text-xs lg:text-sm line-clamp-2'>\r\n                                Tranche horaire\t\r\n                                </h2>\r\n                            </div>\r\n                            <div className=\"ml-1 lg:ml-5 text-right\">\r\n                                <p className=\"text-xs lg:text-sm font-medium\">Fréquence</p>\r\n                            </div>\r\n                        </div>\r\n                        {schedule.frequencies.map((frequency) => (\r\n                            <div key={frequency.periodStart} className=\"flex items-center bg-white shadow-md h-8 xl:h-10 p-3 lg:p-4 mb-1\">\r\n                                <div className=\"flex-grow overflow-hidden\">\r\n                                    <h2 className='font-medium text-xs lg:text-sm line-clamp-2'>\r\n                                        {frequency.periodStart && frequency.periodEnd\r\n                                            ? `${frequency.periodStart} - ${frequency.periodEnd}`\r\n                                            : frequency.periodStart\r\n                                                ? `Après ${frequency.periodStart}`\r\n                                                : frequency.periodEnd\r\n                                                    ? `Avant ${frequency.periodEnd}`\r\n                                                    : ''\r\n                                        }\r\n                                    </h2>\r\n                                </div>\r\n                                <div className=\"ml-1 lg:ml-5 text-right\">\r\n                                    <p className=\"text-sm lg:text-base font-semibold\">{frequency.first && frequency.last && `${frequency.first} - ${frequency.last} `}{frequency.frequency}<span className=\"text-xs lg:text-xs\">min</span></p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            \r\n            </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Schedules;","import React, { useEffect, useState } from 'react';\r\nimport tracesDesLignes from '../../data/traces-des-lignes.json';\r\nimport tracesDuReseauFerre from '../../data/traces-du-reseau-ferre-idf.json';\r\nimport arretsLignes from '../../data/arrets-lignes.json';\r\nimport { MapContainer, TileLayer, Marker, Tooltip, useMapEvents, useMap } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css'\r\nimport proj4 from 'proj4';\r\nimport { GeoJSON } from 'react-leaflet';\r\nimport L from 'leaflet';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nconst redIcon = new L.Icon({\r\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\r\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41]\r\n});\r\n\r\nconst greenIcon = new L.Icon({\r\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\r\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41]\r\n});\r\n\r\n// Define the Lambert II étendu and WGS84 projections\r\nconst lambert2e = \"+proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs\";\r\nconst wgs84 = \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\";\r\n\r\nfunction LineMap({ lineID, stationName }) {\r\n    const [trainData, setTrainData] = useState([]);\r\n    const [coordinates, setCoordinates] = useState([]);\r\n\r\n    const fetchData = async (url) => {\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n\r\n            setTrainData(data);\r\n\r\n            const [x, y] = proj4(lambert2e, wgs84, [data.stop.x, data.stop.y]);\r\n            setCoordinates([y, x])\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const url = `https://api-iv.iledefrance-mobilites.fr/lines/line:IDFM:${lineID}/stops/stop_area:IDFM:${stationName}/schedules`;\r\n        fetchData(url);\r\n    }, [lineID, stationName]);\r\n\r\n    const RecenterControl = () => {\r\n        const map = useMap();\r\n\r\n        useEffect(() => {\r\n            const control = new L.Control({ position: 'bottomleft' });\r\n\r\n            control.onAdd = () => {\r\n                const button = L.DomUtil.create('button', 'leaflet-bar leaflet-control leaflet-control-custom');\r\n                button.innerHTML = '<svg class=\"w-4 h-4\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 14 20\"><path d=\"M7 0a7 7 0 0 0-1 13.92V19a1 1 0 1 0 2 0v-5.08A7 7 0 0 0 7 0Zm0 5.5A1.5 1.5 0 0 0 5.5 7a1 1 0 0 1-2 0A3.5 3.5 0 0 1 7 3.5a1 1 0 0 1 0 2Z\"/></svg>';\r\n                button.style.cssText = 'background-color: white; padding: 6px; cursor: pointer;';\r\n                button.onclick = () => coordinates && map.flyTo(coordinates, 15);\r\n                return button;\r\n            };\r\n\r\n            control.addTo(map);\r\n\r\n            return () => control.remove();\r\n        }, [map]);\r\n\r\n        return null;\r\n    };\r\n\r\n\r\n    function createMarkers(trainData) {\r\n        const seenStops = new Set();\r\n        return arretsLignes\r\n            .filter(stop => stop.fields.id.split(':').pop() === lineID)\r\n            .map(stop => {\r\n                const isSeen = seenStops.has(stop.fields.stop_name);\r\n                seenStops.add(stop.fields.stop_name);\r\n\r\n                return stop.fields.stop_name === trainData.stop.name ? (\r\n                    <Marker key={stop.fields.stop_id} position={[stop.fields.stop_lat, stop.fields.stop_lon]} icon={redIcon}>\r\n                        <Tooltip permanent={!isSeen}>\r\n                            {stop.fields.stop_name}\r\n                        </Tooltip>\r\n                    </Marker>\r\n                ) : (\r\n                    <Marker key={stop.fields.stop_id} position={[stop.fields.stop_lat, stop.fields.stop_lon]}>\r\n                        <Tooltip>\r\n                            {stop.fields.stop_name}\r\n                        </Tooltip>\r\n                    </Marker>\r\n                );\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {trainData.stop && (\r\n\r\n                <MapContainer key={coordinates} className=\"h-72 z-0\" center={coordinates} zoom={15} scrollWheelZoom={true} attributionControl={false}>\r\n                    <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\" />\r\n\r\n\r\n                    <RecenterControl />\r\n\r\n                    {/* <Marker position={coordinates} icon={greenIcon}>\r\n                        <Tooltip permanent>\r\n                            {trainData.stop.name}\r\n                        </Tooltip>\r\n                    </Marker> */}\r\n\r\n                    {createMarkers(trainData)}\r\n\r\n                    {tracesDuReseauFerre.some(line => line.idrefligc === lineID) ? (\r\n                        tracesDuReseauFerre.filter(line => line.idrefligc === lineID).map((line, index) => (\r\n                            <GeoJSON key={index} data={line.geo_shape.geometry} style={{ color: '#' + line.colourweb_hexa }} />\r\n                        ))\r\n                    ) : (\r\n                        tracesDesLignes.filter(line => line.route_id.split(':').pop() === lineID).map((line, index) => (\r\n                            <GeoJSON key={index} data={line.shape.geometry} style={{ color: '#' + line.route_color }} />\r\n                        ))\r\n                    )}\r\n                </MapContainer>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LineMap;","import { useParams } from \"react-router-dom\";\r\nimport StationInfo from '../components/stationHeader';\r\nimport TrainInfo from '../components/Timing';\r\nimport Breadcrumb from \"../components/breadcrumb\";\r\nimport Schedules from \"../components/shared/Schedules\";\r\nimport LineMap from \"../components/shared/lineMap\";\r\n\r\nfunction StopInfo() {\r\n  const { lineID } = useParams();\r\n  const { stationID } = useParams();\r\n\r\n  return (\r\n\r\n    <div className='grid grid-cols-1 sm:grid-cols-2 gap-2 my-2 sm:m-6'>\r\n      <div className=\"xl:col-span-2\">\r\n        <Breadcrumb lineID={lineID} stationID={stationID} />\r\n      </div>\r\n      <div className=\"p-2\">\r\n        <StationInfo lineID={lineID} stationID={stationID} />\r\n        <TrainInfo lineID={lineID} stationName={stationID} />\r\n      </div>\r\n      <div className=\"lg:p-1\">\r\n        <Schedules lineID={lineID} stationName={stationID} />\r\n        <LineMap lineID={lineID} stationName={stationID} />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default StopInfo;"],"names":["_ref","lineID","stationID","navRef","useRef","useEffect","resizeListener","classList","current","toggle","offsetWidth","window","addEventListener","removeEventListener","_jsxs","className","ref","children","_jsx","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Link","to","concat","getLineNameByLineID","getStationNameByStationID","stationName","_useState","useState","_useState2","_slicedToArray","trainData","setTrainData","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","wrap","_context","prev","next","fetch","sent","json","t0","console","error","stop","_x","apply","arguments","_Fragment","schedules","map","schedule","from","first","last","frequencies","frequency","periodStart","periodEnd","routeId","L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","redIcon","iconSize","iconAnchor","popupAnchor","shadowSize","_useState3","_useState4","coordinates","setCoordinates","_proj","_proj2","x","y","proj4","RecenterControl","useMap","control","position","onAdd","button","create","innerHTML","style","cssText","onclick","flyTo","addTo","remove","MapContainer","center","zoom","scrollWheelZoom","attributionControl","TileLayer","seenStops","Set","arretsLignes","filter","fields","id","split","pop","isSeen","has","stop_name","add","name","Marker","stop_lat","stop_lon","icon","Tooltip","permanent","stop_id","createMarkers","tracesDuReseauFerre","some","line","idrefligc","index","GeoJSON","geo_shape","geometry","color","colourweb_hexa","tracesDesLignes","route_id","shape","route_color","useParams","Breadcrumb","StationInfo","TrainInfo","Schedules","LineMap"],"sourceRoot":""}