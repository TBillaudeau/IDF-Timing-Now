{"version":3,"file":"static/js/964.e0f09758.chunk.js","mappings":"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","sources":["components/Timing.js","components/breadcrumb.js","components/elements/fav.js","components/stationHeader.js","components/shared/Schedules.js","components/shared/lineMap.js","pages/StopInfo.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { removeGareDePrefix } from '../utils/stringUtils';\r\nimport { lineTypes } from '../components/Trafic';\r\nimport relations from '../data/relations.json';\r\nimport { LineLogoByLineID, getLineColorByLineID, getStationNameByStationID  } from '../utils/dataHelpers';\r\n\r\nfunction TrainInfo({ lineID, stationName, limit }) { //to= number=\r\n  const stationID = stationName;\r\n\r\n  // Fetch train departure every 2 seconds\r\n  const [trainData, setTrainData] = useState([]);\r\n  const [status, setStatus] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async (url) => {\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        const nextDepartures = data.nextDepartures.data;\r\n\r\n        if (nextDepartures.length === 0 || !nextDepartures.every(train => train.lineDirection)) {\r\n          setStatus('NO_REALTIME_SCHEDULES_FOUND');\r\n        } else {\r\n          const zoneAreas = [];\r\n          nextDepartures.forEach(train => {\r\n            if (lineTypes.TRAIN.includes(train.lineId)) { //\r\n              const correspondingRelation = relations.find(relation => relation.arrid === train.destination.stopPointId.split(':').pop());\r\n  \r\n              if (correspondingRelation) {\r\n                const zoneArea = correspondingRelation.zdcid;\r\n                if (!zoneAreas.includes(zoneArea)) {\r\n                  zoneAreas.push(zoneArea);\r\n                }\r\n              }\r\n            }\r\n          });\r\n\r\n          if (zoneAreas.length > 0) {\r\n            const fetchPromises = zoneAreas.map(zoneArea => {\r\n              const newURL = `https://api-iv.iledefrance-mobilites.fr/lines/line:IDFM:${lineID}/stops/stop_area:IDFM:${stationID}/to/stop_area:IDFM:${zoneArea}/realTime`;\r\n              console.log(newURL)\r\n              return fetch(newURL).then(response => response.json());\r\n            });\r\n\r\n          Promise.all(fetchPromises).then(results => {\r\n            let combinedNextDepartures = results.reduce((combined, result, index) => {\r\n              if (result && result.nextDepartures && result.nextDepartures.data) {\r\n                const zoneArea = zoneAreas[index];\r\n                const stationName = getStationNameByStationID(zoneArea);\r\n                result.nextDepartures.data.forEach(train => {\r\n                  if (!train.lineDirection) {\r\n                    train.lineDirection = stationName;\r\n                  }\r\n                });\r\n                return combined.concat(result.nextDepartures.data);\r\n              }\r\n              return combined;\r\n            }, []);\r\n          \r\n            // Sort the combinedNextDepartures array by the time property\r\n            combinedNextDepartures.sort((a, b) => parseInt(a.time) - parseInt(b.time));\r\n          \r\n            // Helper function to check for identical objects\r\n            const isIdentical = (obj1, obj2) => {\r\n              return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n            };\r\n          \r\n            // Remove identical objects from combinedNextDepartures\r\n            combinedNextDepartures = combinedNextDepartures.filter(\r\n              (value, index, self) => self.findIndex(obj => isIdentical(obj, value)) === index\r\n            );\r\n            \r\n            setTrainData(combinedNextDepartures);\r\n            setStatus(data.errorMessage);\r\n            });\r\n          } else {\r\n            setTrainData(nextDepartures);\r\n            setStatus(data.errorMessage);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        // Handle error\r\n      }\r\n    };\r\n\r\n    const url = `https://api-iv.iledefrance-mobilites.fr/lines/v2/line:IDFM:${lineID}/stops/stop_area:IDFM:${stationID}/realTime`;\r\n    console.log(url)\r\n    fetchData(url);\r\n\r\n    const intervalId = setInterval(() => {\r\n      fetchData(url);\r\n    }, 2000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [lineID, stationID]);\r\n\r\n\r\n  if (status === 'NO_REALTIME_SCHEDULES_FOUND') {\r\n    return <Link to={`/${lineID}/${stationID}`}><div className=\"shadow-[inset_0rem_0.2rem_0.4rem_0_rgb(0,0,0,0.1)] flex items-center justify-center text-center text-xs lg:text-base bg-white dark:bg-gray-700 dark:text-gray-200 p-4 mb-3 h-[44px] lg:h-[72px]\"><p className='animate-pulse'>Information en direct indisponible</p></div></Link>;\r\n  }\r\n\r\n  // Display loading animation\r\n  if (trainData.length === 0) {\r\n    return (\r\n      <div className=\"overflow-y-auto max-h-[27rem] animate-pulse\">\r\n        <div className=\"flex items-center bg-white dark:bg-gray-800 shadow-[inset_0rem_0.2rem_0.4rem_0_rgb(0,0,0,0.1)] h-[44px] lg:h-[72px] p-1 lg:p-4 mb-1 lg:mb-3\">\r\n          <div role=\"status\" class=\"flex items-center justify-center w-4 lg:w-10 h-4 lg:h-10 ml-1 lg:ml-0 mr-2 lg:mr-4 p-1 bg-gray-300 rounded-sm lg:rounded-lg dark:bg-gray-700\">\r\n            <svg class=\"w-5 h-5 text-gray-200 dark:text-gray-600\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 18\">\r\n              <path d=\"M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z\" />\r\n            </svg>\r\n          </div>\r\n\r\n          <div className=\"flex-grow\">\r\n            <div class=\"w-12 lg:w-24 h-1 lg:h-2.5 mb-1 lg:mb-2.5 bg-gray-300 rounded-full dark:bg-gray-600\"></div>\r\n            <div class=\"w-16 lg:w-32 h-1 lg:h-2 bg-gray-200 rounded-full dark:bg-gray-700\"></div>\r\n          </div>\r\n\r\n          <div className=\"ml-2 lg:ml-5 min-w-max pr-2 text-right\">\r\n            <div class=\"w-6 lg:w-12 h-1 lg:h-2.5 mb-1 lg:mb-2.5 mr-1 bg-gray-300 rounded-full dark:bg-gray-700\"></div>\r\n            <div class=\"w-4 lg:w-8 h-1 lg:h-2 mr-1 bg-gray-200 rounded-full float-right dark:bg-gray-700\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Display train departure\r\n  const groupedTrains = {};\r\n  trainData.forEach((train) => {\r\n    const sens = train.sens || 'other';\r\n    if (!groupedTrains[sens]) {\r\n      groupedTrains[sens] = [];\r\n    }\r\n    groupedTrains[sens].push(train);\r\n  });\r\n\r\n  return (\r\n    <div className=\"overflow-y-auto max-h-[27rem]\">\r\n      {Object.keys(groupedTrains).map((sens) => (\r\n        <div key={sens}>\r\n          {sens !== 'other' && (\r\n            <h2 className=\"text-xs font-bold mb-2\">\r\n              {sens === '1' ? '' : 'Direction -1'}\r\n            </h2>\r\n          )}\r\n          {groupedTrains[sens].map((train, index) => (\r\n            // <Link to={`/search?line=${lineID}&stop_area=${stationID}`}>\r\n            <Link to={`/${lineID}/${stationID}`}>\r\n            <div \r\n              key={train.time + index} \r\n              className=\"flex items-center bg-white border-gray-400 dark:text-white dark:bg-gray-800 min-h-[44px] max-h-[72px] p-1 lg:p-4 relative\" \r\n              style={{borderBottom: `2px solid #${getLineColorByLineID(lineID)}`}}\r\n            >\r\n              <div className='shrink-0'>\r\n                <LineLogoByLineID lineID={lineID} className=\"h-4 lg:h-10 pl-1 lg:pl-0\" />\r\n                <h3 className='text-[8px] lg:text-xs justify-center flex mx-auto mt-0.5 pl-0.5 lg:pl-0'>{removeGareDePrefix(train.vehicleName)}</h3>\r\n              </div>\r\n              <div className=\"flex-grow overflow-hidden\">\r\n                <h2 className='font-bold text-[11px] lg:text-lg line-clamp-2 ml-2 lg:ml-4'>{removeGareDePrefix(train.lineDirection)}</h2>\r\n              </div>\r\n              <div className=\"ml-1 lg:ml-5 pr-2 text-right\">\r\n                {train.code === 'message' ? (\r\n                    <p className=\"text-[10px] lg:text-base font-bold text-green-600 dark:text-green-500 whitespace-normal\">{train.schedule}</p>\r\n                ) : (\r\n                  <>\r\n                    <p className={`text-sm lg:text-2xl font-bold text-green-600 dark:text-green-500${train.time === '0' ? 'animate-pulse' : ''}`}>{train.time}<span className=\"text-xs lg:text-lg\">ᵐⁱⁿ</span></p>\r\n                    <p className=\"text-xs lg:text-sm text-right text-gray-400 dark:text-white\">{new Date(Date.now() + (train.code === 'message' ? train.schedule : train.time) * 60000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</p>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div \r\n                className=\"absolute top-0 right-0 bottom-0 left-0 lg:left-0 bg-gradient-to-r from-transparent to-white dark:to-gray-800\" \r\n                style={{\r\n                  backgroundImage: `linear-gradient(to right, transparent, rgba(${parseInt(getLineColorByLineID(lineID).slice(0, 2), 16)}, ${parseInt(getLineColorByLineID(lineID).slice(2, 4), 16)}, ${parseInt(getLineColorByLineID(lineID).slice(4, 6), 16)}, 0.1))`\r\n                }}\r\n              />\r\n            </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrainInfo;","import React, { useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getStationNameByStationID, getLineNameByLineID } from '../utils/dataHelpers';\r\n\r\nfunction Breadcrumb({ lineID, stationID }) {\r\n  const navRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const resizeListener = () => {\r\n      const classList = navRef.current.classList;\r\n      classList.toggle('flex-col', navRef.current.offsetWidth <= 200);\r\n      classList.toggle('sm:flex-row', navRef.current.offsetWidth > 200);\r\n    };\r\n\r\n    window.addEventListener('resize', resizeListener);\r\n    resizeListener();\r\n\r\n    return () => window.removeEventListener('resize', resizeListener);\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"flex sm:flex-row h-10 pl-4 bg-white dark:bg-gray-800 dark:text-white border-b border-gray-700 dark:border-gray-400\" ref={navRef} aria-label=\"Breadcrumb\">\r\n      <ol className=\"inline-flex items-center space-x-1 md:space-x-3 flex-none\">\r\n        {lineID && (\r\n          <li>\r\n            <div className=\"flex items-center\">\r\n              <svg className=\"w-3 h-3 text-gray-400 xl:mx-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 9 4-4-4-4\" />\r\n              </svg>\r\n              <Link to={`/line/${lineID}`} className=\"mx-1 text-xs lg:text-sm font-medium hover:text-blue-600 md:ml-2\">\r\n                {getLineNameByLineID(lineID)}\r\n              </Link>\r\n              {stationID && (\r\n                <svg className=\"w-3 h-3 text-gray-400 xl:mx-1 mr-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                  <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 9 4-4-4-4\" />\r\n                </svg>\r\n              )}\r\n            </div>\r\n          </li>\r\n        )}\r\n      </ol>\r\n      {stationID && (\r\n        <ol className=\"inline-flex items-center space-x-1 md:space-x-3 w-full sm:w-auto\">\r\n          <li aria-current=\"page\">\r\n            <div className=\"flex items-center\">\r\n              <Link to={`/station/${stationID}`} className=\"text-xs lg:text-sm font-medium text-gray-500 hover:text-blue-600 md:ml-2 line-clamp-1\">\r\n                {getStationNameByStationID(stationID)}\r\n              </Link>\r\n            </div>\r\n          </li>\r\n        </ol>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Breadcrumb;","import React, { useState } from 'react';\r\n\r\nconst AddFav = () => {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setClicked(!clicked);\r\n  };\r\n\r\n  // <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 22 20\">\r\n  //   <path d=\"M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z\"/>\r\n  // </svg>\r\n  return (\r\n    <button onClick={handleClick} aria-label={clicked ? 'Remove from favorites' : 'Add to favorites'}>\r\n      {clicked ? (\r\n        <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 14 20\">\r\n          <path d=\"M13 20a1 1 0 0 1-.64-.231L7 15.3l-5.36 4.469A1 1 0 0 1 0 19V2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v17a1 1 0 0 1-1 1Z\" />\r\n        </svg>\r\n      ) : (\r\n        <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 4 15\">\r\n          <path d=\"M3.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm0 6.041a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm0 5.959a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z\" />\r\n        </svg>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddFav;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { checkDisruptions } from './Trafic';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AddFav from './elements/fav'\r\nimport { getStationNameByStationID, getTransportByLineID, LineLogoByLineID } from '../utils/dataHelpers';\r\n\r\nfunction StationInfo({ lineID, stationID }) {\r\n    const navigate = useNavigate();\r\n    const handleNavigate = () => {\r\n        navigate(`/line/${lineID}`);\r\n    };\r\n\r\n    // Fetch & check disruptions\r\n    const [disruptedLines, setDisruptedLines] = useState([]);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchDisruptions = async () => {\r\n            const { disruptedLines } = await checkDisruptions();\r\n            setDisruptedLines(disruptedLines);\r\n        };\r\n\r\n        fetchDisruptions();\r\n    }, []);\r\n\r\n    // Check if line is disrupted\r\n    const disrupted = disruptedLines.some(line => line.lineId === 'line:IDFM:' + lineID && line.disrupted === true);\r\n\r\n    // Display station header\r\n    return (\r\n        <div className=\"flex items-center bg-white dark:bg-gray-800 dark:text-white border-gray-900 dark:border-gray-800 border-solid border p-2 lg:p-4 mb-2 lg:mb-4 rounded-b-lg shadow-md min-h-[52px]\" onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>\r\n            {disrupted && (\r\n                <span className=\"relative\">\r\n                    {isHovered && (\r\n                        <div data-popover id=\"popover-top\" role=\"tooltip\" className=\"absolute z-10 inline-block w-40 lg:w-80 text-sm text-gray-500 transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm opacity-100 dark:text-gray-400 dark:border-gray-600 dark:bg-gray-800\">\r\n                            <div className=\"px-3 py-2 bg-gray-100 border-b border-gray-200 rounded-t-lg dark:border-gray-600 dark:bg-gray-700 flex flex-row\">\r\n                                <h3 className=\"flex-grow font-semibold text-gray-900 dark:text-white\">{disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.cause}</h3>\r\n                            </div>\r\n                            <div className=\"px-3 py-2\">\r\n                                <p>{disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.title}</p>\r\n                                <a class=\"bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 hover:dark:bg-gray-600 font-medium rounded-lg text-xs px-3 mt-3 text-center inline-flex items-center cursor-pointer\" onClick={handleNavigate}>\r\n                                    <svg class=\"-ml-0.5 mr-2 h-3 w-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 14\">\r\n                                        <path d=\"M10 0C4.612 0 0 5.336 0 7c0 1.742 3.546 7 10 7 6.454 0 10-5.258 10-7 0-1.664-4.612-7-10-7Zm0 10a3 3 0 1 1 0-6 3 3 0 0 1 0 6Z\" />\r\n                                    </svg>\r\n                                    En savoir plus\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <span className=\"absolute top-[-1rem] right-[-0.4rem] lg:top-[-1.8rem] lg:right-[-0.7rem]\">\r\n                        <span className=\"relative flex h-3 w-3 lg:h-5 lg:w-5\">\r\n                            <span className={`animate-ping absolute inline-flex h-full w-full rounded-full opacity-75 ${disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.severity === 'BLOQUANTE' ? 'bg-red-600' : 'bg-yellow-400'}`}></span>\r\n                            <span className={`relative inline-flex rounded-full h-3 w-3 lg:h-5 lg:w-5 ${disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.severity === 'BLOQUANTE' ? 'bg-red-600' : 'bg-yellow-400'}`}></span>\r\n                        </span>\r\n                    </span>\r\n                </span>\r\n            )}\r\n            <img src={process.env.PUBLIC_URL + `/images/${getTransportByLineID(lineID)}${localStorage.theme === 'dark' ? '_LIGHT' : ''}.svg`} alt={getTransportByLineID(lineID)} className=\"h-5 lg:h-10 mr-1\" />\r\n            <LineLogoByLineID lineID={lineID} className=\"h-5 lg:h-10 mr-2 lg:mr-4\" />\r\n            <p className='text-xs lg:text-base font-medium flex-grow line-clamp-2'>{getStationNameByStationID(stationID)}</p>\r\n            <p className='text-slate-400 text-xs font-bold pr-0.5 lg:pr-2'>\r\n                <AddFav />\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StationInfo;","import React, { useEffect, useState } from 'react';\r\n\r\nfunction Schedules({ lineID, stationName }) {\r\n    const [trainData, setTrainData] = useState([]);\r\n\r\n    const fetchData = async (url) => {\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setTrainData(data);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const url = `https://api-iv.iledefrance-mobilites.fr/lines/line:IDFM:${lineID}/stops/stop_area:IDFM:${stationName}/schedules`;\r\n        fetchData(url);\r\n    }, [lineID, stationName]);\r\n\r\n\r\n\r\n     return (\r\n        <>\r\n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\r\n                {trainData.schedules && trainData.schedules.map((schedule) => (\r\n                    <div key={schedule.routeId} className=\"\">\r\n                        <div className=\"flex items-center text-white bg-gray-800 shadow-md py-2 px-4 mb-1\">\r\n                            <div className=\"flex-grow overflow-hidden\">\r\n                            </div>\r\n                            <div className=\"ml-1 lg:ml-5 text-right\">\r\n                            <p className=\"text-xs lg:text-sm font-medium\">{schedule.from}</p>\r\n                                <p className=\"text-xs lg:text-sm font-medium\">{schedule.to}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {schedule.first && (\r\n                            <div className=\"flex items-center bg-white shadow-md h-8 xl:h-10 p-3 lg:p-4 mb-1\">\r\n                                <div className=\"flex-grow overflow-hidden\">\r\n                                    <h2 className='font-medium text-xs lg:text-sm line-clamp-2'>\r\n                                    Premier départ :\r\n                                    </h2>\r\n                                </div>\r\n                                <div className=\"ml-1 lg:ml-5 text-right\">\r\n                                    <p className=\"text-xs lg:text-sm font-medium\">{schedule.first}</p>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {schedule.last && (\r\n                            <div className=\"flex items-center bg-white shadow-md h-8 xl:h-10 p-3 lg:p-4 mb-1\">\r\n                                <div className=\"flex-grow overflow-hidden\">\r\n                                    <h2 className='font-medium text-xs lg:text-sm line-clamp-2'>\r\n                                    Dernier départ :\r\n                                    </h2>\r\n                                </div>\r\n                                <div className=\"ml-1 lg:ml-5 text-right\">\r\n                                    <p className=\"text-xs lg:text-sm font-medium\">{schedule.last}</p>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                         <div className=\"flex items-center text-white bg-gray-800 shadow-md h-8 xl:h-10 p-2 lg:p-4 mb-1\">\r\n                            <div className=\"flex-grow overflow-hidden\">\r\n                                <h2 className='font-medium text-xs lg:text-sm line-clamp-2'>\r\n                                Tranche horaire\t\r\n                                </h2>\r\n                            </div>\r\n                            <div className=\"ml-1 lg:ml-5 text-right\">\r\n                                <p className=\"text-xs lg:text-sm font-medium\">Fréquence</p>\r\n                            </div>\r\n                        </div>\r\n                        {schedule.frequencies.map((frequency) => (\r\n                            <div key={frequency.periodStart} className=\"flex items-center bg-white shadow-md h-8 xl:h-10 p-3 lg:p-4 mb-1\">\r\n                                <div className=\"flex-grow overflow-hidden\">\r\n                                    <h2 className='font-medium text-xs lg:text-sm line-clamp-2'>\r\n                                        {frequency.periodStart && frequency.periodEnd\r\n                                            ? `${frequency.periodStart} - ${frequency.periodEnd}`\r\n                                            : frequency.periodStart\r\n                                                ? `Après ${frequency.periodStart}`\r\n                                                : frequency.periodEnd\r\n                                                    ? `Avant ${frequency.periodEnd}`\r\n                                                    : ''\r\n                                        }\r\n                                    </h2>\r\n                                </div>\r\n                                <div className=\"ml-1 lg:ml-5 text-right\">\r\n                                    <p className=\"text-sm lg:text-base font-semibold\">{frequency.first && frequency.last && `${frequency.first} - ${frequency.last} `}{frequency.frequency}<span className=\"text-xs lg:text-xs\">min</span></p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            \r\n            </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Schedules;","import React, { useEffect, useState } from 'react';\r\nimport tracesDesLignes from '../../data/traces-des-lignes.json';\r\nimport tracesDuReseauFerre from '../../data/traces-du-reseau-ferre-idf.json';\r\nimport arretsLignes from '../../data/arrets-lignes.json';\r\nimport { MapContainer, TileLayer, Marker, Tooltip, useMapEvents, useMap } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css'\r\nimport proj4 from 'proj4';\r\nimport { GeoJSON } from 'react-leaflet';\r\nimport L from 'leaflet';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nconst redIcon = new L.Icon({\r\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\r\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41]\r\n});\r\n\r\nconst greenIcon = new L.Icon({\r\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\r\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41]\r\n});\r\n\r\n// Define the Lambert II étendu and WGS84 projections\r\nconst lambert2e = \"+proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs\";\r\nconst wgs84 = \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\";\r\n\r\nfunction LineMap({ lineID, stationName }) {\r\n    const [trainData, setTrainData] = useState([]);\r\n    const [coordinates, setCoordinates] = useState([]);\r\n\r\n    const fetchData = async (url) => {\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n\r\n            setTrainData(data);\r\n\r\n            const [x, y] = proj4(lambert2e, wgs84, [data.stop.x, data.stop.y]);\r\n            setCoordinates([y, x])\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const url = `https://api-iv.iledefrance-mobilites.fr/lines/line:IDFM:${lineID}/stops/stop_area:IDFM:${stationName}/schedules`;\r\n        fetchData(url);\r\n    }, [lineID, stationName]);\r\n\r\n    const RecenterControl = () => {\r\n        const map = useMap();\r\n\r\n        useEffect(() => {\r\n            const control = new L.Control({ position: 'bottomleft' });\r\n\r\n            control.onAdd = () => {\r\n                const button = L.DomUtil.create('button', 'leaflet-bar leaflet-control leaflet-control-custom');\r\n                button.innerHTML = '<svg class=\"w-4 h-4\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 14 20\"><path d=\"M7 0a7 7 0 0 0-1 13.92V19a1 1 0 1 0 2 0v-5.08A7 7 0 0 0 7 0Zm0 5.5A1.5 1.5 0 0 0 5.5 7a1 1 0 0 1-2 0A3.5 3.5 0 0 1 7 3.5a1 1 0 0 1 0 2Z\"/></svg>';\r\n                button.style.cssText = 'background-color: white; padding: 6px; cursor: pointer;';\r\n                button.onclick = () => coordinates && map.flyTo(coordinates, 15);\r\n                return button;\r\n            };\r\n\r\n            control.addTo(map);\r\n\r\n            return () => control.remove();\r\n        }, [map]);\r\n\r\n        return null;\r\n    };\r\n\r\n\r\n    function createMarkers(trainData) {\r\n        const seenStops = new Set();\r\n        return arretsLignes\r\n            .filter(stop => stop.fields.id.split(':').pop() === lineID)\r\n            .map(stop => {\r\n                const isSeen = seenStops.has(stop.fields.stop_name);\r\n                seenStops.add(stop.fields.stop_name);\r\n\r\n                return stop.fields.stop_name === trainData.stop.name ? (\r\n                    <Marker key={stop.fields.stop_id} position={[stop.fields.stop_lat, stop.fields.stop_lon]} icon={redIcon}>\r\n                        <Tooltip permanent={!isSeen}>\r\n                            {stop.fields.stop_name}\r\n                        </Tooltip>\r\n                    </Marker>\r\n                ) : (\r\n                    <Marker key={stop.fields.stop_id} position={[stop.fields.stop_lat, stop.fields.stop_lon]}>\r\n                        <Tooltip>\r\n                            {stop.fields.stop_name}\r\n                        </Tooltip>\r\n                    </Marker>\r\n                );\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {trainData.stop && (\r\n\r\n                <MapContainer key={coordinates} className=\"h-72 z-0\" center={coordinates} zoom={15} scrollWheelZoom={true} attributionControl={false}>\r\n                    <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\" />\r\n\r\n\r\n                    <RecenterControl />\r\n\r\n                    {/* <Marker position={coordinates} icon={greenIcon}>\r\n                        <Tooltip permanent>\r\n                            {trainData.stop.name}\r\n                        </Tooltip>\r\n                    </Marker> */}\r\n\r\n                    {createMarkers(trainData)}\r\n\r\n                    {/* {tracesDuReseauFerre.some(line => line.idrefligc === lineID) ? (\r\n                        tracesDuReseauFerre.filter(line => line.idrefligc === lineID).map((line, index) => (\r\n                            <GeoJSON key={index} data={line.geo_shape.geometry} style={{ color: '#' + line.colourweb_hexa }} />\r\n                        ))\r\n                    ) : (\r\n                        tracesDesLignes.filter(line => line.route_id.split(':').pop() === lineID).map((line, index) => (\r\n                            <GeoJSON key={index} data={line.shape.geometry} style={{ color: '#' + line.route_color }} />\r\n                        ))\r\n                    )} */}\r\n                </MapContainer>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LineMap;","import { useParams } from \"react-router-dom\";\r\nimport StationInfo from '../components/stationHeader';\r\nimport TrainInfo from '../components/Timing';\r\nimport Breadcrumb from \"../components/breadcrumb\";\r\nimport Schedules from \"../components/shared/Schedules\";\r\nimport LineMap from \"../components/shared/lineMap\";\r\n\r\nfunction StopInfo() {\r\n  const { lineID } = useParams();\r\n  const { stationID } = useParams();\r\n\r\n  return (\r\n\r\n    <div className='grid grid-cols-1 sm:grid-cols-2 gap-2 sm:m-6'>\r\n      <div className=\"xl:col-span-2\">\r\n        <Breadcrumb lineID={lineID} stationID={stationID} />\r\n      </div>\r\n      <div className=\"p-2\">\r\n        <StationInfo lineID={lineID} stationID={stationID} />\r\n        <TrainInfo lineID={lineID} stationName={stationID} />\r\n      </div>\r\n      <div className=\"lg:p-1\">\r\n        <Schedules lineID={lineID} stationName={stationID} />\r\n        <LineMap lineID={lineID} stationName={stationID} />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default StopInfo;"],"names":["_ref","lineID","stationName","stationID","limit","_useState","useState","_useState2","_slicedToArray","trainData","setTrainData","_useState3","_useState4","status","setStatus","useEffect","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","nextDepartures","zoneAreas","fetchPromises","wrap","_context","prev","next","fetch","sent","json","length","every","train","lineDirection","forEach","lineTypes","TRAIN","includes","lineId","correspondingRelation","relations","find","relation","arrid","destination","stopPointId","split","pop","zoneArea","zdcid","push","map","newURL","concat","console","log","then","Promise","all","results","combinedNextDepartures","reduce","combined","result","index","getStationNameByStationID","sort","a","b","parseInt","time","filter","value","self","findIndex","obj","obj1","obj2","JSON","stringify","errorMessage","t0","stop","_x","apply","arguments","intervalId","setInterval","clearInterval","_jsx","Link","to","children","className","_jsxs","role","class","xmlns","fill","viewBox","d","groupedTrains","sens","Object","keys","style","borderBottom","getLineColorByLineID","LineLogoByLineID","removeGareDePrefix","vehicleName","code","schedule","_Fragment","Date","now","toLocaleTimeString","hour","minute","backgroundImage","slice","navRef","useRef","resizeListener","classList","current","toggle","offsetWidth","window","addEventListener","removeEventListener","ref","stroke","strokeLinecap","strokeLinejoin","strokeWidth","getLineNameByLineID","clicked","setClicked","onClick","_disruptedLines$find","_disruptedLines$find2","_disruptedLines$find3","_disruptedLines$find4","navigate","useNavigate","disruptedLines","setDisruptedLines","isHovered","setIsHovered","fetchDisruptions","_yield$checkDisruptio","checkDisruptions","disrupted","some","line","onMouseEnter","onMouseLeave","id","disruption","cause","title","severity","src","process","getTransportByLineID","localStorage","theme","alt","AddFav","error","schedules","from","first","last","frequencies","frequency","periodStart","periodEnd","routeId","L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","redIcon","iconSize","iconAnchor","popupAnchor","shadowSize","coordinates","setCoordinates","_proj","_proj2","x","y","proj4","RecenterControl","useMap","control","position","onAdd","button","create","innerHTML","cssText","onclick","flyTo","addTo","remove","MapContainer","center","zoom","scrollWheelZoom","attributionControl","TileLayer","seenStops","Set","arretsLignes","fields","isSeen","has","stop_name","add","name","Marker","stop_lat","stop_lon","icon","Tooltip","permanent","stop_id","createMarkers","useParams","Breadcrumb","StationInfo","TrainInfo","Schedules","LineMap"],"sourceRoot":""}