{"version":3,"file":"static/js/801.ff7b9ae0.chunk.js","mappings":"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","sources":["components/elements/fav.js","components/stationHeader.js","pages/Chatelet.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddFav = () => {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setClicked(!clicked);\r\n  };\r\n\r\n  // <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 22 20\">\r\n  //   <path d=\"M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z\"/>\r\n  // </svg>\r\n  return (\r\n    <button onClick={handleClick} aria-label={clicked ? 'Remove from favorites' : 'Add to favorites'}>\r\n      {clicked ? (\r\n        <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 14 20\">\r\n          <path d=\"M13 20a1 1 0 0 1-.64-.231L7 15.3l-5.36 4.469A1 1 0 0 1 0 19V2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v17a1 1 0 0 1-1 1Z\" />\r\n        </svg>\r\n      ) : (\r\n        <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 4 15\">\r\n          <path d=\"M3.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm0 6.041a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm0 5.959a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z\" />\r\n        </svg>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddFav;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { checkDisruptions } from './Trafic';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AddFav from './elements/fav'\r\nimport { getStationNameByStationID, getTransportByLineID, LineLogoByLineID } from '../utils/dataHelpers';\r\n\r\nfunction StationInfo({ lineID, stationID }) {\r\n    const navigate = useNavigate();\r\n    const handleNavigate = () => {\r\n        navigate(`/line/${lineID}`);\r\n    };\r\n\r\n    // Fetch & check disruptions\r\n    const [disruptedLines, setDisruptedLines] = useState([]);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchDisruptions = async () => {\r\n            const { disruptedLines } = await checkDisruptions();\r\n            setDisruptedLines(disruptedLines);\r\n        };\r\n\r\n        fetchDisruptions();\r\n    }, []);\r\n\r\n    // Check if line is disrupted\r\n    const disrupted = disruptedLines.some(line => line.lineId === 'line:IDFM:' + lineID && line.disrupted === true);\r\n\r\n    // Display station header\r\n    return (\r\n        <div className=\"flex items-center bg-white dark:bg-gray-800 dark:text-white border-gray-900 dark:border-gray-800 border-solid border p-2 lg:p-4 mb-2 lg:mb-4 rounded-b-lg shadow-md min-h-[52px]\" onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>\r\n            {disrupted && (\r\n                <span className=\"relative\">\r\n                    {isHovered && (\r\n                        <div data-popover id=\"popover-top\" role=\"tooltip\" className=\"absolute z-10 inline-block w-40 lg:w-80 text-sm text-gray-500 transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm opacity-100 dark:text-gray-400 dark:border-gray-600 dark:bg-gray-800\">\r\n                            <div className=\"px-3 py-2 bg-gray-100 border-b border-gray-200 rounded-t-lg dark:border-gray-600 dark:bg-gray-700 flex flex-row\">\r\n                                <h3 className=\"flex-grow font-semibold text-gray-900 dark:text-white\">{disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.cause}</h3>\r\n                            </div>\r\n                            <div className=\"px-3 py-2\">\r\n                                <p>{disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.title}</p>\r\n                                <a class=\"bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 hover:dark:bg-gray-600 font-medium rounded-lg text-xs px-3 mt-3 text-center inline-flex items-center cursor-pointer\" onClick={handleNavigate}>\r\n                                    <svg class=\"-ml-0.5 mr-2 h-3 w-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 14\">\r\n                                        <path d=\"M10 0C4.612 0 0 5.336 0 7c0 1.742 3.546 7 10 7 6.454 0 10-5.258 10-7 0-1.664-4.612-7-10-7Zm0 10a3 3 0 1 1 0-6 3 3 0 0 1 0 6Z\" />\r\n                                    </svg>\r\n                                    En savoir plus\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <span className=\"absolute top-[-1rem] right-[-0.4rem] lg:top-[-1.8rem] lg:right-[-0.7rem]\">\r\n                        <span className=\"relative flex h-3 w-3 lg:h-5 lg:w-5\">\r\n                            <span className={`animate-ping absolute inline-flex h-full w-full rounded-full opacity-75 ${disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.severity === 'BLOQUANTE' ? 'bg-red-600' : 'bg-yellow-400'}`}></span>\r\n                            <span className={`relative inline-flex rounded-full h-3 w-3 lg:h-5 lg:w-5 ${disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.severity === 'BLOQUANTE' ? 'bg-red-600' : 'bg-yellow-400'}`}></span>\r\n                        </span>\r\n                    </span>\r\n                </span>\r\n            )}\r\n            <img src={process.env.PUBLIC_URL + `/images/${getTransportByLineID(lineID)}${localStorage.theme === 'dark' ? '_LIGHT' : ''}.svg`} alt={getTransportByLineID(lineID)} className=\"h-5 lg:h-10 mr-1\" />\r\n            <LineLogoByLineID lineID={lineID} className=\"h-5 lg:h-10 mr-2 lg:mr-4\" />\r\n            <p className='text-xs lg:text-base font-medium flex-grow line-clamp-2'>{getStationNameByStationID(stationID)}</p>\r\n            <p className='text-slate-400 text-xs font-bold pr-0.5 lg:pr-2'>\r\n                <AddFav />\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StationInfo;","import StationInfo from '../components/stationHeader';\r\nimport TrainInfo from '../components/Timing';\r\n\r\nconst stations = [\r\n  {\r\n    transportLogo: \"RER\",\r\n    lineID: \"C01742\", // RER A\r\n    stationCode: \"474151\", // Châtelet-Les Halles\r\n    stationName: \"Châtelet-Les Halles\"\r\n  },\r\n  {\r\n    transportLogo: \"RER\",\r\n    lineID: \"C01743\", // RER B\r\n    stationCode: \"474151\", // Châtelet-Les Halles\r\n    stationName: \"Châtelet-Les Halles\"\r\n  },\r\n  {\r\n    transportLogo: \"RER\",\r\n    lineID: \"C01728\", // RER D\r\n    stationCode: \"474151\", // Châtelet-Les Halles\r\n    stationName: \"Châtelet-Les Halles\"\r\n  },\r\n  {\r\n    transportLogo: \"METRO\",\r\n    lineID: \"C01377\", // LIGNE 7\r\n    stationCode: \"71264\", // Châtelet\r\n    stationName: \"Châtelet\"\r\n  },\r\n  {\r\n    transportLogo: \"METRO\",\r\n    lineID: \"C01371\", // LIGNE 1\r\n    stationCode: \"71517\", // Châtelet\r\n    stationName: \"Châtelet\"\r\n  },\r\n  {\r\n    transportLogo: \"METRO\",\r\n    lineID: \"C01374\", // LIGNE 4\r\n    stationCode: \"73794\", // Les Halles\r\n    stationName: \"Les Halles\"\r\n  }\r\n];\r\n\r\nfunction Chatelet() {\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-2 sm:grid-cols-2 lg:grid-cols-3\">\r\n      {stations.map((station, index) => (\r\n        <div key={index} className=\"m-2 sm:m-6\">\r\n          <StationInfo lineID={station.lineID} stationID={station.stationCode}/>\r\n          <TrainInfo lineID={station.lineID} stationName={station.stationCode} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Chatelet;"],"names":["_useState","useState","_useState2","_slicedToArray","clicked","setClicked","_jsx","onClick","children","class","xmlns","fill","viewBox","d","_ref","_disruptedLines$find","_disruptedLines$find2","_disruptedLines$find3","_disruptedLines$find4","lineID","stationID","navigate","useNavigate","disruptedLines","setDisruptedLines","_useState3","_useState4","isHovered","setIsHovered","useEffect","fetchDisruptions","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$checkDisruptio","wrap","_context","prev","next","checkDisruptions","sent","stop","apply","arguments","disrupted","some","line","lineId","_jsxs","className","onMouseEnter","onMouseLeave","id","role","find","disruption","cause","title","concat","severity","src","process","getTransportByLineID","localStorage","theme","alt","LineLogoByLineID","getStationNameByStationID","AddFav","stations","transportLogo","stationCode","stationName","map","station","index","StationInfo","TrainInfo"],"sourceRoot":""}