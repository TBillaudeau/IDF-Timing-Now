{"version":3,"file":"static/js/638.5fb05352.chunk.js","mappings":"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","sources":["../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/index.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/lib/projections/geos.js","../node_modules/proj4/lib/index.js","../node_modules/proj4/projs.js","../node_modules/react-leaflet/lib/GeoJSON.js","../node_modules/react-leaflet/lib/Marker.js","../node_modules/react-leaflet/lib/Tooltip.js"],"sourcesContent":["export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON({ data , ...options }, ctx) {\n    const geoJSON = new LeafletGeoJSON(data, options);\n    return createElementObject(geoJSON, extendContext(ctx, {\n        overlayContainer: geoJSON\n    }));\n}, function updateGeoJSON(layer, props, prevProps) {\n    if (props.style !== prevProps.style) {\n        if (props.style == null) {\n            layer.resetStyle();\n        } else {\n            layer.setStyle(props.style);\n        }\n    }\n});\n","import { createElementObject, createLayerComponent, extendContext } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({ position , ...options }, ctx) {\n    const marker = new LeafletMarker(position, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, function updateMarker(marker, props, prevProps) {\n    if (props.position !== prevProps.position) {\n        marker.setLatLng(props.position);\n    }\n    if (props.icon != null && props.icon !== prevProps.icon) {\n        marker.setIcon(props.icon);\n    }\n    if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n        marker.setZIndexOffset(props.zIndexOffset);\n    }\n    if (props.opacity != null && props.opacity !== prevProps.opacity) {\n        marker.setOpacity(props.opacity);\n    }\n    if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n        if (props.draggable === true) {\n            marker.dragging.enable();\n        } else {\n            marker.dragging.disable();\n        }\n    }\n});\n","import { createElementObject, createOverlayComponent } from '@react-leaflet/core';\nimport { Tooltip as LeafletTooltip } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Tooltip = createOverlayComponent(function createTooltip(props, context) {\n    const tooltip = new LeafletTooltip(props, context.overlayContainer);\n    return createElementObject(tooltip, context);\n}, function useTooltipLifecycle(element, context, { position  }, setOpen) {\n    useEffect(function addTooltip() {\n        const container = context.overlayContainer;\n        if (container == null) {\n            return;\n        }\n        const { instance  } = element;\n        const onTooltipOpen = (event)=>{\n            if (event.tooltip === instance) {\n                if (position != null) {\n                    instance.setLatLng(position);\n                }\n                instance.update();\n                setOpen(true);\n            }\n        };\n        const onTooltipClose = (event)=>{\n            if (event.tooltip === instance) {\n                setOpen(false);\n            }\n        };\n        container.on({\n            tooltipopen: onTooltipOpen,\n            tooltipclose: onTooltipClose\n        });\n        container.bindTooltip(instance);\n        return function removeTooltip() {\n            container.off({\n                tooltipopen: onTooltipOpen,\n                tooltipclose: onTooltipClose\n            });\n            // @ts-ignore protected property\n            if (container._map != null) {\n                container.unbindTooltip();\n            }\n        };\n    }, [\n        element,\n        context,\n        setOpen,\n        position\n    ]);\n});\n"],"names":["PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","ft","to_meter","ignoredChar","match","obj","key","testkey","keys","Object","lkey","toLowerCase","replace","i","length","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","txt","parser","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","text","Error","this","level","place","root","stack","currentObject","state","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","d2r","input","wkt","lisp","type","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","slice","sphere","ellps","TOWGS84","isFinite","forEach","outName","inName","rename","cleanWKT","defs","that","arguments","def","charAt","parseProj","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","globals","codeWords","codes","code","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","projStr","testProj","destination","source","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","e","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","projStore","add","len","n","start","get","ellipseName","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","ep2","datum_type","grids","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","end","String","fromCharCode","Uint8Array","buffer","mapNodes","nodes","r","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","Datum","sphere_","Ellipsoid","dc_sphere","ecc","a2","b2","dc_eccentricity","getNadgrids","datumObj","extend","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","checkParams","dest","point","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","Number","NaN","attemptedGrids","outer","subgrids","j","jj","subgrid","epsilon","del","minX","ll","minY","maxX","lim","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","inx","indx","floor","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","TypeError","transform","enforceAxis","hasZ","toPoint","checkSanity","checkNotWGS","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","getLetter100kID","get100kID","encode","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","round","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","LetterDesignator","mgrsString","testChar","hunK","sb","substring","set","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","MAX_ITER","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","hr","hi1","hr1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","projectionName","isTypeA","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","P00","P01","P02","P10","P11","P20","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","beta","authlat","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","FACE_ENUM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","proj4","defaultDatum","Proj","common","nadgrid","data","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","version","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","includedProjections","GeoJSON","createPathComponent","_ref","ctx","options","_objectWithoutProperties","_excluded","geoJSON","LeafletGeoJSON","createElementObject","extendContext","overlayContainer","layer","props","prevProps","style","resetStyle","setStyle","Marker","createLayerComponent","position","marker","LeafletMarker","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","Tooltip","createOverlayComponent","context","tooltip","LeafletTooltip","element","setOpen","useEffect","container","instance","onTooltipOpen","event","update","onTooltipClose","on","tooltipopen","tooltipclose","bindTooltip","off","_map","unbindTooltip"],"sourceRoot":""}