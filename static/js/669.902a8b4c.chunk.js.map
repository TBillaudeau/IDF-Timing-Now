{"version":3,"file":"static/js/669.902a8b4c.chunk.js","mappings":"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","sources":["../node_modules/react-leaflet/lib/Polyline.js","components/JourneyDetails.js","pages/Itineraire.js","../node_modules/react-leaflet/lib/Marker.js"],"sourcesContent":["import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport const Polyline = createPathComponent(function createPolyline({ positions , ...options }, ctx) {\n    const polyline = new LeafletPolyline(positions, options);\n    return createElementObject(polyline, extendContext(ctx, {\n        overlayContainer: polyline\n    }));\n}, function updatePolyline(layer, props, prevProps) {\n    if (props.positions !== prevProps.positions) {\n        layer.setLatLngs(props.positions);\n    }\n});\n","import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { LatLng } from 'leaflet';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { convertTransportMode } from '../utils/stringUtils';\r\n\r\nfunction JourneyDetails({ journeyData }) {\r\n    // Helper function to format date and time\r\n    const formatDateTime = (dateTime) => {\r\n        const date = new Date(dateTime);\r\n        if (!isNaN(date.getTime())) {\r\n            return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\r\n        }\r\n        return 'Unavailable';\r\n    };\r\n\r\n    // Extract coordinates and create markers for each section\r\n    const sectionDetails = journeyData.sections.map((section, index) => {\r\n        const coordinates = section.geojson?.coordinates.map(([lng, lat]) => [lat, lng]) || [];\r\n        const color = section.display_informations && section.display_informations.color ? `#${section.display_informations.color}` : '#333333'; // Default to a dark color if not specified\r\n        const markerPosition = coordinates[0] || null; // First coordinate as marker position\r\n\r\n        return {\r\n            index,\r\n            coordinates,\r\n            color,\r\n            markerPosition,\r\n            lineName: section.display_informations?.code || `Line ${index + 1}`,\r\n            lineID: section.links[1]?.id,\r\n            from: section.from,\r\n            to: section.to,\r\n            terminus: section.display_informations?.direction || 'Unknown',\r\n            mode: section.display_informations?.commercial_mode || section.mode,\r\n            departure: new Date(section.departure_date_time.replace(/(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2})/, \"$1-$2-$3T$4:$5:$6Z\")).toLocaleString(),\r\n            arrival: new Date(section.arrival_date_time.replace(/(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2})/, \"$1-$2-$3T$4:$5:$6Z\")).toLocaleString(),\r\n            duration: Math.ceil(section.duration / 60),\r\n        };\r\n    });\r\n\r\n    // Helper function to format the total duration\r\n    const formatDuration = (seconds) => {\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        return hours === 0 ? `${minutes} min` : `${hours} h ${minutes} min`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-4xl mx-auto p-2\">\r\n            <h2 className=\"text-2xl font-bold text-center mb-6\">Journey Overview</h2>\r\n\r\n            <div className=\"bg-white shadow-lg rounded-lg p-6 mb-6\">\r\n                <h3 className=\"text-xl font-semibold mb-4\">Basic Information</h3>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                    <p><strong>Departure:</strong> {formatDateTime(journeyData.departure_date_time)}</p>\r\n                    <p><strong>Arrival:</strong> {formatDateTime(journeyData.arrival_date_time)}</p>\r\n                    <p><strong>Duration:</strong> {Math.ceil(journeyData.durations.total / 60)} minutes</p>\r\n                    <p><strong>Walking distance:</strong> {journeyData.distances.walking} meters</p>\r\n                    <p><strong>CO2 Emission:</strong> {journeyData.co2_emission.value} {journeyData.co2_emission.unit}</p>\r\n                </div>\r\n            </div>\r\n\r\n            {sectionDetails.length > 0 && (\r\n                <div>\r\n                    <h3 className=\"text-lg font-semibold mb-4\">Journey Path</h3>\r\n                    <MapContainer \r\n                        style={{ height: '400px', width: '100%' }} \r\n                        center={[\r\n                            (sectionDetails[0].coordinates[0][0] + sectionDetails[sectionDetails.length - 1].coordinates[0][0]) / 2,\r\n                            (sectionDetails[0].coordinates[0][1] + sectionDetails[sectionDetails.length - 1].coordinates[0][1]) / 2\r\n                        ]}\r\n                        zoom={new LatLng(sectionDetails[0].coordinates[0][0], sectionDetails[0].coordinates[0][1]).distanceTo(new LatLng(sectionDetails[sectionDetails.length - 1].coordinates[0][0], sectionDetails[sectionDetails.length - 1].coordinates[0][1])) < 1000 ? 13 : new LatLng(sectionDetails[0].coordinates[0][0], sectionDetails[0].coordinates[0][1]).distanceTo(new LatLng(sectionDetails[sectionDetails.length - 1].coordinates[0][0], sectionDetails[sectionDetails.length - 1].coordinates[0][1])) < 5000 ? 12 : new LatLng(sectionDetails[0].coordinates[0][0], sectionDetails[0].coordinates[0][1]).distanceTo(new LatLng(sectionDetails[sectionDetails.length - 1].coordinates[0][0], sectionDetails[sectionDetails.length - 1].coordinates[0][1])) < 10000 ? 11 : 10}\r\n                        attributionControl={false}\r\n                    >                       \r\n                        <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\" />\r\n                        {sectionDetails.map((section, idx) => (\r\n                            <React.Fragment key={idx}>\r\n                                <Polyline positions={section.coordinates} color={section.color} />\r\n                                {section.coordinates[0] && section.duration > 1 && (\r\n                                    <>\r\n                                        {section.lineID && (\r\n                                            <Marker \r\n                                                position={section.coordinates[0]} \r\n                                                icon={L.icon({\r\n                                                    iconUrl: process.env.PUBLIC_URL + `/images/${section.lineID.split(\":\").pop()}.svg`,\r\n                                                    iconSize: [25, ], // size of the icon\r\n                                                    iconAnchor: [10, 20], // point of the icon which will correspond to marker's location\r\n                                                    popupAnchor: [0, -40] // point from which the popup should open relative to the iconAnchor\r\n                                                })}\r\n                                            />\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </MapContainer>\r\n                </div>\r\n            )}\r\n\r\n            {sectionDetails.map((section, index) => {\r\n                const isCorrespondence = section.from && section.to && section.from.name === section.to.name;\r\n                const isWaitingTime = !section.from && !section.to && section.duration;\r\n                const color = section.color;\r\n\r\n                return (\r\n                    <div key={section.index} className=\"bg-white relative flex p-6\">\r\n                        <div className=\"mr-4 w-20\">\r\n                            <div style={{backgroundColor: color}} className=\"absolute top-16 w-1 h-full\"></div>\r\n                            <div className=\"flex items-center mb-2\">\r\n                                <img src={process.env.PUBLIC_URL + `/images/${convertTransportMode(section.mode)}${localStorage.theme === 'dark' ? '_LIGHT' : ''}.svg`} alt={convertTransportMode(section.mode)} className=\"h-5 lg:h-10 mr-1\" />\r\n                                {section.lineID && <img src={process.env.PUBLIC_URL + `/images/${section.lineID.split(\":\").pop()}.svg`} alt={section.lineID.split(\":\").pop()} className=\"h-5 lg:h-10 mr-2 lg:mr-4\" />}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            {isCorrespondence ? (\r\n                                <p>Correspondance - {section.duration} minutes</p>\r\n                            ) : isWaitingTime ? (\r\n                                <p>Temps d'attente : {section.duration} minutes</p>\r\n                            ) : (\r\n                                <>\r\n                                    <div className=\"flex justify-between\">\r\n                                        <p>{section.from?.name}</p>\r\n                                        <p>{section.departure}</p>\r\n                                    </div>\r\n                                    <p><strong>Terminus:</strong> {section.terminus}</p>\r\n                                    <div className=\"flex justify-between\">\r\n                                        <p>{section.to?.name}</p>\r\n                                        <p>{section.arrival}</p>\r\n                                    </div>\r\n                                    <p><strong>Duration:</strong> {section.duration} minutes</p>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JourneyDetails;","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { convertTransportMode } from '../utils/stringUtils';\r\nimport JourneyDetails from \"../components/JourneyDetails\";\r\n\r\nfunction Trip() {\r\n    let params = new URLSearchParams(useLocation().search);\r\n    let from = params.get('from');\r\n    let to = params.get('to');\r\n\r\n    const [trainData, setTrainData] = useState([]);\r\n    const [selectedJourney, setSelectedJourney] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchLineData = async () => {\r\n            const response = await fetch(`https://prim.iledefrance-mobilites.fr/marketplace/navitia/coverage/fr-idf/journeys?from=${from}&to=${to}`, {\r\n                headers: {\r\n                    'apikey': process.env.REACT_APP_IDFM_API_KEY\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n            setTrainData(data.journeys ? data.journeys : []);\r\n        };\r\n\r\n        fetchLineData();\r\n    }, []);\r\n\r\n    const handleJourneySelect = (journey) => {\r\n        setSelectedJourney(journey);\r\n    };\r\n\r\n    // Helper function to format the total duration\r\n    const formatDuration = (seconds) => {\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        return hours === 0 ? `${minutes} min` : `${hours} h ${minutes} min`;\r\n    };\r\n\r\n    // Helper function to format the cost\r\n    const formatCost = (fare) => {\r\n        if (!fare.found) return 'Not available';\r\n        return `${(fare.total.value / 100).toFixed(2)} ${fare.total.currency === 'centime' ? 'EUR' : fare.total.currency}`;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {trainData.length > 0 ? (\r\n                <div>\r\n                    {trainData.map((journey, index) => {\r\n                        const totalDuration = formatDuration(journey.durations.total);\r\n                        const totalCost = formatCost(journey.fare);\r\n                        const departureTime = new Date(new Date(journey.departure_date_time.replace(/(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2})/, \"$1-$2-$3T$4:$5:$6Z\")).getTime() - 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n                        const arrivalTime = new Date(new Date(journey.arrival_date_time.replace(/(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2})/, \"$1-$2-$3T$4:$5:$6Z\")).getTime() - 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n                        return (\r\n                            <div key={index} className=\"flex flex-col mb-4 p-2 border rounded bg-white dark:bg-gray-800 dark:text-white cursor-pointer\" onClick={() => handleJourneySelect(journey)}>\r\n                                <div className=\"flex overflow-x-auto py-2\">\r\n                                    {journey.sections.map((section, idx) => (\r\n                                        <React.Fragment key={idx}>\r\n                                            <div className='flex items-center gap-1 shrink-0'>\r\n                                                {section.display_informations?.commercial_mode || section.mode ? (\r\n                                                    section.mode !== 'walking' || (section.mode === 'walking' && section.duration >= 60) ? (\r\n                                                        <img src={process.env.PUBLIC_URL + `/images/${convertTransportMode(section.display_informations?.commercial_mode  || section.mode )}${localStorage.theme === 'dark' ? '_LIGHT' : ''}.svg`} alt={convertTransportMode(section.display_informations?.commercial_mode )} className=\"h-6 lg:h-10\" />\r\n                                                    ) : null\r\n                                                ) : null}\r\n                                                {section.links[1]?.id ? (\r\n                                                    <img src={process.env.PUBLIC_URL + `/images/${section.links[1]?.id.split(\":\").pop()}.svg`} alt={section.links[1]?.id.split(\":\").pop()} className=\"h-6 lg:h-10\" />\r\n                                                ) : null}\r\n                                                {idx < journey.sections.length - 1 && (section.display_informations?.commercial_mode || section.mode || section.links[1]?.id) && (\r\n                                                    section.mode !== 'walking' || (section.mode === 'walking' && section.duration >= 60) ? (\r\n                                                        idx !== journey.sections.length - 2 ? (\r\n                                                            <svg className=\"w-2 h-2 mr-0.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 8 14\">\r\n                                                                <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 13 5.7-5.326a.909.909 0 0 0 0-1.348L1 1\"/>\r\n                                                            </svg>\r\n                                                        ) : null\r\n                                                    ) : null\r\n                                                )}\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                </div>\r\n                                <div className=\"flex justify-between items-center\">\r\n                                    <p className='text-sm'>{totalCost}</p>\r\n                                    <div className='text-right'>\r\n                                        <p><strong>{totalDuration}</strong></p>\r\n                                        <p className='text-sm'>{departureTime} - {arrivalTime}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            ) : (\r\n                <p>Loading journey details...</p>\r\n            )}\r\n\r\n            {selectedJourney && <JourneyDetails journeyData={selectedJourney} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Trip;","import { createElementObject, createLayerComponent, extendContext } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({ position , ...options }, ctx) {\n    const marker = new LeafletMarker(position, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, function updateMarker(marker, props, prevProps) {\n    if (props.position !== prevProps.position) {\n        marker.setLatLng(props.position);\n    }\n    if (props.icon != null && props.icon !== prevProps.icon) {\n        marker.setIcon(props.icon);\n    }\n    if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n        marker.setZIndexOffset(props.zIndexOffset);\n    }\n    if (props.opacity != null && props.opacity !== prevProps.opacity) {\n        marker.setOpacity(props.opacity);\n    }\n    if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n        if (props.draggable === true) {\n            marker.dragging.enable();\n        } else {\n            marker.dragging.disable();\n        }\n    }\n});\n"],"names":["Polyline","createPathComponent","_ref","ctx","positions","options","_objectWithoutProperties","_excluded","polyline","LeafletPolyline","createElementObject","extendContext","overlayContainer","layer","props","prevProps","setLatLngs","journeyData","formatDateTime","dateTime","date","Date","isNaN","getTime","concat","toLocaleDateString","toLocaleTimeString","sectionDetails","sections","map","section","index","_section$geojson","_section$display_info","_section$links$","_section$display_info2","_section$display_info3","coordinates","geojson","_ref2","_ref3","_slicedToArray","lng","color","display_informations","markerPosition","lineName","code","lineID","links","id","from","to","terminus","direction","mode","commercial_mode","departure","departure_date_time","replace","toLocaleString","arrival","arrival_date_time","duration","Math","ceil","_jsxs","className","children","_jsx","durations","total","distances","walking","co2_emission","value","unit","length","MapContainer","style","height","width","center","zoom","LatLng","distanceTo","attributionControl","TileLayer","url","idx","React","_Fragment","Marker","position","icon","L","iconUrl","process","split","pop","iconSize","iconAnchor","popupAnchor","_section$from","_section$to","isCorrespondence","name","isWaitingTime","backgroundColor","src","convertTransportMode","localStorage","theme","alt","params","URLSearchParams","useLocation","search","get","_useState","useState","_useState2","trainData","setTrainData","_useState3","_useState4","selectedJourney","setSelectedJourney","useEffect","fetchLineData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","headers","sent","json","console","log","journeys","stop","apply","arguments","journey","fare","totalDuration","seconds","hours","floor","minutes","formatDuration","totalCost","found","toFixed","currency","departureTime","hour","minute","arrivalTime","onClick","handleJourneySelect","_section$links$2","_section$links$3","_section$display_info4","_section$links$4","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","JourneyDetails","createLayerComponent","marker","LeafletMarker","setLatLng","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable"],"sourceRoot":""}