{"version":3,"file":"static/js/970.2b224d06.chunk.js","mappings":"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","sources":["components/breadcrumb.js","components/SearchBar2.js","components/tools/displayPDF.js","components/shared/TwitterTimeline.js","pages/LineInfo.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getStationNameByStationID, getLineNameByLineID } from '../utils/dataHelpers';\r\n\r\nfunction Breadcrumb({ lineID, stationID }) {\r\n  const navRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const resizeListener = () => {\r\n      const classList = navRef.current.classList;\r\n      classList.toggle('flex-col', navRef.current.offsetWidth <= 200);\r\n      classList.toggle('sm:flex-row', navRef.current.offsetWidth > 200);\r\n    };\r\n\r\n    window.addEventListener('resize', resizeListener);\r\n    resizeListener();\r\n\r\n    return () => window.removeEventListener('resize', resizeListener);\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"flex sm:flex-row h-10 pl-4 bg-white dark:bg-gray-800 dark:text-white border-b border-gray-700 dark:border-gray-400\" ref={navRef} aria-label=\"Breadcrumb\">\r\n      <ol className=\"inline-flex items-center space-x-1 md:space-x-3 flex-none\">\r\n        {lineID && (\r\n          <li>\r\n            <div className=\"flex items-center\">\r\n              <svg className=\"w-3 h-3 text-gray-400 xl:mx-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 9 4-4-4-4\" />\r\n              </svg>\r\n              <Link to={`/line/${lineID}`} className=\"mx-1 text-xs lg:text-sm font-medium hover:text-blue-600 md:ml-2\">\r\n                {getLineNameByLineID(lineID)}\r\n              </Link>\r\n              {stationID && (\r\n                <svg className=\"w-3 h-3 text-gray-400 xl:mx-1 mr-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                  <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 9 4-4-4-4\" />\r\n                </svg>\r\n              )}\r\n            </div>\r\n          </li>\r\n        )}\r\n      </ol>\r\n      {stationID && (\r\n        <ol className=\"inline-flex items-center space-x-1 md:space-x-3 w-full sm:w-auto\">\r\n          <li aria-current=\"page\">\r\n            <div className=\"flex items-center\">\r\n              <Link to={`/station/${stationID}`} className=\"text-xs lg:text-sm font-medium text-gray-500 hover:text-blue-600 md:ml-2 line-clamp-1\">\r\n                {getStationNameByStationID(stationID)}\r\n              </Link>\r\n            </div>\r\n          </li>\r\n        </ol>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Breadcrumb;","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst SearchBar = ({ lineIDparams }) => {\r\n  const [options, setOptions] = useState([]);\r\n  const navigate = useNavigate();\r\n  let { lineID } = useParams();\r\n  if (typeof lineIDparams !== 'undefined') {\r\n    lineID = lineIDparams;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchOptions = async () => {\r\n      const response = await fetch(`https://api-iv.iledefrance-mobilites.fr/lines/line:IDFM:${lineID}/stops`);\r\n      const data = await response.json();\r\n      const options = data.map((stopArea) => ({\r\n        value: stopArea.id,\r\n        label: stopArea.name,\r\n      }));\r\n      options.sort((a, b) => a.label.localeCompare(b.label));\r\n      setOptions(options);\r\n    };\r\n    fetchOptions();\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    navigate(`/${lineID}/${event.target.value.split(':').pop()}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg  flex items-center w-full\">\r\n      <select\r\n        onChange={handleChange}\r\n        className=\"bg-gray-50 border border-gray-300 text-gray-900 h-12 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n        >\r\n        <option value=\"\">Sélectionnez une station</option>\r\n        {options.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;","import React, { useRef } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport { pdfjs } from 'react-pdf';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = new URL(\r\n  'pdfjs-dist/build/pdf.worker.min.js',\r\n  import.meta.url,\r\n).toString();\r\n\r\nfunction PDFAsImg({ planURL }) {\r\n  const parentDivRef = useRef();\r\n\r\n  const handleLoadError = () => {\r\n    // Do nothing when the PDF fails to load\r\n  };\r\n\r\n  return (\r\n    <div ref={parentDivRef}>\r\n      {planURL && (\r\n        <Document file={planURL} onLoadError={handleLoadError}>\r\n          <Page pageNumber={1} width={parentDivRef.current?.offsetWidth || 0} renderTextLayer={false} renderAnnotationLayer={false} />\r\n        </Document>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PDFAsImg;","import React, { useEffect, useRef } from \"react\";\r\nimport twitterLines from '../../data/twitterLignes'; \r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\nconst TwitterTimeline = ({ lineID }) => {\r\n    const containerRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const twitterScriptURL = \"https://platform.twitter.com/widgets.js\";\r\n        let script = document.querySelector(`script[src=\"${twitterScriptURL}\"]`);\r\n\r\n        if (!script) {\r\n            script = document.createElement(\"script\");\r\n            script.src = twitterScriptURL;\r\n            script.async = true;\r\n            document.body.appendChild(script);\r\n        }\r\n\r\n        // Clean up\r\n        return () => {\r\n            // Check if the container still exists in the DOM\r\n            if (containerRef.current) {\r\n                // Remove the Twitter timeline from the container\r\n                while (containerRef.current.firstChild) {\r\n                    containerRef.current.firstChild.remove();\r\n                }\r\n            }\r\n\r\n            // Remove specific iframes\r\n            const settingsIframe = document.querySelector('iframe[title=\"Twitter settings iframe\"]');\r\n            const analyticsIframe = document.querySelector('iframe#rufous-sandbox');\r\n\r\n            if (settingsIframe) {\r\n                settingsIframe.remove();\r\n            }\r\n\r\n            if (analyticsIframe) {\r\n                analyticsIframe.remove();\r\n            }\r\n\r\n            // Remove script if no other TwitterTimeline components are mounted\r\n            if (!document.querySelector(\".twitter-timeline\")) {\r\n                script.remove();\r\n            }\r\n        };\r\n    }, []); // Empty array ensures effect runs once on mount and cleanup on unmount\r\n\r\n    const lineInfo = twitterLines.find(line => line.id === lineID);\r\n\r\n    return (\r\n        <div ref={containerRef}>\r\n            {lineInfo\r\n                ? <a className=\"twitter-timeline\" href={lineInfo.twitterUrl} data-height=\"500\"><div className=\"flex items-center justify-center\"><HashLoader size={30} color=\"#6D28D9\" /></div></a>\r\n                : <p>Pas d'Information</p>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TwitterTimeline;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Breadcrumb from '../components/breadcrumb';\r\nimport SearchBar from '../components/SearchBar2';\r\nimport PDFAsImg from '../components/tools/displayPDF';\r\nimport TwitterTimeline from '../components/shared/TwitterTimeline';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\nfunction LineInfo() {\r\n  const { lineID } = useParams();\r\n  const [lineData, setLineData] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('current');\r\n  const [expandedItemId, setExpandedItemId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchLineData = async () => {\r\n      const response = await fetch(`https://api-iv.iledefrance-mobilites.fr/lines/line:IDFM:${lineID}/schedules?it=true`);\r\n      const data = await response.json();\r\n      setLineData(data);\r\n    };\r\n\r\n    fetchLineData();\r\n  }, [lineID]);\r\n\r\n  const TabButton = ({ label, value }) => (\r\n    <button\r\n      className={`p-1 text-xs font-medium rounded-lg ${activeTab === value ? 'bg-violet-100 text-violet-700 dark:text-violet-700' : 'hover:bg-slate-200 dark:hover:bg-slate-700'}`}\r\n      onClick={() => setActiveTab(value)}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n\r\n  const handleExpandItem = (id) => {\r\n    setExpandedItemId(expandedItemId === id ? null : id);\r\n  };\r\n\r\n  const ArrowUp = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\r\n    </svg>\r\n  );\r\n\r\n  const ArrowDown = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n    </svg>\r\n  );\r\n\r\n  const renderItem = (item) => (\r\n    <div key={item.id} className=\"mb-4 border border-gray-300 p-4 rounded-lg\">\r\n      <div className=\"cursor-pointer flex justify-between items-center\" onClick={() => handleExpandItem(item.id)}>\r\n        <div className=\"flex items-center\">\r\n          <img src={process.env.PUBLIC_URL + `/images/${lineID}.svg`} alt={lineID} className=\"h-5 mr-2\" />\r\n          <p className=\"text-sm font-semibold\">{item.title}</p>\r\n        </div>\r\n        {(activeTab === 'current' || expandedItemId === item.id) ? <ArrowUp /> : <ArrowDown />}\r\n      </div>\r\n\r\n      {(activeTab === 'current' || expandedItemId === item.id) && item.message && (\r\n        <div\r\n          dangerouslySetInnerHTML={{ __html: item.message }}\r\n          className=\"mt-2 text-sm overflow-y-auto max-h-[30rem]\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 gap-2 my-2 sm:m-6\">\r\n      <Breadcrumb lineID={lineID} />\r\n      <div className=\"xl:col-span-2 bg-white dark:bg-gray-800 p-4\">\r\n        <SearchBar />\r\n      </div>\r\n\r\n      <div className=\"xl:col-span-2\">\r\n        <div className=\"bg-violet-700 p-4 xl:p-6 flex flex-col w-full\">\r\n          {lineData ? (\r\n            <div className=\"flex items-center text-white\">\r\n              <svg class=\"w-5 h-5 mr-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 20\">\r\n                <path fill=\"currentColor\" d=\"M11.045 7.514a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm-4.572 3.072L3.857 15.92h7.949l-1.811-3.37-1.61 2.716-1.912-4.679Z\" />\r\n                <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 1v4a1 1 0 0 1-1 1H1m14 12a.97.97 0 0 1-.933 1H1.933A.97.97 0 0 1 1 18V5.828a2 2 0 0 1 .586-1.414l2.828-2.828A2 2 0 0 1 5.828 1h8.239A.97.97 0 0 1 15 2v16ZM11.045 7.514a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM3.857 15.92l2.616-5.333 1.912 4.68 1.61-2.717 1.81 3.37H3.858Z\" />\r\n              </svg>\r\n              <h2 className=\"xl:text-xl font-semibold\"><a href={lineData.plans[0].link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover:underline\">{lineData.plans[0].label}</a></h2>\r\n            </div>\r\n            // <div className=\"max-w-full\">\r\n            //   <PDFAsImg planURL={lineData.plans[0].link} />\r\n            // </div>\r\n          ) : (\r\n            <div class=\"animate-pulse flex space-x-2 items-center\">\r\n              <div class=\"rounded-full h-5 w-5 bg-gray-200 dark:bg-gray-500\"></div>\r\n              <div class=\"flex-1 space-y-4 py-2\">\r\n                <div class=\"h-2 rounded w-3/4 bg-gray-200 dark:bg-gray-500\"></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='bg-white dark:bg-gray-800 dark:text-white p-4 xl:p-6 flex flex-col w-full'>\r\n        <div className=\"grid grid-cols-3 gap-1 mx-auto p-1 rounded-lg border border-gray-300 w-full\" role=\"group\">\r\n          <TabButton label=\"En cours\" value=\"current\" />\r\n          <TabButton label=\"À venir\" value=\"forecast\" />\r\n          <TabButton label=\"Twitter\" value=\"twitter\" />\r\n        </div>\r\n\r\n        <div className=\"mt-4\">\r\n          {lineData === null ? (\r\n            <div className=\"flex items-center justify-center\">\r\n              <HashLoader size={30} color=\"#6D28D9\" />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {activeTab === 'current' && (lineData?.currentIT?.length > 0 ? lineData.currentIT.map(renderItem) : renderItem({ title: <div className=\"flex items-center\"><svg className=\"w-5 h-5 text-green-600 mr-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z\" /></svg><span>Tout roule</span></div> }))}\r\n              {activeTab === 'forecast' && (lineData?.forecastIT?.length > 0 ? lineData.forecastIT.map(renderItem) : renderItem({ title: <div className=\"flex items-center\"><svg className=\"w-5 h-5 text-green-600 mr-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z\" /></svg><span>Tout roule</span></div> }))}\r\n              {activeTab === 'twitter' && <TwitterTimeline lineID={lineID} />}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineInfo;"],"names":["_ref","lineID","stationID","navRef","useRef","useEffect","resizeListener","classList","current","toggle","offsetWidth","window","addEventListener","removeEventListener","_jsxs","className","ref","children","_jsx","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Link","to","concat","getLineNameByLineID","getStationNameByStationID","lineIDparams","_useState","useState","_useState2","_slicedToArray","options","setOptions","navigate","useNavigate","useParams","fetchOptions","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","map","stopArea","value","id","label","name","sort","a","b","localeCompare","stop","apply","arguments","onChange","event","target","split","pop","option","pdfjs","GlobalWorkerOptions","workerSrc","URL","toString","containerRef","twitterScriptURL","script","document","querySelector","createElement","src","async","body","appendChild","firstChild","remove","settingsIframe","analyticsIframe","lineInfo","twitterLines","find","line","href","twitterUrl","HashLoader","size","color","_lineData$currentIT","_lineData$forecastIT","lineData","setLineData","_useState3","_useState4","activeTab","setActiveTab","_useState5","_useState6","expandedItemId","setExpandedItemId","fetchLineData","TabButton","onClick","ArrowUp","ArrowDown","renderItem","item","process","alt","title","message","dangerouslySetInnerHTML","__html","Breadcrumb","SearchBar","class","plans","link","rel","role","_Fragment","currentIT","length","forecastIT","TwitterTimeline"],"sourceRoot":""}