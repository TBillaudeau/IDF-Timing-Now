{"version":3,"file":"static/js/46.3538b65d.chunk.js","mappings":"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","sources":["components/Timing4.js","../node_modules/react-leaflet/lib/GeoJSON.js","pages/Proximity.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getLineColorByLineID, LineLogoByLineID, getTransportByLineID } from '../utils/dataHelpers';\r\nimport { removeGareDePrefix } from '../utils/stringUtils';\r\nimport LineSVG from './tools/createLineLogo';\r\n\r\nfunction TrainInfo({ lineID, stationName }) {\r\n  // Fetch train departure every 2 seconds\r\n  const [trainData, setTrainData] = useState([]);\r\n  const [status, setStatus] = useState('');\r\n  const [activeTab, setActiveTab] = useState('current');\r\n  const [selectedLogo, setSelectedLogo] = useState(null);\r\n\r\n  const calculateMinutesFromNow = (time) => {\r\n    return Math.floor((new Date(time) - new Date()) / 60000);\r\n  };\r\n\r\n  const url = `https://prim.iledefrance-mobilites.fr/marketplace/stop-monitoring?MonitoringRef=STIF:StopArea:SP:${stationName}:`;\r\n\r\n  useEffect(() => {\r\n    const fetchData = (url, setData, setStatus) => {\r\n      fetch(url, {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'apikey': process.env.REACT_APP_IDFM_API_KEY\r\n        }\r\n      })\r\n        .then(response => response.status === 404 ? null : response.json())\r\n        .then(data => {\r\n          const departures = data?.Siri?.ServiceDelivery?.StopMonitoringDelivery[0]?.MonitoredStopVisit\r\n            ?.filter(journey => {\r\n              const expectedDepartureTime = journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedDepartureTime;\r\n              const vehicleAtStop = journey?.MonitoredVehicleJourney?.MonitoredCall?.VehicleAtStop;\r\n              return !(vehicleAtStop && new Date(expectedDepartureTime) < new Date());\r\n            })\r\n            ?.map(journey => ({\r\n              lineRef: journey?.MonitoredVehicleJourney?.LineRef?.value,\r\n              operatorRef: journey?.MonitoredVehicleJourney?.OperatorRef?.value,\r\n              stopPointName: journey?.MonitoredVehicleJourney?.MonitoredCall?.StopPointName[0]?.value,\r\n              directionName: journey?.MonitoredVehicleJourney?.DirectionName[0]?.value,\r\n              destinationName: journey?.MonitoredVehicleJourney?.DestinationName[0]?.value,\r\n              vehicleJourneyNote: journey?.MonitoredVehicleJourney?.JourneyNote[0]?.value,\r\n              vehicleJourneyName: journey?.MonitoredVehicleJourney?.VehicleJourneyName[0]?.value || journey?.MonitoredVehicleJourney?.TrainNumbers?.TrainNumberRef[0]?.value,\r\n              expectedArrivalTime: journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedArrivalTime,\r\n              aimedArrival: journey?.MonitoredVehicleJourney?.MonitoredCall?.AimedArrival,\r\n              expectedDepartureTime: journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedDepartureTime,\r\n              aimedArrivalTime: journey?.MonitoredVehicleJourney?.MonitoredCall?.AimedArrivalTime,\r\n              arrivalStatus: journey?.MonitoredVehicleJourney?.MonitoredCall?.ArrivalStatus,\r\n              departureStatus: journey?.MonitoredVehicleJourney?.MonitoredCall?.DepartureStatus,\r\n              vehicleAtStop: journey?.MonitoredVehicleJourney?.MonitoredCall?.VehicleAtStop,\r\n              arrivalPlatform: journey?.MonitoredVehicleJourney?.MonitoredCall?.ArrivalPlatformName?.value,\r\n              trainNumber: journey?.MonitoredVehicleJourney?.TrainNumber?.TrainNumberRef[0]?.value,\r\n              minutesFromNow: calculateMinutesFromNow(journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedDepartureTime || journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedArrivalTime),\r\n            }));\r\n\r\n          setData(departures.sort((a, b) => a.minutesFromNow - b.minutesFromNow));\r\n          // setStatus(data.nextDepartures.errorMessage);\r\n        })\r\n        .catch(error => console.error(error));\r\n    };\r\n\r\n    fetchData(url, setTrainData, setStatus);\r\n    const intervalId = setInterval(() => fetchData(url, setTrainData, setStatus), 2000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  if (status === 'NO_REALTIME_SCHEDULES_FOUND') {\r\n    return <div className=\"flex items-center justify-center text-center text-xs lg:text-base bg-white dark:bg-gray-700 dark:text-gray-200 rounded-lg shadow-md p-4 mb-3 h-[44px] lg:h-[72px]\"><p className='animate-pulse'>Information en direct indisponible</p></div>;\r\n  }\r\n\r\n\r\n\r\n  const groupedData = trainData.reduce((acc, train) => {\r\n    const lineRef = train.lineRef;\r\n\r\n    if (!acc[lineRef]) {\r\n      acc[lineRef] = {};\r\n    }\r\n\r\n    const destination = train.destinationName;\r\n\r\n    if (!acc[lineRef][destination]) {\r\n      acc[lineRef][destination] = [];\r\n    }\r\n\r\n    acc[lineRef][destination].push(train);\r\n\r\n    return acc;\r\n  }, {});\r\n\r\n  // Afficher les départs de train groupés par ligne et destination\r\n  return (\r\n      <div className=\"\">\r\n        {Object.entries(groupedData).map(([lineRef, destinations]) => {\r\n          const transport = getTransportByLineID(lineRef.split(\"::\").pop().split(\":\")[0]);\r\n          return (\r\n            <div key={lineRef} className=\"flex border-b-4 border-slate-800 border-x\">\r\n              <div className=\"flex items-start justify-center w-20 lg:w-32 pt-2 lg:pt-1.5 bg-white border-r\">\r\n                {transport && \r\n                  <img src={process.env.PUBLIC_URL + `/images/${transport}.svg`} alt={transport} className=\"h-6 lg:h-8 mr-1\" />\r\n                }\r\n                <LineLogoByLineID lineID={lineRef.split(\"::\").pop().split(\":\")[0]} className=\"h-6 lg:h-8\" />\r\n              </div>\r\n\r\n              <div className=\"flex flex-col justify-start w-full\">\r\n                {Object.entries(destinations).sort(([a], [b]) => a.localeCompare(b)).map(([destination, trains], index, array) => (\r\n                  <div key={destination} className={`flex items-center justify-between border-gray-400 dark:text-white dark:bg-gray-700 h-10 text-sm space-x-2 p-1 lg:p-4 ${index < array.length - 1 ? 'border-b' : ''}`}>\r\n                    <p className='line-clamp-1'>{removeGareDePrefix(destination)}</p>\r\n                    <div className=\"flex space-x-2 w-40 lg:w-48 overflow-auto justify-start shrink-0\">\r\n                      {trains.map((train, index) => (\r\n                        <span key={index} className={`w-10 shrink-0 text-center text-sm font-bold text-yellow-500 bg-slate-800 rounded p-1 lg:py-1`}>\r\n                          <span className={`${train.minutesFromNow <= 0 ? 'animate-pulse' : ''}`}>{train.minutesFromNow}</span>\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default TrainInfo;\r\n","import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON({ data , ...options }, ctx) {\n    const geoJSON = new LeafletGeoJSON(data, options);\n    return createElementObject(geoJSON, extendContext(ctx, {\n        overlayContainer: geoJSON\n    }));\n}, function updateGeoJSON(layer, props, prevProps) {\n    if (props.style !== prevProps.style) {\n        if (props.style == null) {\n            layer.resetStyle();\n        } else {\n            layer.setStyle(props.style);\n        }\n    }\n});\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport TrainInfo from '../components/Timing4';\r\nimport tracesDuReseauFerre from '../data/traces-du-reseau-ferre-idf.json';\r\nimport { GeoJSON } from 'react-leaflet';\r\nimport arretsLignes from '../data/arrets-lignes.json';\r\n\r\nconst Location = () => {\r\n    const [clientPosition, SetClientPosition] = useState(null);\r\n    const [initialPosition, SetInitialPosition] = useState(null);\r\n    const [stopAreas, setStopAreas] = useState('');\r\n    const mapRef = useRef();\r\n\r\n    // Définition de la fonction fetchStopAreas en dehors du composant\r\n    const fetchStopAreas = async (position) => {\r\n        const response = await fetch(`https://prim.iledefrance-mobilites.fr/marketplace/v2/navitia/coord/${position.lng};${position.lat}/stop_areas?distance=300`, {\r\n            headers: {\r\n                'apikey': process.env.REACT_APP_IDFM_API_KEY\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setStopAreas(data.stop_areas);\r\n    };\r\n\r\n    const CenterMarker = () => {\r\n        const [position, setPosition] = useState(null);\r\n\r\n        useMapEvents({\r\n            moveend: (e) => {\r\n                const newPos = e.target.getCenter();\r\n                setPosition(newPos);\r\n            }\r\n        });\r\n\r\n        useEffect(() => {\r\n            if (position) {\r\n                const fetchData = async () => {\r\n                    await fetchStopAreas(position);\r\n                };\r\n                fetchData();\r\n            }\r\n        }, [position]);\r\n\r\n        return null;\r\n    };\r\n\r\n    const MiddleMarker = () => {\r\n        return (\r\n            <span className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-[1000] bg-violet-700 rounded-full p-1.5 border-2 border-white\" />\r\n        )\r\n    };\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const newPosition = [position.coords.latitude, position.coords.longitude];\r\n            SetClientPosition(newPosition);\r\n            if (!initialPosition) {\r\n                fetchStopAreas({ lat: newPosition[0], lng: newPosition[1] });\r\n                SetInitialPosition({ lat: newPosition[0], lng: newPosition[1] });\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error occurred while getting geolocation: \", error);\r\n            if (!clientPosition) {\r\n                SetClientPosition([48.8598, 2.3470]);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const RecenterControl = () => {\r\n        const map = useMap();\r\n\r\n        useEffect(() => {\r\n            const control = new L.Control({ position: 'bottomright' });\r\n\r\n            control.onAdd = () => {\r\n                const button = L.DomUtil.create('button', 'leaflet-bar leaflet-control leaflet-control-custom');\r\n                button.innerHTML = '<svg class=\"w-4 h-4\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 14 20\"><path d=\"M7 0a7 7 0 0 0-1 13.92V19a1 1 0 1 0 2 0v-5.08A7 7 0 0 0 7 0Zm0 5.5A1.5 1.5 0 0 0 5.5 7a1 1 0 0 1-2 0A3.5 3.5 0 0 1 7 3.5a1 1 0 0 1 0 2Z\"/></svg>';\r\n                button.style.cssText = 'background-color: white; padding: 6px; cursor: pointer;';\r\n                button.onclick = () => clientPosition && map.flyTo(clientPosition, 13);\r\n                return button;\r\n            };\r\n\r\n            control.addTo(map);\r\n\r\n            return () => control.remove();\r\n        }, [map]);\r\n\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div style={{ height: 'calc(100vh - 130px)' }}>\r\n            {clientPosition && (\r\n                <MapContainer className=\"h-[35%]\" whenCreated={setMapInstance => { mapRef.current = setMapInstance; }} center={clientPosition} zoom={13} attributionControl={false} zoomControl={false}>\r\n                    <TileLayer url={`https://{s}.tile.jawg.io/jawg-streets/{z}/{x}/{y}{r}.png?access-token=${process.env.REACT_APP_JAWG_API_KEY}`} />\r\n                    <CenterMarker />\r\n                    <RecenterControl />\r\n                    <MiddleMarker />\r\n                    {tracesDuReseauFerre.map((line, index) => (\r\n                        line.fields && line.fields.geo_shape && line.fields.geo_shape.coordinates ? (\r\n                            <GeoJSON key={index} data={{\r\n                                type: \"LineString\",\r\n                                coordinates: line.fields.geo_shape.coordinates\r\n                            }} style={{ color: '#' + line.fields.colourweb_hexa }} />\r\n                        ) : null\r\n                    ))}\r\n\r\n                </MapContainer>\r\n            )}\r\n            {stopAreas && (\r\n                <div className=\"h-[65%] overflow-y-scroll\">\r\n\r\n                    {stopAreas.map((stopArea, index) => (\r\n                        <div className=\"mx-0 my-4\">\r\n                            <h1 className=\"text-white text-xs text-center font-medium bg-slate-800 w-full rounded-t-lg p-2\">{stopArea.name}</h1>\r\n                            <TrainInfo key={stopArea.id} line={null} stationName={stopArea.id.split(':').pop()} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Location;"],"names":["_ref","lineID","stationName","_useState","useState","_useState2","_slicedToArray","trainData","setTrainData","_useState3","_useState4","status","_useState5","_useState6","_useState7","_useState8","url","concat","useEffect","fetchData","setData","setStatus","fetch","headers","process","then","response","json","data","_data$Siri","_data$Siri$ServiceDel","_data$Siri$ServiceDel2","_data$Siri$ServiceDel3","_data$Siri$ServiceDel4","departures","Siri","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","filter","journey","_journey$MonitoredVeh","_journey$MonitoredVeh2","_journey$MonitoredVeh3","_journey$MonitoredVeh4","expectedDepartureTime","MonitoredVehicleJourney","MonitoredCall","ExpectedDepartureTime","VehicleAtStop","Date","map","_journey$MonitoredVeh5","_journey$MonitoredVeh6","_journey$MonitoredVeh7","_journey$MonitoredVeh8","_journey$MonitoredVeh9","_journey$MonitoredVeh10","_journey$MonitoredVeh11","_journey$MonitoredVeh12","_journey$MonitoredVeh13","_journey$MonitoredVeh14","_journey$MonitoredVeh15","_journey$MonitoredVeh16","_journey$MonitoredVeh17","_journey$MonitoredVeh18","_journey$MonitoredVeh19","_journey$MonitoredVeh20","_journey$MonitoredVeh21","_journey$MonitoredVeh22","_journey$MonitoredVeh23","_journey$MonitoredVeh24","_journey$MonitoredVeh25","_journey$MonitoredVeh26","_journey$MonitoredVeh27","_journey$MonitoredVeh28","_journey$MonitoredVeh29","_journey$MonitoredVeh30","_journey$MonitoredVeh31","_journey$MonitoredVeh32","_journey$MonitoredVeh33","_journey$MonitoredVeh34","_journey$MonitoredVeh35","_journey$MonitoredVeh36","_journey$MonitoredVeh37","_journey$MonitoredVeh38","_journey$MonitoredVeh39","_journey$MonitoredVeh40","_journey$MonitoredVeh41","_journey$MonitoredVeh42","_journey$MonitoredVeh43","_journey$MonitoredVeh44","_journey$MonitoredVeh45","_journey$MonitoredVeh46","time","lineRef","LineRef","value","operatorRef","OperatorRef","stopPointName","StopPointName","directionName","DirectionName","destinationName","DestinationName","vehicleJourneyNote","JourneyNote","vehicleJourneyName","VehicleJourneyName","TrainNumbers","TrainNumberRef","expectedArrivalTime","ExpectedArrivalTime","aimedArrival","AimedArrival","aimedArrivalTime","AimedArrivalTime","arrivalStatus","ArrivalStatus","departureStatus","DepartureStatus","vehicleAtStop","arrivalPlatform","ArrivalPlatformName","trainNumber","TrainNumber","minutesFromNow","Math","floor","sort","a","b","catch","error","console","intervalId","setInterval","clearInterval","_jsx","className","children","groupedData","reduce","acc","train","destination","push","Object","entries","_ref2","_ref3","destinations","transport","getTransportByLineID","split","pop","_jsxs","src","alt","LineLogoByLineID","_ref4","_ref5","localeCompare","_ref8","index","array","_ref9","trains","length","removeGareDePrefix","GeoJSON","createPathComponent","ctx","options","_objectWithoutProperties","_excluded","geoJSON","LeafletGeoJSON","createElementObject","extendContext","overlayContainer","layer","props","prevProps","style","resetStyle","setStyle","clientPosition","SetClientPosition","initialPosition","SetInitialPosition","stopAreas","setStopAreas","mapRef","useRef","fetchStopAreas","_asyncToGenerator","_regeneratorRuntime","mark","_callee","position","wrap","_context","prev","next","lng","lat","sent","stop_areas","stop","_x","apply","arguments","CenterMarker","setPosition","useMapEvents","moveend","e","newPos","target","getCenter","_callee2","_context2","MiddleMarker","navigator","geolocation","getCurrentPosition","newPosition","coords","latitude","longitude","RecenterControl","useMap","control","L","onAdd","button","create","innerHTML","cssText","onclick","flyTo","addTo","remove","height","MapContainer","whenCreated","setMapInstance","current","center","zoom","attributionControl","zoomControl","TileLayer","tracesDuReseauFerre","line","fields","geo_shape","coordinates","type","color","colourweb_hexa","stopArea","name","TrainInfo","id"],"sourceRoot":""}