{"version":3,"file":"static/js/281.edb7e7d5.chunk.js","mappings":"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","sources":["components/tools/createLineLogo.js","components/Timing2.js","pages/Proximity.js","../node_modules/react-leaflet/lib/GeoJSON.js","../node_modules/react-leaflet/lib/hooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SVG from 'react-inlinesvg';\r\nimport referentielDesLignes from '../../data/referentiel-des-lignes.json';\r\n\r\nfunction LineSVG({ lineID, className }) {\r\n    const [svgSrc, setSvgSrc] = useState('');\r\n\r\n    useEffect(() => {\r\n        const item = referentielDesLignes.find(item => item.fields.id_line === lineID);\r\n\r\n        if (item) {\r\n            const name = item.fields.name_line;\r\n            if (true) {\r\n                const color = \"#\" + item.fields.colourweb_hexa;\r\n                const text_color = \"#\" + item.fields.textcolourweb_hexa;\r\n\r\n                setSvgSrc(`\r\n                    <svg viewBox=\"0 0 120 120\">\r\n                        <rect x=\"0\" y=\"${(120 - 77) / 2}\" width=\"100%\" height=\"77\" rx=\"10\" ry=\"10\" fill=\"${color}\" />\r\n                        <text x=\"50%\" y=\"53%\" fill=\"${text_color}\" font-family=\"Arial\" font-size=\"45\" text-anchor=\"middle\" alignment-baseline=\"middle\" font-weight=\"bold\">${name}</text>\r\n                    </svg>\r\n                `);\r\n            }\r\n        }\r\n    }, [lineID]);\r\n\r\n    return <SVG src={svgSrc} className={className}/>;\r\n}\r\n\r\nexport default LineSVG;","import React, { useEffect, useState } from 'react';\r\nimport { removeGareDePrefix } from '../utils/stringUtils';\r\nimport { set } from 'date-fns';\r\nimport relations from '../data/relations.json';\r\nimport zonesDarrets from '../data/zones-d-arrets.json';\r\nimport referentielDesLignes from '../data/referentiel-des-lignes.json';\r\nimport LineSVG from './tools/createLineLogo';\r\n\r\nfunction TrainInfo({ lineID, stationName }) {\r\n\r\n  // Fetch train departure every 2 seconds\r\n  const [trainData, setTrainData] = useState([]);\r\n  const [status, setStatus] = useState('');\r\n\r\n  const calculateMinutesFromNow = (time) => {\r\n    return Math.round((new Date(time) - new Date()) / 60000);\r\n  };\r\n\r\n  const url = `https://prim.iledefrance-mobilites.fr/marketplace/stop-monitoring?MonitoringRef=STIF:StopArea:SP:${stationName}:`;\r\n  useEffect(() => {\r\n    const fetchData = (url, setData, setStatus) => {\r\n      fetch(url, {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'apikey': process.env.REACT_APP_IDFM_API_KEY\r\n        }\r\n      })\r\n      .then(response => response.status === 404 ? null : response.json())\r\n      .then(data => {\r\n        const departures = data?.Siri?.ServiceDelivery?.StopMonitoringDelivery[0]?.MonitoredStopVisit?.map(journey => ({\r\n          lineRef: journey?.MonitoredVehicleJourney?.LineRef?.value,\r\n          operatorRef: journey?.MonitoredVehicleJourney?.OperatorRef?.value,\r\n          directionName: journey?.MonitoredVehicleJourney?.DirectionName[0]?.value,\r\n          destinationName: journey?.MonitoredVehicleJourney?.DestinationName[0]?.value,\r\n          vehicleJourneyName: journey?.MonitoredVehicleJourney?.VehicleJourneyName[0]?.value,\r\n          expectedArrivalTime: journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedArrivalTime,\r\n          aimedArrival: journey?.MonitoredVehicleJourney?.MonitoredCall?.AimedArrival,\r\n          expectedDepartureTime: journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedDepartureTime,\r\n          aimedDepartureTime: journey?.MonitoredVehicleJourney?.MonitoredCall?.aimedDepartureTime,\r\n          arrivalStatus: journey?.MonitoredVehicleJourney?.MonitoredCall?.ArrivalStatus,\r\n          departureStatus: journey?.MonitoredVehicleJourney?.MonitoredCall?.DepartureStatus,\r\n          vehicleAtStop: journey?.MonitoredVehicleJourney?.MonitoredCall?.VehicleAtStop,\r\n          minutesFromNow: calculateMinutesFromNow(journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedDepartureTime || journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedArrivalTime),\r\n        }));\r\n        \r\n        setData(departures.sort((a, b) => a.minutesFromNow - b.minutesFromNow));\r\n        setStatus(data.nextDepartures.errorMessage);\r\n      })\r\n      .catch(error => console.error(error));\r\n    };\r\n\r\n    fetchData(url, setTrainData, setStatus);\r\n    const intervalId = setInterval(() => fetchData(url, setTrainData, setStatus), 2000);\r\n    return () => clearInterval(intervalId);\r\n  }, [stationName]);\r\n\r\n  function getLighterColor(lineID) {\r\n    var lineColor = referentielDesLignes.find(line => line.fields.id_line == lineID)?.fields.colourweb_hexa;\r\n\r\n    function blendColor(color, blendWith, alpha) {\r\n      const [r1, g1, b1] = [parseInt(color.slice(0, 2), 16), parseInt(color.slice(2, 4), 16), parseInt(color.slice(4, 6), 16)];\r\n      const [r2, g2, b2] = [parseInt(blendWith.slice(0, 2), 16), parseInt(blendWith.slice(2, 4), 16), parseInt(blendWith.slice(4, 6), 16)];\r\n\r\n      const r = Math.round(r1 * (1 - alpha) + r2 * alpha);\r\n      const g = Math.round(g1 * (1 - alpha) + g2 * alpha);\r\n      const b = Math.round(b1 * (1 - alpha) + b2 * alpha);\r\n\r\n      return ((r << 16) + (g << 8) + b).toString(16).padStart(6, '0');\r\n    }\r\n\r\n    return blendColor(lineColor, 'ffffff', 0.5);\r\n  }\r\n\r\n\r\n  if (status === 'NO_REALTIME_SCHEDULES_FOUND') {\r\n    return <div className=\"flex items-center justify-center text-center text-xs lg:text-base bg-white dark:bg-gray-700 dark:text-gray-200 rounded-lg shadow-md p-4 mb-3 h-[44px] lg:h-[72px]\"><p className='animate-pulse'>Information en direct indisponible</p></div>;\r\n  }\r\n\r\n  // Display loading animation\r\n  if (trainData.length === 0) {\r\n    return (\r\n      <div className=\"overflow-y-auto max-h-[27rem] animate-pulse\">\r\n        <div className=\"flex items-center bg-white dark:bg-gray-800 rounded-lg shadow-md h-[44px] lg:h-[72px]\">\r\n          <div role=\"status\" class=\"flex items-center justify-center w-4 lg:w-10 h-4 lg:h-10 ml-1 lg:ml-0 mr-2 lg:mr-4 p-1 bg-gray-300 rounded-sm lg:rounded-lg dark:bg-gray-700\">\r\n            <svg class=\"w-5 h-5 text-gray-200 dark:text-gray-600\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 18\">\r\n              <path d=\"M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z\" />\r\n            </svg>\r\n          </div>\r\n\r\n          <div className=\"flex-grow\">\r\n            <div class=\"w-12 lg:w-24 h-1 lg:h-2.5 mb-1 lg:mb-2.5 bg-gray-300 rounded-full dark:bg-gray-600\"></div>\r\n            <div class=\"w-16 lg:w-32 h-1 lg:h-2 bg-gray-200 rounded-full dark:bg-gray-700\"></div>\r\n          </div>\r\n\r\n          <div className=\"ml-2 lg:ml-5 min-w-max pr-2 text-right\">\r\n            <div class=\"w-6 lg:w-12 h-1 lg:h-2.5 mb-1 lg:mb-2.5 mr-1 bg-gray-300 rounded-full dark:bg-gray-700\"></div>\r\n            <div class=\"w-4 lg:w-8 h-1 lg:h-2 mr-1 bg-gray-200 rounded-full float-right dark:bg-gray-700\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Group train departures by line direction\r\n  const groupedTrainData = trainData.reduce((acc, train) => {\r\n    const lineDirection = removeGareDePrefix(train.lineDirection);\r\n    if (!acc[lineDirection]) {\r\n      acc[lineDirection] = [];\r\n    }\r\n    acc[lineDirection].push(train);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Display train departures grouped by line direction\r\n  return (\r\n    <div className=\"\">\r\n      {trainData.map((train, index) => (\r\n        <div \r\n          key={index} \r\n          className=\"flex items-center bg-white border-gray-400 dark:text-white dark:bg-gray-700 min-h-[44px] max-h-[72px] p-1 lg:p-4 relative\" \r\n          style={{borderBottom: `4px solid #${getLighterColor(train.lineRef.replace(/:$/, '').split(':').pop())}`}} // Replace lineColor with your desired color\r\n        >\r\n          <div className='shrink-0'>\r\n            {/* <img \r\n              src={process.env.PUBLIC_URL + `/images/${train.lineRef.replace(/:$/, '').split(':').pop()}.svg`} \r\n              alt={train.lineRef.replace(/:$/, '').split(':').pop()} \r\n              className=\"h-4 lg:h-10 pl-1 lg:pl-0 mr-2 lg:mr-4\" \r\n            /> */}\r\n            <LineSVG lineID={train.lineRef.replace(/:$/, '').split(':').pop()} className=\"h-6 lg:h-10 pl-1 lg:pl-0 mr-2 lg:mr-4\" />\r\n            <h3 className='text-[8px] lg:text-xs justify-center flex mx-auto mt-0.5 pl-0.5 lg:pl-0'>{train.vehicleJourneyName}</h3>\r\n          </div>\r\n          <div className=\"flex-grow overflow-hidden\">\r\n            <h2 className='font-bold text-[11px] lg:text-lg line-clamp-2 ml-2 lg:ml-4'>{train.destinationName} - {train.aimedArrival} - {train.vehicleAtStop}</h2>\r\n          </div>\r\n          <div className=\"ml-1 lg:ml-5 pr-2 text-right\">\r\n            <p className=\"text-sm lg:text-2xl font-bold\">{train.departureStatus} {train.minutesFromNow}ᵐⁱⁿ</p>\r\n            <p className=\"text-xs lg:text-sm text-right text-gray-400 dark:text-white\">Arrival: {new Date(train.expectedArrivalTime).toLocaleTimeString()}</p>\r\n            <p className=\"text-xs lg:text-sm text-right text-gray-400 dark:text-white\">Departure: {new Date(train.expectedDepartureTime).toLocaleTimeString()}</p>\r\n          </div>\r\n          <div \r\n            className=\"absolute top-0 right-0 bottom-0 left-0 lg:left-0 bg-gradient-to-r from-transparent to-white dark:to-gray-700\"\r\n            style={{\r\n              backgroundImage: `linear-gradient(to right, transparent, rgba(${parseInt(getLighterColor(train.lineRef.replace(/:$/, '').split(':').pop()).slice(0, 2), 16)}, ${parseInt(getLighterColor(train.lineRef.replace(/:$/, '').split(':').pop()).slice(2, 4), 16)}, ${parseInt(getLighterColor(train.lineRef.replace(/:$/, '').split(':').pop()).slice(4, 6), 16)}, 0.1))`\r\n            }}\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrainInfo;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport TrainInfo from '../components/Timing2';\r\nimport tracesDuReseauFerre from '../data/traces-du-reseau-ferre-idf.json';\r\nimport { GeoJSON } from 'react-leaflet';\r\nimport arretsLignes from '../data/arrets-lignes.json';\r\n\r\nconst Location = () => {\r\n    const [initialPosition, setInitialPosition] = useState(null);\r\n    const [stopAreas, setStopAreas] = useState('');\r\n    const mapRef = useRef();\r\n\r\n    const CenterMarker = () => {\r\n        const [position, setPosition] = useState(null);\r\n        useMapEvents({\r\n            moveend: (e) => {\r\n                const newPos = e.target.getCenter();\r\n                setPosition(newPos);\r\n            }\r\n        });\r\n\r\n        useEffect(() => {\r\n            if (position) {\r\n                const fetchData = async () => {\r\n                    const response = await fetch(`https://prim.iledefrance-mobilites.fr/marketplace/navitia/coverage/fr-idf/coord/${position.lng};${position.lat}/stop_areas?distance=400`, {\r\n                        headers: {\r\n                            'apikey': process.env.REACT_APP_IDFM_API_KEY\r\n                        }\r\n                    });\r\n                    const data = await response.json();\r\n                    setStopAreas(data.stop_areas);\r\n                };\r\n                fetchData();\r\n            }\r\n        }, [position]);\r\n\r\n        return null;\r\n    };\r\n\r\n    const MiddleMarker = () => {\r\n        return (\r\n            <span className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-[1000] bg-violet-700 rounded-full p-2 border-4 border-white\" />\r\n        )\r\n    };\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setInitialPosition([position.coords.latitude, position.coords.longitude]);\r\n        }, (error) => {\r\n            console.error(\"Error occurred while getting geolocation: \", error);\r\n            if (!initialPosition) {\r\n                setInitialPosition([48.8598, 2.3470]);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const RecenterControl = () => {\r\n        const map = useMap();\r\n\r\n        useEffect(() => {\r\n            const control = new L.Control({ position: 'bottomright' });\r\n\r\n            control.onAdd = () => {\r\n                const button = L.DomUtil.create('button', 'leaflet-bar leaflet-control leaflet-control-custom');\r\n                button.innerHTML = '<svg class=\"w-4 h-4\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 14 20\"><path d=\"M7 0a7 7 0 0 0-1 13.92V19a1 1 0 1 0 2 0v-5.08A7 7 0 0 0 7 0Zm0 5.5A1.5 1.5 0 0 0 5.5 7a1 1 0 0 1-2 0A3.5 3.5 0 0 1 7 3.5a1 1 0 0 1 0 2Z\"/></svg>';\r\n                button.style.cssText = 'background-color: white; padding: 6px; cursor: pointer;';\r\n                button.onclick = () => initialPosition && map.flyTo(initialPosition, 13);\r\n                return button;\r\n            };\r\n\r\n            control.addTo(map);\r\n\r\n            return () => control.remove();\r\n        }, [map]);\r\n\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div style={{ height: 'calc(100vh - 130px)' }}>\r\n            {initialPosition && (\r\n                <MapContainer className=\"h-[40%]\" whenCreated={setMapInstance => { mapRef.current = setMapInstance; }} center={initialPosition} zoom={13} attributionControl={false}>\r\n                    <TileLayer url={`https://{s}.tile.jawg.io/jawg-streets/{z}/{x}/{y}{r}.png?access-token=${process.env.REACT_APP_JAWG_API_KEY}`} />\r\n                    <CenterMarker />\r\n                    <RecenterControl />\r\n                    <MiddleMarker />\r\n                    {tracesDuReseauFerre.map((line, index) => (\r\n                        <GeoJSON key={index} data={line.geo_shape.geometry} style={{ color: '#' + line.colourweb_hexa }} />\r\n                    ))}\r\n                </MapContainer>\r\n            )}\r\n            {stopAreas && (\r\n                <div className=\"h-[60%] overflow-y-scroll\">\r\n                    {stopAreas.map((stopArea, index) => (\r\n                        <TrainInfo line={null} stationName={stopArea.id.split(':').pop()} />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Location;","import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON({ data , ...options }, ctx) {\n    const geoJSON = new LeafletGeoJSON(data, options);\n    return createElementObject(geoJSON, extendContext(ctx, {\n        overlayContainer: geoJSON\n    }));\n}, function updateGeoJSON(layer, props, prevProps) {\n    if (props.style !== prevProps.style) {\n        if (props.style == null) {\n            layer.resetStyle();\n        } else {\n            layer.setStyle(props.style);\n        }\n    }\n});\n","import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n    return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n    const map = useMap();\n    useEffect(function addMapEventHandler() {\n        // @ts-ignore event type\n        map.on(type, handler);\n        return function removeMapEventHandler() {\n            // @ts-ignore event type\n            map.off(type, handler);\n        };\n    }, [\n        map,\n        type,\n        handler\n    ]);\n    return map;\n}\nexport function useMapEvents(handlers) {\n    const map = useMap();\n    useEffect(function addMapEventHandlers() {\n        map.on(handlers);\n        return function removeMapEventHandlers() {\n            map.off(handlers);\n        };\n    }, [\n        map,\n        handlers\n    ]);\n    return map;\n}\n"],"names":["_ref","lineID","className","_useState","useState","_useState2","_slicedToArray","svgSrc","setSvgSrc","useEffect","item","referentielDesLignes","find","fields","id_line","name","name_line","color","colourweb_hexa","text_color","textcolourweb_hexa","concat","_jsx","SVG","src","stationName","trainData","setTrainData","_useState3","_useState4","status","setStatus","url","getLighterColor","_referentielDesLignes","blendWith","alpha","_ref2","parseInt","slice","r1","g1","b1","_ref3","r2","g2","b2","Math","round","toString","padStart","blendColor","line","fetchData","setData","fetch","headers","process","then","response","json","data","_data$Siri","_data$Siri$ServiceDel","_data$Siri$ServiceDel2","_data$Siri$ServiceDel3","departures","Siri","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","map","journey","_journey$MonitoredVeh","_journey$MonitoredVeh2","_journey$MonitoredVeh3","_journey$MonitoredVeh4","_journey$MonitoredVeh5","_journey$MonitoredVeh6","_journey$MonitoredVeh7","_journey$MonitoredVeh8","_journey$MonitoredVeh9","_journey$MonitoredVeh10","_journey$MonitoredVeh11","_journey$MonitoredVeh12","_journey$MonitoredVeh13","_journey$MonitoredVeh14","_journey$MonitoredVeh15","_journey$MonitoredVeh16","_journey$MonitoredVeh17","_journey$MonitoredVeh18","_journey$MonitoredVeh19","_journey$MonitoredVeh20","_journey$MonitoredVeh21","_journey$MonitoredVeh22","_journey$MonitoredVeh23","_journey$MonitoredVeh24","_journey$MonitoredVeh25","_journey$MonitoredVeh26","_journey$MonitoredVeh27","_journey$MonitoredVeh28","time","lineRef","MonitoredVehicleJourney","LineRef","value","operatorRef","OperatorRef","directionName","DirectionName","destinationName","DestinationName","vehicleJourneyName","VehicleJourneyName","expectedArrivalTime","MonitoredCall","ExpectedArrivalTime","aimedArrival","AimedArrival","expectedDepartureTime","ExpectedDepartureTime","aimedDepartureTime","arrivalStatus","ArrivalStatus","departureStatus","DepartureStatus","vehicleAtStop","VehicleAtStop","minutesFromNow","Date","sort","a","b","nextDepartures","errorMessage","catch","error","console","intervalId","setInterval","clearInterval","children","length","_jsxs","role","class","xmlns","fill","viewBox","d","reduce","acc","train","lineDirection","removeGareDePrefix","push","index","style","borderBottom","replace","split","pop","LineSVG","toLocaleTimeString","backgroundImage","initialPosition","setInitialPosition","stopAreas","setStopAreas","mapRef","useRef","CenterMarker","_useState5","_useState6","position","setPosition","useMapEvents","moveend","e","newPos","target","getCenter","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","lng","lat","sent","stop_areas","stop","apply","arguments","MiddleMarker","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","RecenterControl","useMap","control","L","onAdd","button","create","innerHTML","cssText","onclick","flyTo","addTo","remove","height","MapContainer","whenCreated","setMapInstance","current","center","zoom","attributionControl","TileLayer","tracesDuReseauFerre","GeoJSON","geo_shape","geometry","stopArea","TrainInfo","id","createPathComponent","ctx","options","_objectWithoutProperties","_excluded","geoJSON","LeafletGeoJSON","createElementObject","extendContext","overlayContainer","layer","props","prevProps","resetStyle","setStyle","useLeafletContext","handlers","on","off"],"sourceRoot":""}