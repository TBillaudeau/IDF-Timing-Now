{"version":3,"file":"static/js/801.4ccfc832.chunk.js","mappings":"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","sources":["components/Timing.js","components/elements/fav.js","components/stationHeader.js","pages/Chatelet.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { removeGareDePrefix } from '../utils/stringUtils';\r\nimport { lineTypes } from '../components/Trafic';\r\nimport relations from '../data/relations.json';\r\nimport zonesDarrets from '../data/zones-d-arrets.json';\r\nimport referentielDesLignes from '../data/referentiel-des-lignes.json';\r\n\r\nfunction TrainInfo({ lineID, stationName }) {\r\n  const stationID = stationName;\r\n\r\n  // Fetch train departure every 2 seconds\r\n  const [trainData, setTrainData] = useState([]);\r\n  const [status, setStatus] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async (url) => {\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        const nextDepartures = data.nextDepartures.data;\r\n\r\n        if (nextDepartures.length === 0 || !nextDepartures.every(train => train.lineDirection)) {\r\n          setStatus('NO_REALTIME_SCHEDULES_FOUND');\r\n        } else {\r\n          const zoneAreas = [];\r\n          nextDepartures.forEach(train => {\r\n            if (lineTypes.TRAIN.includes(train.lineId)) { //\r\n              const correspondingRelation = relations.find(relation => relation.arrid === train.destination.stopPointId.split(':').pop());\r\n  \r\n              if (correspondingRelation) {\r\n                const zoneArea = correspondingRelation.zdcid;\r\n                if (!zoneAreas.includes(zoneArea)) {\r\n                  zoneAreas.push(zoneArea);\r\n                }\r\n              }\r\n            }\r\n          });\r\n\r\n\r\n          function getStationName(zoneArea) {\r\n            var stations = stationID !== undefined ? zonesDarrets.filter(station => station.fields.zdcid === zoneArea) : [];\r\n            return stations.find(station => station.fields.zdatype === 'railStation')?.fields.zdaname\r\n                || stations.find(station => station.fields.zdatype === 'metroStation')?.fields.zdaname  \r\n                || stations.find(station => station.fields.zdatype === 'onstreetTram')?.fields.zdaname\r\n                || stations.find(station => station.fields.zdatype === 'onstreetBus')?.fields.zdaname + ' (' + stations.find(station => station.fields.zdatype === 'onstreetBus')?.fields.zdatown + ')'\r\n          }\r\n\r\n          if (zoneAreas.length > 0) {\r\n            const fetchPromises = zoneAreas.map(zoneArea => {\r\n              const newURL = `https://api-iv.iledefrance-mobilites.fr/lines/line:IDFM:${lineID}/stops/stop_area:IDFM:${stationID}/to/stop_area:IDFM:${zoneArea}/realTime`;\r\n              console.log(newURL)\r\n              return fetch(newURL).then(response => response.json());\r\n            });\r\n\r\n          Promise.all(fetchPromises).then(results => {\r\n            let combinedNextDepartures = results.reduce((combined, result, index) => {\r\n              if (result && result.nextDepartures && result.nextDepartures.data) {\r\n                const zoneArea = zoneAreas[index];\r\n                const stationName = getStationName(zoneArea);\r\n                result.nextDepartures.data.forEach(train => {\r\n                  if (!train.lineDirection) {\r\n                    train.lineDirection = stationName;\r\n                  }\r\n                });\r\n                return combined.concat(result.nextDepartures.data);\r\n              }\r\n              return combined;\r\n            }, []);\r\n          \r\n            // Sort the combinedNextDepartures array by the time property\r\n            combinedNextDepartures.sort((a, b) => parseInt(a.time) - parseInt(b.time));\r\n          \r\n            // Helper function to check for identical objects\r\n            const isIdentical = (obj1, obj2) => {\r\n              return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n            };\r\n          \r\n            // Remove identical objects from combinedNextDepartures\r\n            combinedNextDepartures = combinedNextDepartures.filter(\r\n              (value, index, self) => self.findIndex(obj => isIdentical(obj, value)) === index\r\n            );\r\n            \r\n            setTrainData(combinedNextDepartures);\r\n            setStatus(data.errorMessage);\r\n            });\r\n          } else {\r\n            setTrainData(nextDepartures);\r\n            setStatus(data.errorMessage);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        // Handle error\r\n      }\r\n    };\r\n\r\n    const url = `https://api-iv.iledefrance-mobilites.fr/lines/v2/line:IDFM:${lineID}/stops/stop_area:IDFM:${stationID}/realTime`;\r\n    console.log(url)\r\n    fetchData(url);\r\n\r\n    const intervalId = setInterval(() => {\r\n      fetchData(url);\r\n    }, 2000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [lineID, stationID]);\r\n\r\n\r\n  if (status === 'NO_REALTIME_SCHEDULES_FOUND') {\r\n    return <Link to={`/${lineID}/${stationID}`}><div className=\"shadow-[inset_0rem_0.2rem_0.4rem_0_rgb(0,0,0,0.1)] flex items-center justify-center text-center text-xs lg:text-base bg-white dark:bg-gray-700 dark:text-gray-200 p-4 mb-3 h-[44px] lg:h-[72px]\"><p className='animate-pulse'>Information en direct indisponible</p></div></Link>;\r\n  }\r\n\r\n  // Display loading animation\r\n  if (trainData.length === 0) {\r\n    return (\r\n      <div className=\"overflow-y-auto max-h-[27rem] animate-pulse\">\r\n        <div className=\"flex items-center bg-white dark:bg-gray-800 shadow-[inset_0rem_0.2rem_0.4rem_0_rgb(0,0,0,0.1)] h-[44px] lg:h-[72px] p-1 lg:p-4 mb-1 lg:mb-3\">\r\n          <div role=\"status\" class=\"flex items-center justify-center w-4 lg:w-10 h-4 lg:h-10 ml-1 lg:ml-0 mr-2 lg:mr-4 p-1 bg-gray-300 rounded-sm lg:rounded-lg dark:bg-gray-700\">\r\n            <svg class=\"w-5 h-5 text-gray-200 dark:text-gray-600\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 18\">\r\n              <path d=\"M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z\" />\r\n            </svg>\r\n          </div>\r\n\r\n          <div className=\"flex-grow\">\r\n            <div class=\"w-12 lg:w-24 h-1 lg:h-2.5 mb-1 lg:mb-2.5 bg-gray-300 rounded-full dark:bg-gray-600\"></div>\r\n            <div class=\"w-16 lg:w-32 h-1 lg:h-2 bg-gray-200 rounded-full dark:bg-gray-700\"></div>\r\n          </div>\r\n\r\n          <div className=\"ml-2 lg:ml-5 min-w-max pr-2 text-right\">\r\n            <div class=\"w-6 lg:w-12 h-1 lg:h-2.5 mb-1 lg:mb-2.5 mr-1 bg-gray-300 rounded-full dark:bg-gray-700\"></div>\r\n            <div class=\"w-4 lg:w-8 h-1 lg:h-2 mr-1 bg-gray-200 rounded-full float-right dark:bg-gray-700\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Display train departure\r\n  const groupedTrains = {};\r\n  trainData.forEach((train) => {\r\n    const sens = train.sens || 'other';\r\n    if (!groupedTrains[sens]) {\r\n      groupedTrains[sens] = [];\r\n    }\r\n    groupedTrains[sens].push(train);\r\n  });\r\n\r\n  var lineColor = referentielDesLignes.find(line => line.fields.id_line == lineID)?.fields.colourweb_hexa;\r\n  function blendColor(color, blendWith, alpha) {\r\n    const [r1, g1, b1] = [parseInt(color.slice(0, 2), 16), parseInt(color.slice(2, 4), 16), parseInt(color.slice(4, 6), 16)];\r\n    const [r2, g2, b2] = [parseInt(blendWith.slice(0, 2), 16), parseInt(blendWith.slice(2, 4), 16), parseInt(blendWith.slice(4, 6), 16)];\r\n\r\n    const r = Math.round(r1 * (1 - alpha) + r2 * alpha);\r\n    const g = Math.round(g1 * (1 - alpha) + g2 * alpha);\r\n    const b = Math.round(b1 * (1 - alpha) + b2 * alpha);\r\n\r\n    return ((r << 16) + (g << 8) + b).toString(16).padStart(6, '0');\r\n  }\r\n  var lighterColor = blendColor(lineColor, 'ffffff', 0.5);\r\n\r\n\r\n  return (\r\n    <div className=\"overflow-y-auto max-h-[27rem]\">\r\n      {Object.keys(groupedTrains).map((sens) => (\r\n        <div key={sens}>\r\n          {sens !== 'other' && (\r\n            <h2 className=\"text-xs font-bold mb-2\">\r\n              {sens === '1' ? '' : 'Direction -1'}\r\n            </h2>\r\n          )}\r\n          {groupedTrains[sens].map((train, index) => (\r\n            // <Link to={`/search?line=${lineID}&stop_area=${stationID}`}>\r\n            <Link to={`/${lineID}/${stationID}`}>\r\n            <div \r\n              key={train.time + index} \r\n              className=\"flex items-center bg-white border-gray-400 dark:text-white dark:bg-gray-800 min-h-[44px] max-h-[72px] p-1 lg:p-4 relative\" \r\n              style={{borderBottom: `2px solid #${lineColor}`}}\r\n            >\r\n              <div className='shrink-0'>\r\n                <img src={process.env.PUBLIC_URL + `/images/${lineID}.svg`} alt={train.shortName} className=\"h-4 lg:h-10 pl-1 lg:pl-0\" />\r\n                <h3 className='text-[8px] lg:text-xs justify-center flex mx-auto mt-0.5 pl-0.5 lg:pl-0'>{removeGareDePrefix(train.vehicleName)}</h3>\r\n              </div>\r\n              <div className=\"flex-grow overflow-hidden\">\r\n                <h2 className='font-bold text-[11px] lg:text-lg line-clamp-2 ml-2 lg:ml-4'>{removeGareDePrefix(train.lineDirection)}</h2>\r\n              </div>\r\n              <div className=\"ml-1 lg:ml-5 pr-2 text-right\">\r\n                {train.code === 'message' ? (\r\n                    <p className=\"text-[10px] lg:text-base font-bold text-green-600 dark:text-green-500 whitespace-normal\">{train.schedule}</p>\r\n                ) : (\r\n                  <>\r\n                    <p className={`text-sm lg:text-2xl font-bold text-green-600 dark:text-green-500${train.time === '0' ? 'animate-pulse' : ''}`}>{train.time}<span className=\"text-xs lg:text-lg\">ᵐⁱⁿ</span></p>\r\n                    <p className=\"text-xs lg:text-sm text-right text-gray-400 dark:text-white\">{new Date(Date.now() + (train.code === 'message' ? train.schedule : train.time) * 60000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</p>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div \r\n                className=\"absolute top-0 right-0 bottom-0 left-0 lg:left-0 bg-gradient-to-r from-transparent to-white dark:to-gray-800\" \r\n                style={{\r\n                  backgroundImage: `linear-gradient(to right, transparent, rgba(${parseInt(lighterColor.slice(0, 2), 16)}, ${parseInt(lighterColor.slice(2, 4), 16)}, ${parseInt(lighterColor.slice(4, 6), 16)}, 0.1))`\r\n                }}\r\n              />\r\n            </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrainInfo;","import React, { useState } from 'react';\r\n\r\nconst AddFav = () => {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setClicked(!clicked);\r\n  };\r\n\r\n  // <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 22 20\">\r\n  //   <path d=\"M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z\"/>\r\n  // </svg>\r\n  return (\r\n    <button onClick={handleClick} aria-label={clicked ? 'Remove from favorites' : 'Add to favorites'}>\r\n      {clicked ? (\r\n        <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 14 20\">\r\n          <path d=\"M13 20a1 1 0 0 1-.64-.231L7 15.3l-5.36 4.469A1 1 0 0 1 0 19V2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v17a1 1 0 0 1-1 1Z\" />\r\n        </svg>\r\n      ) : (\r\n        <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 4 15\">\r\n          <path d=\"M3.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm0 6.041a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm0 5.959a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z\" />\r\n        </svg>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddFav;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { checkDisruptions } from './Trafic';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AddFav from './elements/fav'\r\nimport { getStationNameByStationID, getTransportLogoByLineID } from '../utils/dataHelpers';\r\n\r\nfunction StationInfo({ lineID, stationID }) {\r\n    const navigate = useNavigate();\r\n    const handleNavigate = () => {\r\n        navigate(`/line/${lineID}`);\r\n    };\r\n\r\n    // Fetch & check disruptions\r\n    const [disruptedLines, setDisruptedLines] = useState([]);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchDisruptions = async () => {\r\n            const { disruptedLines } = await checkDisruptions();\r\n            setDisruptedLines(disruptedLines);\r\n        };\r\n\r\n        fetchDisruptions();\r\n    }, []);\r\n\r\n    // Check if line is disrupted\r\n    const disrupted = disruptedLines.some(line => line.lineId === 'line:IDFM:' + lineID && line.disrupted === true);\r\n\r\n    // Display station header\r\n    return (\r\n        <div className=\"flex items-center bg-white dark:bg-gray-800 dark:text-white border-gray-900 dark:border-gray-800 border-solid border p-2 lg:p-4 mb-2 lg:mb-4 rounded-b-lg shadow-md min-h-[52px]\" onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>\r\n            {disrupted && (\r\n                <span className=\"relative\">\r\n                    {isHovered && (\r\n                        <div data-popover id=\"popover-top\" role=\"tooltip\" className=\"absolute z-10 inline-block w-40 lg:w-80 text-sm text-gray-500 transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm opacity-100 dark:text-gray-400 dark:border-gray-600 dark:bg-gray-800\">\r\n                            <div className=\"px-3 py-2 bg-gray-100 border-b border-gray-200 rounded-t-lg dark:border-gray-600 dark:bg-gray-700 flex flex-row\">\r\n                                <h3 className=\"flex-grow font-semibold text-gray-900 dark:text-white\">{disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.cause}</h3>\r\n                            </div>\r\n                            <div className=\"px-3 py-2\">\r\n                                <p>{disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.title}</p>\r\n                                <a class=\"bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 hover:dark:bg-gray-600 font-medium rounded-lg text-xs px-3 mt-3 text-center inline-flex items-center cursor-pointer\" onClick={handleNavigate}>\r\n                                    <svg class=\"-ml-0.5 mr-2 h-3 w-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 14\">\r\n                                        <path d=\"M10 0C4.612 0 0 5.336 0 7c0 1.742 3.546 7 10 7 6.454 0 10-5.258 10-7 0-1.664-4.612-7-10-7Zm0 10a3 3 0 1 1 0-6 3 3 0 0 1 0 6Z\" />\r\n                                    </svg>\r\n                                    En savoir plus\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <span className=\"absolute top-[-1rem] right-[-0.4rem] lg:top-[-1.8rem] lg:right-[-0.7rem]\">\r\n                        <span className=\"relative flex h-3 w-3 lg:h-5 lg:w-5\">\r\n                            <span className={`animate-ping absolute inline-flex h-full w-full rounded-full opacity-75 ${disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.severity === 'BLOQUANTE' ? 'bg-red-600' : 'bg-yellow-400'}`}></span>\r\n                            <span className={`relative inline-flex rounded-full h-3 w-3 lg:h-5 lg:w-5 ${disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.severity === 'BLOQUANTE' ? 'bg-red-600' : 'bg-yellow-400'}`}></span>\r\n                        </span>\r\n                    </span>\r\n                </span>\r\n            )}\r\n            <img src={process.env.PUBLIC_URL + `/images/${getTransportLogoByLineID(lineID)}${localStorage.theme === 'dark' ? '_LIGHT' : ''}.svg`} alt={getTransportLogoByLineID(lineID)} className=\"h-5 lg:h-10 mr-1\" />\r\n            <img src={process.env.PUBLIC_URL + `/images/${lineID}.svg`} alt={lineID} className=\"h-5 lg:h-10 mr-2 lg:mr-4\" />\r\n            <p className='text-xs lg:text-base font-medium flex-grow line-clamp-2'>{getStationNameByStationID(stationID)}</p>\r\n            <p className='text-slate-400 text-xs font-bold pr-0.5 lg:pr-2'>\r\n                <AddFav />\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StationInfo;","import StationInfo from '../components/stationHeader';\r\nimport TrainInfo from '../components/Timing';\r\n\r\nconst stations = [\r\n  {\r\n    transportLogo: \"RER\",\r\n    lineID: \"C01742\", // RER A\r\n    stationCode: \"474151\", // Châtelet-Les Halles\r\n    stationName: \"Châtelet-Les Halles\"\r\n  },\r\n  {\r\n    transportLogo: \"RER\",\r\n    lineID: \"C01743\", // RER B\r\n    stationCode: \"474151\", // Châtelet-Les Halles\r\n    stationName: \"Châtelet-Les Halles\"\r\n  },\r\n  {\r\n    transportLogo: \"RER\",\r\n    lineID: \"C01728\", // RER D\r\n    stationCode: \"474151\", // Châtelet-Les Halles\r\n    stationName: \"Châtelet-Les Halles\"\r\n  },\r\n  {\r\n    transportLogo: \"METRO\",\r\n    lineID: \"C01377\", // LIGNE 7\r\n    stationCode: \"71264\", // Châtelet\r\n    stationName: \"Châtelet\"\r\n  },\r\n  {\r\n    transportLogo: \"METRO\",\r\n    lineID: \"C01371\", // LIGNE 1\r\n    stationCode: \"71517\", // Châtelet\r\n    stationName: \"Châtelet\"\r\n  },\r\n  {\r\n    transportLogo: \"METRO\",\r\n    lineID: \"C01374\", // LIGNE 4\r\n    stationCode: \"73794\", // Les Halles\r\n    stationName: \"Les Halles\"\r\n  }\r\n];\r\n\r\nfunction Chatelet() {\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-2 sm:grid-cols-2 lg:grid-cols-3\">\r\n      {stations.map((station, index) => (\r\n        <div key={index} className=\"m-2 sm:m-6\">\r\n          <StationInfo lineID={station.lineID} stationID={station.stationCode}/>\r\n          <TrainInfo lineID={station.lineID} stationName={station.stationCode} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Chatelet;"],"names":["_ref","_referentielDesLignes","lineID","stationID","stationName","_useState","useState","_useState2","_slicedToArray","trainData","setTrainData","_useState3","_useState4","status","setStatus","useEffect","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","nextDepartures","getStationName","zoneAreas","fetchPromises","wrap","_context","prev","next","fetch","sent","json","length","every","train","lineDirection","zoneArea","_stations$find","_stations$find2","_stations$find3","_stations$find4","_stations$find5","stations","undefined","zonesDarrets","filter","station","fields","zdcid","find","zdatype","zdaname","zdatown","forEach","lineTypes","TRAIN","includes","lineId","correspondingRelation","relations","relation","arrid","destination","stopPointId","split","pop","push","map","newURL","concat","console","log","then","Promise","all","results","combinedNextDepartures","reduce","combined","result","index","sort","a","b","parseInt","time","value","self","findIndex","obj","obj1","obj2","JSON","stringify","errorMessage","t0","stop","_x","apply","arguments","intervalId","setInterval","clearInterval","_jsx","Link","to","children","className","_jsxs","role","class","xmlns","fill","viewBox","d","groupedTrains","sens","lineColor","referentielDesLignes","line","id_line","colourweb_hexa","lighterColor","color","blendWith","alpha","_ref3","slice","r1","g1","b1","_ref4","r2","g2","b2","Math","round","toString","padStart","blendColor","Object","keys","style","borderBottom","src","process","alt","shortName","removeGareDePrefix","vehicleName","code","schedule","_Fragment","Date","now","toLocaleTimeString","hour","minute","backgroundImage","clicked","setClicked","onClick","_disruptedLines$find","_disruptedLines$find2","_disruptedLines$find3","_disruptedLines$find4","navigate","useNavigate","disruptedLines","setDisruptedLines","isHovered","setIsHovered","fetchDisruptions","_yield$checkDisruptio","checkDisruptions","disrupted","some","onMouseEnter","onMouseLeave","id","disruption","cause","title","severity","getTransportLogoByLineID","localStorage","theme","getStationNameByStationID","AddFav","transportLogo","stationCode","StationInfo","TrainInfo"],"sourceRoot":""}