{"version":3,"file":"static/js/173.76c05ed9.chunk.js","mappings":"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","sources":["components/Timing.js","components/JourneyDetails.js","pages/Itineraire.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { removeGareDePrefix } from '../utils/stringUtils';\r\nimport { lineTypes } from '../components/Trafic';\r\nimport relations from '../data/relations.json';\r\nimport zonesDarrets from '../data/zones-d-arrets.json';\r\nimport referentielDesLignes from '../data/referentiel-des-lignes.json';\r\nimport { LineLogoByLineID } from '../utils/dataHelpers';\r\n\r\nfunction TrainInfo({ lineID, stationName }) {\r\n  const stationID = stationName;\r\n\r\n  // Fetch train departure every 2 seconds\r\n  const [trainData, setTrainData] = useState([]);\r\n  const [status, setStatus] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async (url) => {\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        const nextDepartures = data.nextDepartures.data;\r\n\r\n        if (nextDepartures.length === 0 || !nextDepartures.every(train => train.lineDirection)) {\r\n          setStatus('NO_REALTIME_SCHEDULES_FOUND');\r\n        } else {\r\n          const zoneAreas = [];\r\n          nextDepartures.forEach(train => {\r\n            if (lineTypes.TRAIN.includes(train.lineId)) { //\r\n              const correspondingRelation = relations.find(relation => relation.arrid === train.destination.stopPointId.split(':').pop());\r\n  \r\n              if (correspondingRelation) {\r\n                const zoneArea = correspondingRelation.zdcid;\r\n                if (!zoneAreas.includes(zoneArea)) {\r\n                  zoneAreas.push(zoneArea);\r\n                }\r\n              }\r\n            }\r\n          });\r\n\r\n\r\n          function getStationName(zoneArea) {\r\n            var stations = stationID !== undefined ? zonesDarrets.filter(station => station.fields.zdcid === zoneArea) : [];\r\n            return stations.find(station => station.fields.zdatype === 'railStation')?.fields.zdaname\r\n                || stations.find(station => station.fields.zdatype === 'metroStation')?.fields.zdaname  \r\n                || stations.find(station => station.fields.zdatype === 'onstreetTram')?.fields.zdaname\r\n                || stations.find(station => station.fields.zdatype === 'onstreetBus')?.fields.zdaname + ' (' + stations.find(station => station.fields.zdatype === 'onstreetBus')?.fields.zdatown + ')'\r\n          }\r\n\r\n          if (zoneAreas.length > 0) {\r\n            const fetchPromises = zoneAreas.map(zoneArea => {\r\n              const newURL = `https://api-iv.iledefrance-mobilites.fr/lines/line:IDFM:${lineID}/stops/stop_area:IDFM:${stationID}/to/stop_area:IDFM:${zoneArea}/realTime`;\r\n              console.log(newURL)\r\n              return fetch(newURL).then(response => response.json());\r\n            });\r\n\r\n          Promise.all(fetchPromises).then(results => {\r\n            let combinedNextDepartures = results.reduce((combined, result, index) => {\r\n              if (result && result.nextDepartures && result.nextDepartures.data) {\r\n                const zoneArea = zoneAreas[index];\r\n                const stationName = getStationName(zoneArea);\r\n                result.nextDepartures.data.forEach(train => {\r\n                  if (!train.lineDirection) {\r\n                    train.lineDirection = stationName;\r\n                  }\r\n                });\r\n                return combined.concat(result.nextDepartures.data);\r\n              }\r\n              return combined;\r\n            }, []);\r\n          \r\n            // Sort the combinedNextDepartures array by the time property\r\n            combinedNextDepartures.sort((a, b) => parseInt(a.time) - parseInt(b.time));\r\n          \r\n            // Helper function to check for identical objects\r\n            const isIdentical = (obj1, obj2) => {\r\n              return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n            };\r\n          \r\n            // Remove identical objects from combinedNextDepartures\r\n            combinedNextDepartures = combinedNextDepartures.filter(\r\n              (value, index, self) => self.findIndex(obj => isIdentical(obj, value)) === index\r\n            );\r\n            \r\n            setTrainData(combinedNextDepartures);\r\n            setStatus(data.errorMessage);\r\n            });\r\n          } else {\r\n            setTrainData(nextDepartures);\r\n            setStatus(data.errorMessage);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        // Handle error\r\n      }\r\n    };\r\n\r\n    const url = `https://api-iv.iledefrance-mobilites.fr/lines/v2/line:IDFM:${lineID}/stops/stop_area:IDFM:${stationID}/realTime`;\r\n    console.log(url)\r\n    fetchData(url);\r\n\r\n    const intervalId = setInterval(() => {\r\n      fetchData(url);\r\n    }, 2000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [lineID, stationID]);\r\n\r\n\r\n  if (status === 'NO_REALTIME_SCHEDULES_FOUND') {\r\n    return <Link to={`/${lineID}/${stationID}`}><div className=\"shadow-[inset_0rem_0.2rem_0.4rem_0_rgb(0,0,0,0.1)] flex items-center justify-center text-center text-xs lg:text-base bg-white dark:bg-gray-700 dark:text-gray-200 p-4 mb-3 h-[44px] lg:h-[72px]\"><p className='animate-pulse'>Information en direct indisponible</p></div></Link>;\r\n  }\r\n\r\n  // Display loading animation\r\n  if (trainData.length === 0) {\r\n    return (\r\n      <div className=\"overflow-y-auto max-h-[27rem] animate-pulse\">\r\n        <div className=\"flex items-center bg-white dark:bg-gray-800 shadow-[inset_0rem_0.2rem_0.4rem_0_rgb(0,0,0,0.1)] h-[44px] lg:h-[72px] p-1 lg:p-4 mb-1 lg:mb-3\">\r\n          <div role=\"status\" class=\"flex items-center justify-center w-4 lg:w-10 h-4 lg:h-10 ml-1 lg:ml-0 mr-2 lg:mr-4 p-1 bg-gray-300 rounded-sm lg:rounded-lg dark:bg-gray-700\">\r\n            <svg class=\"w-5 h-5 text-gray-200 dark:text-gray-600\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 18\">\r\n              <path d=\"M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z\" />\r\n            </svg>\r\n          </div>\r\n\r\n          <div className=\"flex-grow\">\r\n            <div class=\"w-12 lg:w-24 h-1 lg:h-2.5 mb-1 lg:mb-2.5 bg-gray-300 rounded-full dark:bg-gray-600\"></div>\r\n            <div class=\"w-16 lg:w-32 h-1 lg:h-2 bg-gray-200 rounded-full dark:bg-gray-700\"></div>\r\n          </div>\r\n\r\n          <div className=\"ml-2 lg:ml-5 min-w-max pr-2 text-right\">\r\n            <div class=\"w-6 lg:w-12 h-1 lg:h-2.5 mb-1 lg:mb-2.5 mr-1 bg-gray-300 rounded-full dark:bg-gray-700\"></div>\r\n            <div class=\"w-4 lg:w-8 h-1 lg:h-2 mr-1 bg-gray-200 rounded-full float-right dark:bg-gray-700\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Display train departure\r\n  const groupedTrains = {};\r\n  trainData.forEach((train) => {\r\n    const sens = train.sens || 'other';\r\n    if (!groupedTrains[sens]) {\r\n      groupedTrains[sens] = [];\r\n    }\r\n    groupedTrains[sens].push(train);\r\n  });\r\n\r\n  var lineColor = referentielDesLignes.find(line => line.fields.id_line == lineID)?.fields.colourweb_hexa;\r\n  function blendColor(color, blendWith, alpha) {\r\n    const [r1, g1, b1] = [parseInt(color.slice(0, 2), 16), parseInt(color.slice(2, 4), 16), parseInt(color.slice(4, 6), 16)];\r\n    const [r2, g2, b2] = [parseInt(blendWith.slice(0, 2), 16), parseInt(blendWith.slice(2, 4), 16), parseInt(blendWith.slice(4, 6), 16)];\r\n\r\n    const r = Math.round(r1 * (1 - alpha) + r2 * alpha);\r\n    const g = Math.round(g1 * (1 - alpha) + g2 * alpha);\r\n    const b = Math.round(b1 * (1 - alpha) + b2 * alpha);\r\n\r\n    return ((r << 16) + (g << 8) + b).toString(16).padStart(6, '0');\r\n  }\r\n  var lighterColor = blendColor(lineColor, 'ffffff', 0.5);\r\n\r\n\r\n  return (\r\n    <div className=\"overflow-y-auto max-h-[27rem]\">\r\n      {Object.keys(groupedTrains).map((sens) => (\r\n        <div key={sens}>\r\n          {sens !== 'other' && (\r\n            <h2 className=\"text-xs font-bold mb-2\">\r\n              {sens === '1' ? '' : 'Direction -1'}\r\n            </h2>\r\n          )}\r\n          {groupedTrains[sens].map((train, index) => (\r\n            // <Link to={`/search?line=${lineID}&stop_area=${stationID}`}>\r\n            <Link to={`/${lineID}/${stationID}`}>\r\n            <div \r\n              key={train.time + index} \r\n              className=\"flex items-center bg-white border-gray-400 dark:text-white dark:bg-gray-800 min-h-[44px] max-h-[72px] p-1 lg:p-4 relative\" \r\n              style={{borderBottom: `2px solid #${lineColor}`}}\r\n            >\r\n              <div className='shrink-0'>\r\n                <LineLogoByLineID lineID={lineID} className=\"h-4 lg:h-10 pl-1 lg:pl-0\" />\r\n                <h3 className='text-[8px] lg:text-xs justify-center flex mx-auto mt-0.5 pl-0.5 lg:pl-0'>{removeGareDePrefix(train.vehicleName)}</h3>\r\n              </div>\r\n              <div className=\"flex-grow overflow-hidden\">\r\n                <h2 className='font-bold text-[11px] lg:text-lg line-clamp-2 ml-2 lg:ml-4'>{removeGareDePrefix(train.lineDirection)}</h2>\r\n              </div>\r\n              <div className=\"ml-1 lg:ml-5 pr-2 text-right\">\r\n                {train.code === 'message' ? (\r\n                    <p className=\"text-[10px] lg:text-base font-bold text-green-600 dark:text-green-500 whitespace-normal\">{train.schedule}</p>\r\n                ) : (\r\n                  <>\r\n                    <p className={`text-sm lg:text-2xl font-bold text-green-600 dark:text-green-500${train.time === '0' ? 'animate-pulse' : ''}`}>{train.time}<span className=\"text-xs lg:text-lg\">ᵐⁱⁿ</span></p>\r\n                    <p className=\"text-xs lg:text-sm text-right text-gray-400 dark:text-white\">{new Date(Date.now() + (train.code === 'message' ? train.schedule : train.time) * 60000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</p>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div \r\n                className=\"absolute top-0 right-0 bottom-0 left-0 lg:left-0 bg-gradient-to-r from-transparent to-white dark:to-gray-800\" \r\n                style={{\r\n                  backgroundImage: `linear-gradient(to right, transparent, rgba(${parseInt(lighterColor.slice(0, 2), 16)}, ${parseInt(lighterColor.slice(2, 4), 16)}, ${parseInt(lighterColor.slice(4, 6), 16)}, 0.1))`\r\n                }}\r\n              />\r\n            </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrainInfo;","import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Polyline, Marker, Popup, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { LatLng } from 'leaflet';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { convertTransportMode } from '../utils/stringUtils';\r\nimport TrainInfo from '../components/Timing';\r\nimport relations from '../data/relations.json';\r\nimport { getLineColorByLineID, LineLogoByLineID, getTransportByLineID } from '../utils/dataHelpers';\r\nimport ReactDOMServer from 'react-dom/server';\r\n\r\nfunction JourneyDetails({ journeyData }) {\r\n    const [showStops, setShowStops] = useState({});\r\n\r\n    // Toggle showStops for a section\r\n    const toggleStops = (sectionId) => {\r\n        setShowStops(prevState => ({ ...prevState, [sectionId]: !prevState[sectionId] }));\r\n    };\r\n\r\n    // Helper function to format date and time\r\n    const formatDateTime = (dateTime) => {\r\n        const date = new Date(dateTime);\r\n        if (!isNaN(date.getTime())) {\r\n            return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\r\n        }\r\n        return 'Unavailable';\r\n    };\r\n\r\n    // Extract coordinates and create markers for each section\r\n    const sectionDetails = journeyData.sections.map((section, index) => {\r\n        const coordinates = section.geojson?.coordinates.map(([lng, lat]) => [lat, lng]) || [];\r\n        const color = section.display_informations && section.display_informations.color ? `#${section.display_informations.color}` : '#333333'; // Default to a dark color if not specified\r\n        const markerPosition = coordinates[0] || null; // First coordinate as marker position\r\n\r\n        return {\r\n            index,\r\n            coordinates,\r\n            color,\r\n            markerPosition,\r\n            lineName: section.display_informations?.code || `Line ${index + 1}`,\r\n            lineID: section.links[1]?.id,\r\n            from: section.from,\r\n            to: section.to,\r\n            terminus: section.display_informations?.direction || 'Unknown',\r\n            mode: section.display_informations?.commercial_mode || section.mode,\r\n            stop_date_times: section.stop_date_times ? section.stop_date_times.slice(1, -1) : [],\r\n            departure: new Date(section.departure_date_time.replace(/(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2})/, \"$1-$2-$3T$4:$5:$6\")).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n            arrival: new Date(section.arrival_date_time.replace(/(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2})/, \"$1-$2-$3T$4:$5:$6\")).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n            duration: Math.floor(section.duration / 60),\r\n        };\r\n    });\r\n\r\n    // Helper function to format the total duration\r\n    const formatDuration = (seconds) => {\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        return hours === 0 ? `${minutes} min` : `${hours} h ${minutes} min`;\r\n    };\r\n\r\n    const dx = sectionDetails[0].coordinates[0][0] - ((sectionDetails[0].coordinates[0][0] + sectionDetails[sectionDetails.length - 1].coordinates[0][0]) / 2);\r\n    const dy = sectionDetails[0].coordinates[0][1] - ((sectionDetails[0].coordinates[0][1] + sectionDetails[sectionDetails.length - 1].coordinates[0][1]) / 2);\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n    const zoom = Math.floor(8 - Math.log(distance) / Math.log(2));\r\n\r\n    const RecenterControl = () => {\r\n        const map = useMap();\r\n\r\n        useEffect(() => {\r\n            const control = new L.Control({ position: 'bottomright' });\r\n\r\n            control.onAdd = () => {\r\n                const button = L.DomUtil.create('button', 'leaflet-bar leaflet-control leaflet-control-custom');\r\n                button.innerHTML = '<svg class=\"w-4 h-4\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 14 20\"><path d=\"M7 0a7 7 0 0 0-1 13.92V19a1 1 0 1 0 2 0v-5.08A7 7 0 0 0 7 0Zm0 5.5A1.5 1.5 0 0 0 5.5 7a1 1 0 0 1-2 0A3.5 3.5 0 0 1 7 3.5a1 1 0 0 1 0 2Z\"/></svg>';\r\n                button.style.cssText = 'background-color: white; padding: 6px; cursor: pointer;';\r\n                button.onclick = () => map.flyTo([\r\n                    (sectionDetails[0].coordinates[0][0] + sectionDetails[sectionDetails.length - 1].coordinates[0][0]) / 2,\r\n                    (sectionDetails[0].coordinates[0][1] + sectionDetails[sectionDetails.length - 1].coordinates[0][1]) / 2\r\n                ], zoom);\r\n                return button;\r\n            };\r\n\r\n            control.addTo(map);\r\n\r\n            return () => control.remove();\r\n        }, [map]);\r\n\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-4xl mx-auto\">\r\n            {sectionDetails.length > 0 && (\r\n                <div>\r\n                    <MapContainer\r\n                        className=\"z-10 h-96\"\r\n                        center={[\r\n                            (sectionDetails[0].coordinates[0][0] + sectionDetails[sectionDetails.length - 1].coordinates[0][0]) / 2,\r\n                            (sectionDetails[0].coordinates[0][1] + sectionDetails[sectionDetails.length - 1].coordinates[0][1]) / 2\r\n                        ]}\r\n                        zoom={zoom}\r\n                        attributionControl={false}\r\n                    >\r\n                        <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\" />\r\n                        <RecenterControl />\r\n\r\n                        {sectionDetails.map((section, idx) => (\r\n                            <React.Fragment key={idx}>\r\n                                <Polyline positions={section.coordinates} color={section.color} dashArray={section.mode === 'walking' ? '5, 5' : null}\r\n                                />\r\n                                {section.coordinates[0] && section.duration > 1 && (\r\n                                    <>\r\n                                        {section.lineID && (\r\n                                            <Marker\r\n                                                position={section.coordinates[0]}\r\n                                                icon={L.divIcon({\r\n                                                  className: 'my-div-icon',\r\n                                                  html: ReactDOMServer.renderToString(<LineLogoByLineID lineID={section.lineID.split(\":\").pop()} className=\"h-5\" />),\r\n                                                  iconSize: [25,], // size of the icon\r\n                                                  iconAnchor: [10, 20], // point of the icon which will correspond to marker's location\r\n                                                  popupAnchor: [0, -40] // point from which the popup should open relative to the iconAnchor\r\n                                                })}\r\n                                            />\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </MapContainer>\r\n                </div>\r\n            )}\r\n\r\n            {sectionDetails.map((section, index) => {\r\n                const isCorrespondence = section.from && section.to && section.from?.stop_point?.stop_area?.name === section.to?.stop_point?.stop_area?.name;\r\n                const isWaitingTime = !section.from && !section.to && section.duration;\r\n                const color = section.color;\r\n\r\n                if (section.mode === 'walking' && section.duration === 0) {\r\n                    return null;\r\n                }\r\n\r\n                return (\r\n                    <div key={section.index} className=\"bg-white relative flex p-4\">\r\n                        <div className=\"w-10 flex justify-center mr-4 flex-wrap\">                            <div\r\n                            style={{\r\n                                background: section.mode === 'walking' || section.mode === undefined\r\n                                    ? `linear-gradient(${color} 50%, transparent 50%)`\r\n                                    : color,\r\n                                backgroundSize: '1px 10px'\r\n                            }}\r\n                            className=\"absolute w-1 h-full z-10 top-6\"\r\n                        ></div>\r\n                            <div className=\"flex flex-col items-center space-y-2 mb-2 absolute z-20\">\r\n                                {section.mode !== undefined && !isCorrespondence ? (\r\n                                    <img\r\n                                        src={process.env.PUBLIC_URL + `/images/${convertTransportMode(section.mode)}.svg`}\r\n                                        alt={convertTransportMode(section.mode)}\r\n                                        className=\"bg-white h-6 lg:h-10\" />\r\n                                ) : (\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19 30\" className=\"h-6 lg:h-10\">\r\n                                        <path fill=\"#fff\" stroke=\"#000\" stroke-width=\"2.5\" d=\"M1.75 9a7.75 7.75 0 1 1 15.5 0v12a7.75 7.75 0 0 1-15.5 0V9Z\"></path>\r\n                                    </svg>\r\n                                )}\r\n                                {section.lineID && (\r\n                                    // <img\r\n                                    //     src={process.env.PUBLIC_URL + `/images/${section.lineID.split(\":\").pop()}.svg`}\r\n                                    //     alt={section.lineID.split(\":\").pop()}\r\n                                    //     className=\"h-6 lg:h-10\"\r\n                                    // />\r\n                                    <LineLogoByLineID lineID={section.lineID.split(\":\").pop()} className=\"h-6 lg:h-10\" />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"space-y-6 w-full\">\r\n                            {isCorrespondence ? (\r\n                                <p className='text-sm'>{section.duration} minutes de correspondance</p>\r\n                            ) : isWaitingTime ? (\r\n                                <p className='text-sm'>{section.duration} minutes d'attente</p>\r\n                            ) : (\r\n                                <>\r\n                                    <div>\r\n                                        <div className=\"flex justify-between font-bold\">\r\n                                            <p>{section.from?.stop_point?.stop_area?.name || section.from?.name}</p>\r\n                                            <p>{section.departure}</p>\r\n                                        </div>\r\n                                        {section.terminus !== 'Unknown' && (\r\n                                            <div className=\"flex items-center text-xs\">\r\n                                                <svg className=\"w-2 h-2 mr-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 10\">\r\n                                                    <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M1 5h12m0 0L9 1m4 4L9 9\" />\r\n                                                </svg>\r\n                                                {section.terminus}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    {section.mode !== 'walking' && section.mode !== undefined && (\r\n                                        <TrainInfo\r\n                                            lineID={section.lineID.split(':').pop()}\r\n                                            stationName={\r\n                                                (() => {\r\n                                                    try {\r\n                                                        let relation = relations.find(relation => relation.arrid === section.from.id.split(\":\").pop());\r\n                                                        if (!relation) {\r\n                                                            relation = relations.find(relation => relation.zdaid === section.from.id.split(\":\").pop());\r\n                                                        }\r\n                                                        return relation ? relation.zdcid : '';\r\n                                                    } catch (error) {\r\n                                                        console.error('Error accessing zdcid:', error);\r\n                                                        return '';\r\n                                                    }\r\n                                                })()\r\n                                            }\r\n                                        />\r\n                                    )}\r\n                                    <div className=\"flex items-center space-x-2 text-gray-500 text-sm\">\r\n                                        <p>{section.stop_date_times.length + 1} arrêts | {section.duration} min</p>\r\n\r\n                                        <button onClick={() => toggleStops(section.id)}>\r\n                                            {showStops ? (\r\n                                                <svg class=\"w-2 h-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 8\">\r\n                                                    <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 7 7.674 1.3a.91.91 0 0 0-1.348 0L1 7\" />\r\n                                                </svg>\r\n                                            ) : (\r\n                                                <svg class=\"w-2 h-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 8\">\r\n                                                    <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 1 5.326 5.7a.909.909 0 0 0 1.348 0L13 1\" />\r\n                                                </svg>\r\n                                            )}\r\n                                        </button>\r\n                                    </div>\r\n                                    {showStops[section.id] && (\r\n                                        <ul>\r\n                                            {section.stop_date_times.map((stop, index) => (\r\n                                                <li key={index}>{stop.stop_point.name}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    )}\r\n                                    <div className=\"flex justify-between font-bold\">\r\n                                        <p>{section.to?.stop_point?.stop_area?.name || section.to?.name}</p>\r\n                                        <p>{section.arrival}</p>\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JourneyDetails;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { convertTransportMode } from '../utils/stringUtils';\r\nimport JourneyDetails from \"../components/JourneyDetails\";\r\nimport { LineLogoByLineID } from \"../utils/dataHelpers\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\nfunction Trip() {\r\n    let params = new URLSearchParams(useLocation().search);\r\n    let from = params.get('from');\r\n    let to = params.get('to');\r\n\r\n    const [trainData, setTrainData] = useState([]);\r\n    const [selectedJourney, setSelectedJourney] = useState(null);\r\n    const journeyDetailsRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchLineData = async () => {\r\n            const response = await fetch(`https://prim.iledefrance-mobilites.fr/marketplace/navitia/coverage/fr-idf/journeys?from=${from}&to=${to}`, {\r\n                headers: {\r\n                    'apikey': process.env.REACT_APP_IDFM_API_KEY\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n            setTrainData(data.journeys ? data.journeys : []);\r\n        };\r\n\r\n        fetchLineData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedJourney && journeyDetailsRef.current) {\r\n            journeyDetailsRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }, [selectedJourney]);\r\n\r\n    const handleJourneySelect = (journey) => {\r\n        setSelectedJourney(journey);\r\n    };\r\n\r\n    // Helper function to format the total duration\r\n    const formatDuration = (seconds) => {\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        return hours === 0 ? `${minutes} min` : `${hours} h ${minutes} min`;\r\n    };\r\n\r\n    // Helper function to format the cost\r\n    const formatCost = (fare) => {\r\n        if (!fare.found) return 'Not available';\r\n        return `${(fare.total.value / 100).toFixed(2)} ${fare.total.currency === 'centime' ? 'EUR' : fare.total.currency}`;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {trainData.length > 0 ? (\r\n                <div>\r\n                    {trainData.map((journey, index) => {\r\n                        const totalDuration = formatDuration(journey.durations.total);\r\n                        const totalCost = formatCost(journey.fare);\r\n                        const departureTime = new Date(new Date(journey.departure_date_time.replace(/(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2})/, \"$1-$2-$3T$4:$5:$6Z\")).getTime() - 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n                        const arrivalTime = new Date(new Date(journey.arrival_date_time.replace(/(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2})/, \"$1-$2-$3T$4:$5:$6Z\")).getTime() - 60 * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n                        return (\r\n                            <div\r\n                                key={index}\r\n                                className={`flex flex-col p-2 bg-white dark:bg-gray-800 dark:text-white cursor-pointer ${selectedJourney === journey ? 'sticky top-0 z-50' : ''}`}\r\n                                onClick={() => handleJourneySelect(journey)}\r\n                            >                                <div className=\"flex overflow-x-auto py-2\">\r\n                                    {journey.sections.map((section, idx) => (\r\n                                        <React.Fragment key={idx}>\r\n                                            <div className='flex items-center gap-1 shrink-0'>\r\n                                                {section.display_informations?.commercial_mode || section.mode ? (\r\n                                                    section.mode !== 'walking' || (section.mode === 'walking' && section.duration >= 60) ? (\r\n                                                        <img src={process.env.PUBLIC_URL + `/images/${convertTransportMode(section.display_informations?.commercial_mode || section.mode)}${localStorage.theme === 'dark' ? '_LIGHT' : ''}.svg`} alt={convertTransportMode(section.display_informations?.commercial_mode)} className=\"h-6 lg:h-10\" />\r\n                                                    ) : null\r\n                                                ) : null}\r\n                                                {section.links[1]?.id ? (\r\n                                                    // <img src={process.env.PUBLIC_URL + `/images/${section.links[1]?.id.split(\":\").pop()}.svg`} alt={section.links[1]?.id.split(\":\").pop()} className=\"h-6 lg:h-10\" />\r\n                                                    <LineLogoByLineID lineID={section.links[1]?.id.split(\":\").pop()} className=\"h-6 lg:h-10\" />\r\n\r\n                                                ) : null}\r\n                                                {idx < journey.sections.length - 1 && (section.display_informations?.commercial_mode || section.mode || section.links[1]?.id) && (\r\n                                                    section.mode !== 'walking' || (section.mode === 'walking' && section.duration >= 60) ? (\r\n                                                        idx !== journey.sections.length - 2 ? (\r\n                                                            <svg className=\"w-2 h-2 mr-0.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 8 14\">\r\n                                                                <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 13 5.7-5.326a.909.909 0 0 0 0-1.348L1 1\" />\r\n                                                            </svg>\r\n                                                        ) : null\r\n                                                    ) : null\r\n                                                )}\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                </div>\r\n                                <div className=\"flex justify-between items-center\">\r\n                                    <p className='text-sm'>{totalCost}</p>\r\n                                    <div className='text-right'>\r\n                                        <p><strong>{totalDuration}</strong></p>\r\n                                        <p className='text-sm'>{departureTime} - {arrivalTime}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n                    {selectedJourney &&\r\n                        <div ref={journeyDetailsRef}>\r\n                            <JourneyDetails key={Date.now()} journeyData={selectedJourney} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            ) : (\r\n                <div className=\"flex items-center justify-center\" style={{ height: 'calc(100vh - 130px)' }}>\r\n                    <HashLoader size={30} color=\"#6D28D9\" />\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Trip;"],"names":["_ref","_referentielDesLignes","lineID","stationID","stationName","_useState","useState","_useState2","_slicedToArray","trainData","setTrainData","_useState3","_useState4","status","setStatus","useEffect","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","nextDepartures","getStationName","zoneAreas","fetchPromises","wrap","_context","prev","next","fetch","sent","json","length","every","train","lineDirection","zoneArea","_stations$find","_stations$find2","_stations$find3","_stations$find4","_stations$find5","stations","undefined","zonesDarrets","filter","station","fields","zdcid","find","zdatype","zdaname","zdatown","forEach","lineTypes","TRAIN","includes","lineId","correspondingRelation","relations","relation","arrid","destination","stopPointId","split","pop","push","map","newURL","concat","console","log","then","Promise","all","results","combinedNextDepartures","reduce","combined","result","index","sort","a","b","parseInt","time","value","self","findIndex","obj","obj1","obj2","JSON","stringify","errorMessage","t0","stop","_x","apply","arguments","intervalId","setInterval","clearInterval","_jsx","Link","to","children","className","_jsxs","role","class","xmlns","fill","viewBox","d","groupedTrains","sens","lineColor","referentielDesLignes","line","id_line","colourweb_hexa","lighterColor","color","blendWith","alpha","_ref3","slice","r1","g1","b1","_ref4","r2","g2","b2","Math","round","toString","padStart","blendColor","Object","keys","style","borderBottom","LineLogoByLineID","removeGareDePrefix","vehicleName","code","schedule","_Fragment","Date","now","toLocaleTimeString","hour","minute","backgroundImage","journeyData","showStops","setShowStops","sectionDetails","sections","section","_section$geojson","_section$display_info","_section$links$","_section$display_info2","_section$display_info3","coordinates","geojson","lng","display_informations","markerPosition","lineName","links","id","from","terminus","direction","mode","commercial_mode","stop_date_times","departure","departure_date_time","replace","arrival","arrival_date_time","duration","floor","dx","dy","distance","sqrt","zoom","RecenterControl","useMap","control","L","position","onAdd","button","create","innerHTML","cssText","onclick","flyTo","addTo","remove","MapContainer","center","attributionControl","TileLayer","idx","React","Polyline","positions","dashArray","Marker","icon","html","ReactDOMServer","iconSize","iconAnchor","popupAnchor","_section$from","_section$from$stop_po","_section$from$stop_po2","_section$to","_section$to$stop_poin","_section$to$stop_poin2","_section$from2","_section$from2$stop_p","_section$from2$stop_p2","_section$from3","_section$to2","_section$to2$stop_poi","_section$to2$stop_poi2","_section$to3","isCorrespondence","stop_point","stop_area","name","isWaitingTime","background","backgroundSize","stroke","src","process","convertTransportMode","alt","TrainInfo","zdaid","error","onClick","sectionId","prevState","_objectSpread","_defineProperty","params","URLSearchParams","useLocation","search","get","selectedJourney","setSelectedJourney","journeyDetailsRef","useRef","fetchLineData","headers","journeys","current","scrollIntoView","behavior","journey","fare","totalDuration","seconds","hours","minutes","formatDuration","durations","total","totalCost","found","toFixed","currency","departureTime","getTime","arrivalTime","handleJourneySelect","_section$links$2","_section$display_info4","_section$links$3","localStorage","theme","strokeLinecap","strokeLinejoin","strokeWidth","ref","JourneyDetails","height","HashLoader","size"],"sourceRoot":""}