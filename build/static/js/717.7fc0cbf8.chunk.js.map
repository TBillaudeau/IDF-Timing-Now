{"version":3,"file":"static/js/717.7fc0cbf8.chunk.js","mappings":"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","sources":["components/Timing2.js","components/breadcrumb.js","components/elements/fav.js","components/stationHeader.js","pages/StationInfo.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { set } from 'date-fns';\r\nimport relations from '../data/relations.json';\r\nimport zonesDarrets from '../data/zones-d-arrets.json';\r\nimport referentielDesLignes from '../data/referentiel-des-lignes.json';\r\nimport LineSVG from './tools/createLineLogo';\r\nimport { getLineColorByLineID, LineLogoByLineID, getTransportByLineID } from '../utils/dataHelpers';\r\n\r\nfunction TrainInfo({ lineID, stationName }) {\r\n\r\n  // Fetch train departure every 2 seconds\r\n  const [trainData, setTrainData] = useState([]);\r\n  const [status, setStatus] = useState('');\r\n\r\n  const calculateMinutesFromNow = (time) => {\r\n    return Math.round((new Date(time) - new Date()) / 60000);\r\n  };\r\n\r\n  const url = `https://prim.iledefrance-mobilites.fr/marketplace/stop-monitoring?MonitoringRef=STIF:StopArea:SP:${stationName}:`;\r\n  useEffect(() => {\r\n    const fetchData = (url, setData, setStatus) => {\r\n      fetch(url, {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'apikey': process.env.REACT_APP_IDFM_API_KEY\r\n        }\r\n      })\r\n        .then(response => response.status === 404 ? null : response.json())\r\n        .then(data => {\r\n          const departures = data?.Siri?.ServiceDelivery?.StopMonitoringDelivery[0]?.MonitoredStopVisit\r\n            ?.filter(journey => {\r\n              const expectedDepartureTime = journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedDepartureTime;\r\n              const vehicleAtStop = journey?.MonitoredVehicleJourney?.MonitoredCall?.VehicleAtStop;\r\n              return !(vehicleAtStop && new Date(expectedDepartureTime) < new Date());\r\n            })\r\n            ?.map(journey => ({\r\n              lineRef: journey?.MonitoredVehicleJourney?.LineRef?.value,\r\n              operatorRef: journey?.MonitoredVehicleJourney?.OperatorRef?.value,\r\n              stopPointName: journey?.MonitoredVehicleJourney?.MonitoredCall?.StopPointName[0]?.value,\r\n              directionName: journey?.MonitoredVehicleJourney?.DirectionName[0]?.value,\r\n              destinationName: journey?.MonitoredVehicleJourney?.DestinationName[0]?.value,\r\n              vehicleJourneyNote: journey?.MonitoredVehicleJourney?.JourneyNote[0]?.value,\r\n              vehicleJourneyName: journey?.MonitoredVehicleJourney?.VehicleJourneyName[0]?.value || journey?.MonitoredVehicleJourney?.TrainNumbers?.TrainNumberRef[0]?.value,\r\n              expectedArrivalTime: journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedArrivalTime,\r\n              aimedArrival: journey?.MonitoredVehicleJourney?.MonitoredCall?.AimedArrival,\r\n              expectedDepartureTime: journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedDepartureTime,\r\n              aimedArrivalTime: journey?.MonitoredVehicleJourney?.MonitoredCall?.AimedArrivalTime,\r\n              arrivalStatus: journey?.MonitoredVehicleJourney?.MonitoredCall?.ArrivalStatus,\r\n              departureStatus: journey?.MonitoredVehicleJourney?.MonitoredCall?.DepartureStatus,\r\n              vehicleAtStop: journey?.MonitoredVehicleJourney?.MonitoredCall?.VehicleAtStop,\r\n              arrivalPlatform: journey?.MonitoredVehicleJourney?.MonitoredCall?.ArrivalPlatformName?.value,\r\n              trainNumber: journey?.MonitoredVehicleJourney?.TrainNumber?.TrainNumberRef[0]?.value,\r\n              minutesFromNow: calculateMinutesFromNow(\r\n                journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedArrivalTime || \r\n                journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedDepartureTime ||\r\n                journey?.MonitoredVehicleJourney?.MonitoredCall?.AimedArrivalTime\r\n              ),\r\n            }));\r\n\r\n          setData(departures.sort((a, b) => a.minutesFromNow - b.minutesFromNow));\r\n        })\r\n        .catch(error => console.error(error));\r\n    };\r\n\r\n    fetchData(url, setTrainData, setStatus);\r\n    const intervalId = setInterval(() => fetchData(url, setTrainData, setStatus), 2000);\r\n    return () => clearInterval(intervalId);\r\n  }, [stationName]);\r\n\r\n  if (status === 'NO_REALTIME_SCHEDULES_FOUND') {\r\n    return <div className=\"flex items-center justify-center text-center text-xs lg:text-base bg-white dark:bg-gray-700 dark:text-gray-200 rounded-lg shadow-md p-4 mb-3 h-[44px] lg:h-[72px]\"><p className='animate-pulse'>Information en direct indisponible</p></div>;\r\n  }\r\n\r\n  // Display train departures grouped by line direction\r\n  return (\r\n    <div className=\"space-y-2 m-2\">\r\n      {trainData.map((train, index) => {\r\n        const transport = getTransportByLineID(train.lineRef.split(\"::\").pop().split(\":\")[0]);\r\n        return (\r\n          <div\r\n            key={index}\r\n            className={`flex items-center bg-white border-gray-400 dark:text-white dark:bg-gray-700 h-14 lg:h-16 p-2 lg:p-3 relative gap-2 ${!train.expectedArrivalTime && !train.expectedDepartureTime && train.aimedArrivalTime ? 'line-through text-gray-500' : ''} ${train.expectedArrivalTime && !train.expectedDepartureTime ? 'text-gray-500' : ''}`}\r\n            style={{ borderBottom: `4px solid #${getLineColorByLineID(train.lineRef.replace(/:$/, '').split(':').pop())}` }} // Replace lineColor with your desired color\r\n          >\r\n            <div className=\"lg:w-20 text-sm lg:text-base flex flex-row shrink-0\">\r\n              {transport &&\r\n                <img src={process.env.PUBLIC_URL + `/images/${transport}${localStorage.theme === 'dark' ? '_LIGHT' : ''}.svg`} alt={getTransportByLineID(train.lineRef.replace(/:$/, '').split(':').pop())} className=\"h-5 lg:h-10 mr-1\" />\r\n              }\r\n              <LineLogoByLineID lineID={train.lineRef.replace(/:$/, '').split(':').pop()} className=\"h-5 lg:h-10\" />\r\n            </div>\r\n            <div className=\"lg:flex w-full\">\r\n              <div className=\"text-[8px] lg:text-xs flex flex-row lg:flex-col items-center justify-center w-12 lg:w-20\">\r\n                <div className=\"flex flex-row lg:flex-col items-center justify-start w-12 lg:w-20 gap-2\">\r\n                  <h3>{train.vehicleJourneyNote}</h3>\r\n                  <h3>{train.vehicleJourneyName}</h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex-grow overflow-hidden lg:ml-4\">\r\n                <h2 className='font-bold text-[11px] lg:text-lg line-clamp-2'>\r\n                  {train.destinationName}\r\n                </h2>\r\n              </div>\r\n            </div>\r\n            {((train.ArrivalStatus !== 'onTime' || train.departureStatus !== 'onTime') || (train.expectedArrivalTime && !train.expectedDepartureTime)) &&\r\n              <div className={`px-2 py-1 rounded-full text-xs lg:text-baseshrink-0`}>\r\n                {train.expectedArrivalTime && !train.expectedDepartureTime ? ' (Terminus)' : ''}\r\n                {train.ArrivalStatus !== 'onTime' ? train.ArrivalStatus : ''} {train.departureStatus !== 'onTime' ? train.departureStatus : ''}\r\n              </div>\r\n            }\r\n            {train.arrivalPlatform &&\r\n              <div className=\"w-6 lg:w-10 flex justify-center items-center text-xs lg:text-base bg-white border font-bold border-slate-800 rounded-md z-10 shrink-0\">\r\n                {train.arrivalPlatform ? `${train.arrivalPlatform}` : ''}\r\n              </div>\r\n            }\r\n\r\n            <div className=\"w-16 lg:w-20 pr-2 text-right shrink-0\">\r\n              <p className={`text-sm lg:text-2xl font-bold ${train.expectedArrivalTime && !train.expectedDepartureTime ? 'text-gray-500' : ''} ${train.minutesFromNow <= 0 ? 'animate-pulse text-green-500' : ''}`}>{train.vehicleAtStop ? 'à quai' : (isNaN(train.minutesFromNow) ? '' : train.minutesFromNow + 'ᵐⁱⁿ')}</p>            \r\n                <p className=\"text-xs lg:text-sm text-right text-gray-400 dark:text-white\">\r\n                {\r\n                  train.expectedArrivalTime ?\r\n                    `${new Date(train.expectedArrivalTime).toLocaleTimeString()}` :\r\n                    (train.expectedDepartureTime ?\r\n                      `${new Date(train.expectedDepartureTime).toLocaleTimeString()}` :\r\n                      `${new Date(train.aimedArrivalTime).toLocaleTimeString()}`\r\n                    )\r\n                }\r\n              </p>\r\n            </div>\r\n            <div\r\n              className=\"absolute top-0 right-0 bottom-0 left-0 lg:left-0 bg-gradient-to-r from-transparent to-white dark:to-gray-700\"\r\n              style={{\r\n                backgroundImage: `linear-gradient(to right, transparent, rgba(${parseInt(getLineColorByLineID(train.lineRef.replace(/:$/, '').split(':').pop()).slice(0, 2), 16)}, ${parseInt(getLineColorByLineID(train.lineRef.replace(/:$/, '').split(':').pop()).slice(2, 4), 16)}, ${parseInt(getLineColorByLineID(train.lineRef.replace(/:$/, '').split(':').pop()).slice(4, 6), 16)}, 0.1))`\r\n              }}\r\n            />\r\n          </div>\r\n        )\r\n      })}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrainInfo;","import React, { useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getStationNameByStationID, getLineNameByLineID } from '../utils/dataHelpers';\r\n\r\nfunction Breadcrumb({ lineID, stationID }) {\r\n  const navRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const resizeListener = () => {\r\n      const classList = navRef.current.classList;\r\n      classList.toggle('flex-col', navRef.current.offsetWidth <= 200);\r\n      classList.toggle('sm:flex-row', navRef.current.offsetWidth > 200);\r\n    };\r\n\r\n    window.addEventListener('resize', resizeListener);\r\n    resizeListener();\r\n\r\n    return () => window.removeEventListener('resize', resizeListener);\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"flex sm:flex-row h-10 pl-4 bg-white dark:bg-gray-800 dark:text-white border-b border-gray-700 dark:border-gray-400\" ref={navRef} aria-label=\"Breadcrumb\">\r\n      <ol className=\"inline-flex items-center space-x-1 md:space-x-3 flex-none\">\r\n        {lineID && (\r\n          <li>\r\n            <div className=\"flex items-center\">\r\n              <svg className=\"w-3 h-3 text-gray-400 xl:mx-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 9 4-4-4-4\" />\r\n              </svg>\r\n              <Link to={`/line/${lineID}`} className=\"mx-1 text-xs lg:text-sm font-medium hover:text-blue-600 md:ml-2\">\r\n                {getLineNameByLineID(lineID)}\r\n              </Link>\r\n              {stationID && (\r\n                <svg className=\"w-3 h-3 text-gray-400 xl:mx-1 mr-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                  <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 9 4-4-4-4\" />\r\n                </svg>\r\n              )}\r\n            </div>\r\n          </li>\r\n        )}\r\n      </ol>\r\n      {stationID && (\r\n        <ol className=\"inline-flex items-center space-x-1 md:space-x-3 w-full sm:w-auto\">\r\n          <li aria-current=\"page\">\r\n            <div className=\"flex items-center\">\r\n              <Link to={`/station/${stationID}`} className=\"text-xs lg:text-sm font-medium text-gray-500 hover:text-blue-600 md:ml-2 line-clamp-1\">\r\n                {getStationNameByStationID(stationID)}\r\n              </Link>\r\n            </div>\r\n          </li>\r\n        </ol>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Breadcrumb;","import React, { useState } from 'react';\r\n\r\nconst AddFav = () => {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setClicked(!clicked);\r\n  };\r\n\r\n  // <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 22 20\">\r\n  //   <path d=\"M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z\"/>\r\n  // </svg>\r\n  return (\r\n    <button onClick={handleClick} aria-label={clicked ? 'Remove from favorites' : 'Add to favorites'}>\r\n      {clicked ? (\r\n        <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 14 20\">\r\n          <path d=\"M13 20a1 1 0 0 1-.64-.231L7 15.3l-5.36 4.469A1 1 0 0 1 0 19V2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v17a1 1 0 0 1-1 1Z\" />\r\n        </svg>\r\n      ) : (\r\n        <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 4 15\">\r\n          <path d=\"M3.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm0 6.041a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm0 5.959a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z\" />\r\n        </svg>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddFav;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { checkDisruptions } from './Trafic';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AddFav from './elements/fav'\r\nimport { getStationNameByStationID, getTransportByLineID, LineLogoByLineID } from '../utils/dataHelpers';\r\n\r\nfunction StationInfo({ lineID, stationID }) {\r\n    const navigate = useNavigate();\r\n    const handleNavigate = () => {\r\n        navigate(`/line/${lineID}`);\r\n    };\r\n\r\n    // Fetch & check disruptions\r\n    const [disruptedLines, setDisruptedLines] = useState([]);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchDisruptions = async () => {\r\n            const { disruptedLines } = await checkDisruptions();\r\n            setDisruptedLines(disruptedLines);\r\n        };\r\n\r\n        fetchDisruptions();\r\n    }, []);\r\n\r\n    // Check if line is disrupted\r\n    const disrupted = disruptedLines.some(line => line.lineId === 'line:IDFM:' + lineID && line.disrupted === true);\r\n\r\n    // Display station header\r\n    return (\r\n        <div className=\"flex items-center bg-white dark:bg-gray-800 dark:text-white border-gray-900 dark:border-gray-800 border-solid border p-2 lg:p-4 mb-2 lg:mb-4 rounded-b-lg shadow-md min-h-[52px]\" onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>\r\n            {disrupted && (\r\n                <span className=\"relative\">\r\n                    {isHovered && (\r\n                        <div data-popover id=\"popover-top\" role=\"tooltip\" className=\"absolute z-10 inline-block w-40 lg:w-80 text-sm text-gray-500 transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm opacity-100 dark:text-gray-400 dark:border-gray-600 dark:bg-gray-800\">\r\n                            <div className=\"px-3 py-2 bg-gray-100 border-b border-gray-200 rounded-t-lg dark:border-gray-600 dark:bg-gray-700 flex flex-row\">\r\n                                <h3 className=\"flex-grow font-semibold text-gray-900 dark:text-white\">{disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.cause}</h3>\r\n                            </div>\r\n                            <div className=\"px-3 py-2\">\r\n                                <p>{disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.title}</p>\r\n                                <a class=\"bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 hover:dark:bg-gray-600 font-medium rounded-lg text-xs px-3 mt-3 text-center inline-flex items-center cursor-pointer\" onClick={handleNavigate}>\r\n                                    <svg class=\"-ml-0.5 mr-2 h-3 w-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 14\">\r\n                                        <path d=\"M10 0C4.612 0 0 5.336 0 7c0 1.742 3.546 7 10 7 6.454 0 10-5.258 10-7 0-1.664-4.612-7-10-7Zm0 10a3 3 0 1 1 0-6 3 3 0 0 1 0 6Z\" />\r\n                                    </svg>\r\n                                    En savoir plus\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <span className=\"absolute top-[-1rem] right-[-0.4rem] lg:top-[-1.8rem] lg:right-[-0.7rem]\">\r\n                        <span className=\"relative flex h-3 w-3 lg:h-5 lg:w-5\">\r\n                            <span className={`animate-ping absolute inline-flex h-full w-full rounded-full opacity-75 ${disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.severity === 'BLOQUANTE' ? 'bg-red-600' : 'bg-yellow-400'}`}></span>\r\n                            <span className={`relative inline-flex rounded-full h-3 w-3 lg:h-5 lg:w-5 ${disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.severity === 'BLOQUANTE' ? 'bg-red-600' : 'bg-yellow-400'}`}></span>\r\n                        </span>\r\n                    </span>\r\n                </span>\r\n            )}\r\n            <img src={process.env.PUBLIC_URL + `/images/${getTransportByLineID(lineID)}${localStorage.theme === 'dark' ? '_LIGHT' : ''}.svg`} alt={getTransportByLineID(lineID)} className=\"h-5 lg:h-10 mr-1\" />\r\n            <LineLogoByLineID lineID={lineID} className=\"h-5 lg:h-10 mr-2 lg:mr-4\" />\r\n            <p className='text-xs lg:text-base font-medium flex-grow line-clamp-2'>{getStationNameByStationID(stationID)}</p>\r\n            <p className='text-slate-400 text-xs font-bold pr-0.5 lg:pr-2'>\r\n                <AddFav />\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StationInfo;","import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport StationInfo from '../components/stationHeader';\r\nimport TrainInfo from '../components/Timing2';\r\nimport Breadcrumb from \"../components/breadcrumb\";\r\nimport stationsData from '../data/emplacement-des-gares-idf.json';\r\n\r\nfunction Station() {\r\n    const { stationID } = useParams();\r\n    const stopArea = stationID\r\n    const [lines, setLines] = useState([]);\r\n\r\n    return (\r\n        <div className={`mx-auto ${lines.length === 1 ? 'grid grid-cols-1 max-w-screen-sm' : 'grid grid-cols-1 max-w-screen-lg'}`}>\r\n            {/* <StationInfo line={null} stationID={stopArea} /> */}\r\n            <TrainInfo line={null} stationName={stopArea} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Station;"],"names":["_ref","lineID","stationName","_useState","useState","_useState2","_slicedToArray","trainData","setTrainData","_useState3","_useState4","status","url","concat","useEffect","fetchData","setData","setStatus","fetch","headers","process","then","response","json","data","_data$Siri","_data$Siri$ServiceDel","_data$Siri$ServiceDel2","_data$Siri$ServiceDel3","_data$Siri$ServiceDel4","departures","Siri","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","filter","journey","_journey$MonitoredVeh","_journey$MonitoredVeh2","_journey$MonitoredVeh3","_journey$MonitoredVeh4","expectedDepartureTime","MonitoredVehicleJourney","MonitoredCall","ExpectedDepartureTime","VehicleAtStop","Date","map","_journey$MonitoredVeh5","_journey$MonitoredVeh6","_journey$MonitoredVeh7","_journey$MonitoredVeh8","_journey$MonitoredVeh9","_journey$MonitoredVeh10","_journey$MonitoredVeh11","_journey$MonitoredVeh12","_journey$MonitoredVeh13","_journey$MonitoredVeh14","_journey$MonitoredVeh15","_journey$MonitoredVeh16","_journey$MonitoredVeh17","_journey$MonitoredVeh18","_journey$MonitoredVeh19","_journey$MonitoredVeh20","_journey$MonitoredVeh21","_journey$MonitoredVeh22","_journey$MonitoredVeh23","_journey$MonitoredVeh24","_journey$MonitoredVeh25","_journey$MonitoredVeh26","_journey$MonitoredVeh27","_journey$MonitoredVeh28","_journey$MonitoredVeh29","_journey$MonitoredVeh30","_journey$MonitoredVeh31","_journey$MonitoredVeh32","_journey$MonitoredVeh33","_journey$MonitoredVeh34","_journey$MonitoredVeh35","_journey$MonitoredVeh36","_journey$MonitoredVeh37","_journey$MonitoredVeh38","_journey$MonitoredVeh39","_journey$MonitoredVeh40","_journey$MonitoredVeh41","_journey$MonitoredVeh42","_journey$MonitoredVeh43","_journey$MonitoredVeh44","_journey$MonitoredVeh45","_journey$MonitoredVeh46","_journey$MonitoredVeh47","_journey$MonitoredVeh48","time","lineRef","LineRef","value","operatorRef","OperatorRef","stopPointName","StopPointName","directionName","DirectionName","destinationName","DestinationName","vehicleJourneyNote","JourneyNote","vehicleJourneyName","VehicleJourneyName","TrainNumbers","TrainNumberRef","expectedArrivalTime","ExpectedArrivalTime","aimedArrival","AimedArrival","aimedArrivalTime","AimedArrivalTime","arrivalStatus","ArrivalStatus","departureStatus","DepartureStatus","vehicleAtStop","arrivalPlatform","ArrivalPlatformName","trainNumber","TrainNumber","minutesFromNow","Math","round","sort","a","b","catch","error","console","intervalId","setInterval","clearInterval","_jsx","className","children","train","index","transport","getTransportByLineID","split","pop","_jsxs","style","borderBottom","getLineColorByLineID","replace","src","localStorage","theme","alt","LineLogoByLineID","isNaN","toLocaleTimeString","backgroundImage","parseInt","slice","stationID","navRef","useRef","resizeListener","classList","current","toggle","offsetWidth","window","addEventListener","removeEventListener","ref","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Link","to","getLineNameByLineID","getStationNameByStationID","clicked","setClicked","onClick","class","_disruptedLines$find","_disruptedLines$find2","_disruptedLines$find3","_disruptedLines$find4","navigate","useNavigate","disruptedLines","setDisruptedLines","isHovered","setIsHovered","fetchDisruptions","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$checkDisruptio","wrap","_context","prev","next","checkDisruptions","sent","stop","apply","arguments","disrupted","some","line","lineId","onMouseEnter","onMouseLeave","id","role","find","disruption","cause","title","severity","AddFav","stopArea","useParams","lines","length","TrainInfo"],"sourceRoot":""}