{"version":3,"file":"static/js/761.e2182bc0.chunk.js","mappings":"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","sources":["components/breadcrumb.js","components/elements/fav.js","components/stationHeader.js","components/Timing4.js","pages/StationInfo.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getStationNameByStationID, getLineNameByLineID } from '../utils/dataHelpers';\r\n\r\nfunction Breadcrumb({ lineID, stationID }) {\r\n  const navRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const resizeListener = () => {\r\n      const classList = navRef.current.classList;\r\n      classList.toggle('flex-col', navRef.current.offsetWidth <= 200);\r\n      classList.toggle('sm:flex-row', navRef.current.offsetWidth > 200);\r\n    };\r\n\r\n    window.addEventListener('resize', resizeListener);\r\n    resizeListener();\r\n\r\n    return () => window.removeEventListener('resize', resizeListener);\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"flex sm:flex-row h-10 pl-4 bg-white dark:bg-gray-800 dark:text-white border-b border-gray-700 dark:border-gray-400\" ref={navRef} aria-label=\"Breadcrumb\">\r\n      <ol className=\"inline-flex items-center space-x-1 md:space-x-3 flex-none\">\r\n        {lineID && (\r\n          <li>\r\n            <div className=\"flex items-center\">\r\n              <svg className=\"w-3 h-3 text-gray-400 xl:mx-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 9 4-4-4-4\" />\r\n              </svg>\r\n              <Link to={`/line/${lineID}`} className=\"mx-1 text-xs lg:text-sm font-medium hover:text-blue-600 md:ml-2\">\r\n                {getLineNameByLineID(lineID)}\r\n              </Link>\r\n              {stationID && (\r\n                <svg className=\"w-3 h-3 text-gray-400 xl:mx-1 mr-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                  <path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"m1 9 4-4-4-4\" />\r\n                </svg>\r\n              )}\r\n            </div>\r\n          </li>\r\n        )}\r\n      </ol>\r\n      {stationID && (\r\n        <ol className=\"inline-flex items-center space-x-1 md:space-x-3 w-full sm:w-auto\">\r\n          <li aria-current=\"page\">\r\n            <div className=\"flex items-center\">\r\n              <Link to={`/station/${stationID}`} className=\"text-xs lg:text-sm font-medium text-gray-500 hover:text-blue-600 md:ml-2 line-clamp-1\">\r\n                {getStationNameByStationID(stationID)}\r\n              </Link>\r\n            </div>\r\n          </li>\r\n        </ol>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Breadcrumb;","import React, { useState } from 'react';\r\n\r\nconst AddFav = () => {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setClicked(!clicked);\r\n  };\r\n\r\n  // <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 22 20\">\r\n  //   <path d=\"M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z\"/>\r\n  // </svg>\r\n  return (\r\n    <button onClick={handleClick} aria-label={clicked ? 'Remove from favorites' : 'Add to favorites'}>\r\n      {clicked ? (\r\n        <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 14 20\">\r\n          <path d=\"M13 20a1 1 0 0 1-.64-.231L7 15.3l-5.36 4.469A1 1 0 0 1 0 19V2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v17a1 1 0 0 1-1 1Z\" />\r\n        </svg>\r\n      ) : (\r\n        <svg class=\"w-3 h-3 lg:w-5 lg:h-5 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 4 15\">\r\n          <path d=\"M3.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm0 6.041a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Zm0 5.959a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z\" />\r\n        </svg>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddFav;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { checkDisruptions } from './Trafic';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AddFav from './elements/fav'\r\nimport { getStationNameByStationID, getTransportByLineID, LineLogoByLineID } from '../utils/dataHelpers';\r\n\r\nfunction StationInfo({ lineID, stationID }) {\r\n    const navigate = useNavigate();\r\n    const handleNavigate = () => {\r\n        navigate(`/line/${lineID}`);\r\n    };\r\n\r\n    // Fetch & check disruptions\r\n    const [disruptedLines, setDisruptedLines] = useState([]);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchDisruptions = async () => {\r\n            const { disruptedLines } = await checkDisruptions();\r\n            setDisruptedLines(disruptedLines);\r\n        };\r\n\r\n        fetchDisruptions();\r\n    }, []);\r\n\r\n    // Check if line is disrupted\r\n    const disrupted = disruptedLines.some(line => line.lineId === 'line:IDFM:' + lineID && line.disrupted === true);\r\n\r\n    // Display station header\r\n    return (\r\n        <div className=\"flex items-center bg-white dark:bg-gray-800 dark:text-white border-gray-900 dark:border-gray-800 border-solid border p-2 lg:p-4 mb-2 lg:mb-4 rounded-b-lg shadow-md min-h-[52px]\" onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>\r\n            {disrupted && (\r\n                <span className=\"relative\">\r\n                    {isHovered && (\r\n                        <div data-popover id=\"popover-top\" role=\"tooltip\" className=\"absolute z-10 inline-block w-40 lg:w-80 text-sm text-gray-500 transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm opacity-100 dark:text-gray-400 dark:border-gray-600 dark:bg-gray-800\">\r\n                            <div className=\"px-3 py-2 bg-gray-100 border-b border-gray-200 rounded-t-lg dark:border-gray-600 dark:bg-gray-700 flex flex-row\">\r\n                                <h3 className=\"flex-grow font-semibold text-gray-900 dark:text-white\">{disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.cause}</h3>\r\n                            </div>\r\n                            <div className=\"px-3 py-2\">\r\n                                <p>{disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.title}</p>\r\n                                <a class=\"bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 hover:dark:bg-gray-600 font-medium rounded-lg text-xs px-3 mt-3 text-center inline-flex items-center cursor-pointer\" onClick={handleNavigate}>\r\n                                    <svg class=\"-ml-0.5 mr-2 h-3 w-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 14\">\r\n                                        <path d=\"M10 0C4.612 0 0 5.336 0 7c0 1.742 3.546 7 10 7 6.454 0 10-5.258 10-7 0-1.664-4.612-7-10-7Zm0 10a3 3 0 1 1 0-6 3 3 0 0 1 0 6Z\" />\r\n                                    </svg>\r\n                                    En savoir plus\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <span className=\"absolute top-[-1rem] right-[-0.4rem] lg:top-[-1.8rem] lg:right-[-0.7rem]\">\r\n                        <span className=\"relative flex h-3 w-3 lg:h-5 lg:w-5\">\r\n                            <span className={`animate-ping absolute inline-flex h-full w-full rounded-full opacity-75 ${disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.severity === 'BLOQUANTE' ? 'bg-red-600' : 'bg-yellow-400'}`}></span>\r\n                            <span className={`relative inline-flex rounded-full h-3 w-3 lg:h-5 lg:w-5 ${disruptedLines.find(line => line.lineId === 'line:IDFM:' + lineID)?.disruption.severity === 'BLOQUANTE' ? 'bg-red-600' : 'bg-yellow-400'}`}></span>\r\n                        </span>\r\n                    </span>\r\n                </span>\r\n            )}\r\n            <img src={process.env.PUBLIC_URL + `/images/${getTransportByLineID(lineID)}${localStorage.theme === 'dark' ? '_LIGHT' : ''}.svg`} alt={getTransportByLineID(lineID)} className=\"h-5 lg:h-10 mr-1\" />\r\n            <LineLogoByLineID lineID={lineID} className=\"h-5 lg:h-10 mr-2 lg:mr-4\" />\r\n            <p className='text-xs lg:text-base font-medium flex-grow line-clamp-2'>{getStationNameByStationID(stationID)}</p>\r\n            <p className='text-slate-400 text-xs font-bold pr-0.5 lg:pr-2'>\r\n                <AddFav />\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StationInfo;","import React, { useEffect, useState } from 'react';\r\nimport { getLineColorByLineID, LineLogoByLineID, getTransportByLineID } from '../utils/dataHelpers';\r\nimport LineSVG from './tools/createLineLogo';\r\n\r\nfunction TrainInfo({ lineID, stationName }) {\r\n  // Fetch train departure every 2 seconds\r\n  const [trainData, setTrainData] = useState([]);\r\n  const [status, setStatus] = useState('');\r\n  const [activeTab, setActiveTab] = useState('current');\r\n  const [selectedLogo, setSelectedLogo] = useState(null);\r\n\r\n  const calculateMinutesFromNow = (time) => {\r\n    return Math.floor((new Date(time) - new Date()) / 60000);\r\n  };\r\n\r\n  const url = `https://prim.iledefrance-mobilites.fr/marketplace/stop-monitoring?MonitoringRef=STIF:StopArea:SP:${stationName}:`;\r\n\r\n  useEffect(() => {\r\n    const fetchData = (url, setData, setStatus) => {\r\n      fetch(url, {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'apikey': process.env.REACT_APP_IDFM_API_KEY\r\n        }\r\n      })\r\n      .then(response => response.status === 404 ? null : response.json())\r\n      .then(data => {\r\n        const departures = data?.Siri?.ServiceDelivery?.StopMonitoringDelivery[0]?.MonitoredStopVisit?.map(journey => ({\r\n          lineRef: journey?.MonitoredVehicleJourney?.LineRef?.value,\r\n          operatorRef: journey?.MonitoredVehicleJourney?.OperatorRef?.value,\r\n          stopPointName: journey?.MonitoredVehicleJourney?.MonitoredCall?.StopPointName[0]?.value,\r\n          directionName: journey?.MonitoredVehicleJourney?.DirectionName[0]?.value,\r\n          destinationName: journey?.MonitoredVehicleJourney?.DestinationName[0]?.value,\r\n          vehicleJourneyName: journey?.MonitoredVehicleJourney?.JourneyNote[0]?.value,\r\n          expectedArrivalTime: journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedArrivalTime,\r\n          aimedArrival: journey?.MonitoredVehicleJourney?.MonitoredCall?.AimedArrival,\r\n          expectedDepartureTime: journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedDepartureTime,\r\n          aimedDepartureTime: journey?.MonitoredVehicleJourney?.MonitoredCall?.aimedDepartureTime,\r\n          arrivalStatus: journey?.MonitoredVehicleJourney?.MonitoredCall?.ArrivalStatus,\r\n          departureStatus: journey?.MonitoredVehicleJourney?.MonitoredCall?.DepartureStatus,\r\n          vehicleAtStop: journey?.MonitoredVehicleJourney?.MonitoredCall?.VehicleAtStop,\r\n          arrivalPlatform: journey?.MonitoredVehicleJourney?.MonitoredCall?.ArrivalPlatformName?.value,\r\n          trainNumber: journey?.MonitoredVehicleJourney?.TrainNumber?.TrainNumberRef[0]?.value,\r\n          minutesFromNow: calculateMinutesFromNow(journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedDepartureTime || journey?.MonitoredVehicleJourney?.MonitoredCall?.ExpectedArrivalTime),\r\n        }));\r\n\r\n        setData(departures.sort((a, b) => a.minutesFromNow - b.minutesFromNow));\r\n      })\r\n      .catch(error => console.error(error));\r\n    };\r\n\r\n    fetchData(url, setTrainData, setStatus);\r\n    const intervalId = setInterval(() => fetchData(url, setTrainData, setStatus), 2000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  if (status === 'NO_REALTIME_SCHEDULES_FOUND') {\r\n    return <div className=\"flex items-center justify-center text-center text-xs lg:text-base bg-white dark:bg-gray-700 dark:text-gray-200 rounded-lg shadow-md p-4 mb-3 h-[44px] lg:h-[72px]\"><p className='animate-pulse'>Information en direct indisponible</p></div>;\r\n  }\r\n\r\n\r\n\r\n  const groupedData = trainData.reduce((acc, train) => {\r\n    const lineRef = train.lineRef;\r\n\r\n    if (!acc[lineRef]) {\r\n      acc[lineRef] = {};\r\n    }\r\n\r\n    const destination = train.destinationName;\r\n\r\n    if (!acc[lineRef][destination]) {\r\n      acc[lineRef][destination] = [];\r\n    }\r\n\r\n    acc[lineRef][destination].push(train);\r\n\r\n    return acc;\r\n  }, {});\r\n\r\n  // Afficher les départs de train groupés par ligne et destination\r\n  return (\r\n    <div className=\"\">\r\n      {Object.entries(groupedData).map(([lineRef, destinations]) => (\r\n        <div key={lineRef}>\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <img src={process.env.PUBLIC_URL + `/images/${getTransportByLineID(lineRef.split(\"::\").pop().split(\":\")[0])}${localStorage.theme === 'dark' ? '_LIGHT' : ''}.svg`} alt={getTransportByLineID(lineRef.split(\"::\").pop().split(\":\")[0])} className=\"h-5 lg:h-10 mr-1\" />\r\n            <LineLogoByLineID lineID={lineRef.split(\"::\").pop().split(\":\")[0]} className=\"h-5 lg:h-10\"/>\r\n          </div>\r\n          {Object.entries(destinations).sort(([a], [b]) => a.localeCompare(b)).map(([destination, trains]) => (\r\n            <div key={destination} className=\"flex items-center bg-white border-gray-400 dark:text-white dark:bg-gray-700 min-h-[44px] max-h-[72px] p-1 lg:p-4\">\r\n              <div className=\"ml-2 lg:ml-4 text-sm lg:text-base\">\r\n                <p>{destination}</p>\r\n              </div>\r\n              <div className=\"ml-auto\">\r\n                {trains.map((train, index) => (\r\n                  <span key={index} className=\"mr-2 text-sm lg:text-base bg-gray-800 text-yellow-500 rounded py-2 px-2\">\r\n                    {train.minutesFromNow}m\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrainInfo;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport StationInfo from '../components/stationHeader';\r\nimport TrainInfo from '../components/Timing4';\r\nimport Breadcrumb from \"../components/breadcrumb\";\r\nimport stationsData from '../data/emplacement-des-gares-idf.json';\r\n\r\nfunction Station() {\r\n    const { stationID } = useParams();\r\n    const stopArea = stationID\r\n    const [lines, setLines] = useState([]);\r\n\r\n    return (\r\n        <div className={`mx-auto ${lines.length === 1 ? 'grid grid-cols-1 max-w-screen-sm' : 'grid grid-cols-1 max-w-screen-lg'}`}>\r\n            {/* <StationInfo line={null} stationID={stopArea} /> */}\r\n            <TrainInfo line={null} stationName={stopArea} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Station;"],"names":["_ref","lineID","stationID","navRef","useRef","useEffect","resizeListener","classList","current","toggle","offsetWidth","window","addEventListener","removeEventListener","_jsxs","className","ref","children","_jsx","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Link","to","concat","getLineNameByLineID","getStationNameByStationID","_useState","useState","_useState2","_slicedToArray","clicked","setClicked","onClick","class","_disruptedLines$find","_disruptedLines$find2","_disruptedLines$find3","_disruptedLines$find4","navigate","useNavigate","disruptedLines","setDisruptedLines","_useState3","_useState4","isHovered","setIsHovered","fetchDisruptions","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$checkDisruptio","wrap","_context","prev","next","checkDisruptions","sent","stop","apply","arguments","disrupted","some","line","lineId","onMouseEnter","onMouseLeave","id","role","find","disruption","cause","title","severity","src","process","getTransportByLineID","localStorage","theme","alt","LineLogoByLineID","AddFav","stationName","trainData","setTrainData","status","_useState5","_useState6","_useState7","_useState8","url","fetchData","setData","setStatus","fetch","headers","then","response","json","data","_data$Siri","_data$Siri$ServiceDel","_data$Siri$ServiceDel2","_data$Siri$ServiceDel3","departures","Siri","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","map","journey","_journey$MonitoredVeh","_journey$MonitoredVeh2","_journey$MonitoredVeh3","_journey$MonitoredVeh4","_journey$MonitoredVeh5","_journey$MonitoredVeh6","_journey$MonitoredVeh7","_journey$MonitoredVeh8","_journey$MonitoredVeh9","_journey$MonitoredVeh10","_journey$MonitoredVeh11","_journey$MonitoredVeh12","_journey$MonitoredVeh13","_journey$MonitoredVeh14","_journey$MonitoredVeh15","_journey$MonitoredVeh16","_journey$MonitoredVeh17","_journey$MonitoredVeh18","_journey$MonitoredVeh19","_journey$MonitoredVeh20","_journey$MonitoredVeh21","_journey$MonitoredVeh22","_journey$MonitoredVeh23","_journey$MonitoredVeh24","_journey$MonitoredVeh25","_journey$MonitoredVeh26","_journey$MonitoredVeh27","_journey$MonitoredVeh28","_journey$MonitoredVeh29","_journey$MonitoredVeh30","_journey$MonitoredVeh31","_journey$MonitoredVeh32","_journey$MonitoredVeh33","_journey$MonitoredVeh34","_journey$MonitoredVeh35","_journey$MonitoredVeh36","_journey$MonitoredVeh37","time","lineRef","MonitoredVehicleJourney","LineRef","value","operatorRef","OperatorRef","stopPointName","MonitoredCall","StopPointName","directionName","DirectionName","destinationName","DestinationName","vehicleJourneyName","JourneyNote","expectedArrivalTime","ExpectedArrivalTime","aimedArrival","AimedArrival","expectedDepartureTime","ExpectedDepartureTime","aimedDepartureTime","arrivalStatus","ArrivalStatus","departureStatus","DepartureStatus","vehicleAtStop","VehicleAtStop","arrivalPlatform","ArrivalPlatformName","trainNumber","TrainNumber","TrainNumberRef","minutesFromNow","Math","floor","Date","sort","a","b","catch","error","console","intervalId","setInterval","clearInterval","groupedData","reduce","acc","train","destination","push","Object","entries","_ref3","destinations","style","display","alignItems","split","pop","_ref4","_ref5","localeCompare","_ref8","_ref9","trains","index","stopArea","useParams","lines","length","TrainInfo"],"sourceRoot":""}